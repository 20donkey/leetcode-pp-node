{"1":[],"2":[],"3":[],"4":[],"5":[],"6":[],"7":[],"8":[],"9":[],"10":[],"11":[],"12":[],"13":[],"14":[],"15":[],"16":[],"17":[],"18":[],"19":[],"20":[],"21":[],"22":[],"23":[],"24":[],"25":[],"26":[],"27":[],"28":[],"29":[],"30":[],"31":[],"32":[],"33":[],"34":[],"35":[],"36":[],"37":[],"38":[],"39":[],"40":[],"41":[],"42":[],"43":[],"44":[],"45":[],"46":[],"47":[],"48":[],"49":[],"50":[],"51":[],"52":[],"53":[],"54":[],"55":[],"56":[],"57":[],"58":[],"59":[],"60":[],"61":[],"62":[],"63":[],"64":[],"65":[],"66":[],"67":[],"68":[],"69":[],"70":[],"71":[],"72":[],"73":[],"74":[],"75":[],"76":[],"77":[],"78":[],"79":[],"80":[],"81":[],"82":[],"83":[],"84":[],"85":[],"86":[],"87":[],"88":[],"89":[],"90":[],"91":[],"839781960":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"954545647":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"1541732340":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"michaelxi3":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"darknightwriter":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"findlayzhou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"laofuwf":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lbc546":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zch-bit":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"frankelzeng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xingzhaodev":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joeymoso":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hackbl":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"q815101630":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shiyishuoshuo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aouos":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"thinkfurther":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wengzhouyunfan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"whisht":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bzlff":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzzkains":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chenmengyu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"uancen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nuomituxedo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhongranherz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gr52":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hydelovegood":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nikojxie":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fangxianshen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jokertzw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cyang258":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kernelsue":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"erikahuang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kuang-mou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"iloveqier":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"duke-github":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"caterpillar-0":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ashleyyma6":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yuki-yzy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zpc7":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yujian920":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kiirii4":[null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817528676","body":"### 思路\n可以通过vector容器实现栈的基本功能，除``increment``方法外，时间复杂度均为``O(1)``，increment方法因为遍历栈，所以时间复杂度为``O(lim)``\n通过一额外数组存储栈中每一元素的加值，并在pop时将元素加上其加值，一同返回，可避免遍历\n### 代码\n```c++\nclass CustomStack {\npublic:\n    vector<int> stk;\n    vector<int> add;\n    int top;\n\n    CustomStack(int maxSize) {\n        stk.resize(maxSize);\n        add.resize(maxSize);\n        top = -1;\n    }\n    \n    void push(int x) {\n        if(top != stk.size() - 1) {\n            ++top;\n            stk[top] = x;\n        }\n    }\n    \n    int pop() {\n        if(top == -1)\n            return -1; \n        int ret = stk[top] + add[top];\n        if(top != 0)\n            add[top - 1] += add[top];\n        add[top] = 0;\n        --top;\n        return ret;\n    }\n    \n    void increment(int k, int val) {\n        int lim = min(k - 1, top);\n        if(lim >= 0)\n            add[lim] += val;\n    }\n};\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817874820","body":"### 思路\n使用递归，遇到数字，记录至multi，遇到字母，将其加入本层的字符串中，遇到\"[\"进入新的一层递归，并将下一层返回的字符串重复multi次加至本层的字符串中，遇到“]”返回本层字符串\n### 代码\n```c++\nclass Solution {\npublic:\n    string decodeString(string s) {\n        int i = 0;\n        return dfs(s, i);\n    }\n\n    string dfs(string &s, int &i){\n        int multi = 0;\n        string res = \"\";\n        for(; i < s.size(); ++i){\n            if('0' <= s[i] && s[i] <= '9')\n                multi = multi * 10 + (s[i] - '0');\n            else if(s[i] == '['){\n                string temp = dfs(s ,++i);\n                while(multi != 0){\n                    res += temp;\n                    --multi;\n                }\n            }\n            else if(s[i] == ']')\n                return res;\n            else\n                res += s[i];\n        }\n        return res;\n    }\n};\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818859160","body":"### 思路 \n区分了输入和输出栈，只有在输出栈为空时，才从输入栈中取元素压入，如此一来每一个元素最多被分别被压入压出2次\n### 代码\n```c++\nclass MyQueue {\npublic:\n    MyQueue() {\n\n    }\n    \n    void push(int x) {\n        stk1.push(x);\n    }\n    \n    int pop() {\n        int ret = 0;\n        if(stk2.empty())\n            in2out();\n        ret = stk2.top();\n        stk2.pop();\n        return ret;\n    }\n  \n    int peek() {\n        if( stk2.empty()){\n            in2out();\n        }\n        return stk2.top();\n    }\n    \n    bool empty() {\n        return stk1.empty() && stk2.empty();\n    }\nprivate:\n    stack<int> stk1;\n    stack<int> stk2;\n\n    void in2out(){\n        while(!stk1.empty()){\n            stk2.push(stk1.top());\n            stk1.pop();\n        }\n    }\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ucashurui":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xixiao51":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"feikerwu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"heng518":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yaya-bb":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tlntin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"richypang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fenchuiyun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jerry-lllman":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nickyk319":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"herbertpan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wsmmxmm":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fan-svg":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yuzejia":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sunnyyujf":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"phoenixflyingsky":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nehchsuy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lzyxts":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"elainekuo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ll491119940":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"2learnsomething":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ataraxyadong":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wzasd":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"miluowzt":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"maylinglin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weijie-he":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"brodxie":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"y525":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"leungogogo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"suukii":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mirrors-cl":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xqy97":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jakkiabc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luckyoneday":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chouqin99":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhaogeg111":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shawnhu23":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ye2222":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"uyplayer":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guixian001":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"serena9":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"junzmer":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hx-code":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"admu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xxiaomm":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pgquestions":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"eldinzhou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jiangwenzhe":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shawnwu6688":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tomtao626":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aiweng1981":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"richard-lime":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"acoada":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"duanyaqi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ccslience":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kaiykk":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cachezhou0617":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangtuo1999":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cytrue":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luckyryan-web":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"naomiwufzz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liuajingliu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"miss1":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"johnxizhao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"incipe-win":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"revisegoal":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luckysq999":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dereklisdr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"perfqi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mryao1":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"likeyousmile":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhg1992":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liquanluo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aq666888":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"samlu-ecnu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhongxiangxiang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hatorimain":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"neado":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiaojunjun1110":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wxleah":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sunl1ght":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kerrhl":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"orangejuz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"flyzenr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"c1f2h3":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dlm001128":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liuxy94":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aconcert":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"linjunhe":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hyqqq22":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yibenxiao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"elon-lau":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nowkizzz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gsgtgyb":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"irenia111":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"suiyi8760":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"saltychess":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rabbit2010520":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ellie-wu05":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yopming":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luckytwj":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzz607":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zoulufeng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xxoojs":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"okkband":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wyz999":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hacker90":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ricjli":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luhaoling":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"flaming-cl":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gelxgx":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gaominghao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jessie725":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lsunxh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lanceli424":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qycoder":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qilin88":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hengheng-yun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"smz1995":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"size-of":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"moyuanhua":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"9vivian88":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guxuehua":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kirosola":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"biscuit279":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"maoting":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"youzhaing":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jawn-ha":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hanwangxxx":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dujt-x":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"degndaixingqiu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gzgzgzgzgzgz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gentleman-goodman":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xinyi-arch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zenwangzy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"andyyxw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fourierhai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yangz001":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mannnn6":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"haoyangxie":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chjillout":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wenjialu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mhcn":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"coconutice":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jackgaoyuan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xingzhan0312":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yufeng727":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fontendart":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yingchehu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cobayaz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tomato-tomato":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xfliudx":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"djd28176":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xilutian":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xy147":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"itsjacob":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shunanch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yppah-eb":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"raychenlei":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"woshichuanqilz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"willuuu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"christina-soda":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jia98shanliang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"user-vannnn":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tobepellucid":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"johnvsd":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yueza":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shawyuan97":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"victorhuang99":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cusanity":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jay-xzj":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shiradaone":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xinyue-ma":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"taojin1992":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joyce94":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"steven72574":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tian-pengfei":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"asuka1h":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiaowangcoding":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"james0608":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kaneyang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"azl397985856":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"whgsh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chengfengfengwang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bulingbulingbuling":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"c2tr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"eden-ye":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"codingtrains":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"starorbiting":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mo-xiaoxiu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"passengersa":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shellylcooper":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"testplm":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tom-zhouch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"skylarxu214":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"taihui":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huaxueguakele":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yang-chenyu104":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mlking15":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"-3":[],"cyonline":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rzhao010":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zywang0":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jetery":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"klspta":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bookyue":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jancerwu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"buer1121":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ceramickitten":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gg925407590":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alyenor":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chenming-cao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ggohem":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dark-volute":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ronething":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jmastella":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"paopaohua":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dd2001":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mayloveless":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yuexi001":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nineis7":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"abby-xu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gsw9818":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiaomingshixiaotang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"snmyj":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814727714","body":"```\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        vector<int> kvet,res;\n        while(k>=1){\n            kvet.push_back(k%10);\n            k/=10;\n        }\n        reverse(kvet.begin(),kvet.end());\n        int n=num.size(),m=kvet.size(),cnt;\n        if(n>=m){\n            cnt=0;\n            for(int i=m-1,j=n-1;i>=0;i--,j--){\n                int a=num[j]+kvet[i]+cnt;\n                if(a>=10) {\n                    res.push_back(a-10);\n                    cnt=1;\n                }\n                else {\n                    res.push_back(a);\n                    cnt=0;\n                }\n            }\n            for(int i=n-m-1;i>=0;i--){\n                int a=num[i]+cnt;\n                if(a>=10) {\n                    res.push_back(a-10);\n                    cnt=1;\n                }\n                else {\n                    res.push_back(a);\n                    cnt=0;\n                }\n            }\n        }\n        else if(n<m){\n            cnt=0;\n            for(int i=n-1,j=m-1;i>=0;i--,j--){\n                int a=num[i]+kvet[j]+cnt;\n                if(a>=10) {\n                    res.push_back(a-10);\n                    cnt=1;\n                }\n                else {\n                    res.push_back(a);\n                    cnt=0;\n                }\n            }\n            for(int i=m-n-1;i>=0;i--){\n                int a=kvet[i]+cnt;\n                if(a>=10) {\n                    res.push_back(a-10);\n                    cnt=1;\n                }\n                else {\n                    res.push_back(a);\n                    cnt=0;\n                }\n            }\n        }\n        if(cnt!=0) res.push_back(cnt);\n        reverse(res.begin(),res.end());\n        return res;\n    }\n};\nT:max(m,n)+n\nS:o(n)\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816671054","body":"```c++\nclass Solution {\npublic:\n    vector<int> shortestToChar(string s, char c) {\n        int n=s.length();\n        \n        vector<int> res;\n        for(int i=0;i<n;i++){\n           \n            if(s[i]==c) res.push_back(0);\n            else{\n                 for(int p=1;;p++){\n                     if(i+p<n){\n                     if((s[i+p]==c)&&(i+p)<n) {\n                         res.push_back(p);\n                         break;\n                     }\n                     }\n                     if(i-p>=0){\n                    if((s[i-p]==c)&&(i-p)>=0){\n                        res.push_back(p);\n                        break;\n                    }\n                     }\n                 }\n                \n                \n            }\n            \n        }\n        return res;\n    }\n};\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817543805","body":"```\nclass CustomStack {\npublic:\n    vector<int> s;\n    int len=0,maxlen;\n    CustomStack(int maxSize) {\n            maxlen=maxSize;\n    }\n    \n    void push(int x) {\n        if(len<maxlen){\n        s.push_back(x);\n        len++;\n        }\n       \n    }\n    \n    int pop() {\n        if(len>0) {\n          int temp=s[len-1];\n          s.pop_back();\n        \n        len--;\n        return temp;\n        }\n        return -1;\n    }\n    \n    void increment(int k, int val) {\n            if(k<=len) {\n                for(int i=0;i<k;i++) s[i]+=val;\n            }\n            else {\n                for(int i=0;i<s.size();i++) s[i]+=val;\n            }\n    }\n};\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817894914","body":"class Solution {\npublic:\n    string decodeString(string s) {\n        stack<char> ss;\n        string ans=\"\",re=\"\",rereverse=\"\";\n        int sign=0,cnt=0;\n        for(int i=0;i<s.size();i++){\n            ss.push(s[i]);\n        }\n        for(int t=s.size()-1;t>=0;t--){\n            if(sign==0&&ss.top()>='a'&&ss.top()<='z') {\n                ans+=ss.top();\n                ss.pop(); \n                continue;         \n              }\n            if(ss.top()==']'){\n                sign++;\n                ss.pop(); \n                continue;    \n            }\n            if(ss.top()=='[') {\n                sign--;\n                ss.pop();\n                continue;\n            }\n            if(sign!=0&&ss.top()>='a'&&ss.top()<='z') {\n                    re+=ss.top();\n                    ss.pop();\n                    continue;\n            }\n            if(ss.top()>='0'&&ss.top()<='9') {\n                cnt=ss.top()-'0';\n                ss.pop();\n                continue;\n            }\n            if(cnt!=0) {\n                for(int i=re.size()-1;i>=0;i--) rereverse+=re[i];\n                     if(sign==0){\n                            for(int j=cnt;j>0;cnt--){\n                                ans+=rereverse;\n                            }\n                     }      \n                     if(sign!=0){\n                            for(int j=cnt;j>0;cnt--){\n                                re+=rereverse;\n                            }\n                     }    \n                 \n            }\n            re=\"\";\n            rereverse=\"\";\n            cnt=0;\n            \n        }\n        return ans;\n    }\n};","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1819338983","body":"```\nclass MyQueue:\n\n    def __init__(self):\n        self.arr=[]\n    \n    def push(self, x: int) -> None:\n        self.arr.append(x)\n\n    def pop(self) -> int:\n        return self.arr.pop(0)\n\n    def peek(self) -> int:\n        return self.arr[0]\n        \n\n    def empty(self) -> bool:\n        return not self.arr\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1821197290","body":"```\nclass Solution {\npublic:\n    int maxChunksToSorted(vector<int>& arr) {\n        int n=arr.size(),max=0;;\n        for(int i=0;i<n;i++){\n            for(int j=n-1;j>=i;j--){\n                if(arr[j]<=arr[i]) {\n                    max++;\n                    for(int k=j-1;k>=i;k--){\n                        if(arr[k]==arr[j])\n                        max++;\n                        else if(arr[i]==arr[j]) {\n                            \n                            if(arr[k]==arr[j]){\n                                max++;\n                                j=k;\n                            }\n                            \n                        }\n                    }\n                    if(j!=n-1){\n                    i=j;\n                    break;\n                    }\n                    \n                    return max;\n                   \n                }\n            }\n        }\n        return max;\n    }\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"flipn9":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wabw1":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xqmmy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"a-pricity":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sclihuiming":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"amazeding":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"astrking":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tzuikuo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ringo1597":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"brucezhang-utf-8":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luanxing":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"moin-jer":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lihua1997":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cuizezhou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xuanaxuan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tiandao043":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"restlessbreeze":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ruikiwi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huiminren":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"saitochen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wtdcai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"albert556":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wuxiaoshawn":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zrtch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhuzhu096":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"whoam-challenge":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weisday":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"syh-coder":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiaaller":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kyrie96521":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cavecrypto":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cxgbro":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"erjian96":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"a-polarbear":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alexno1no2":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yetfan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhiyuanpeng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bwspsu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"arinzz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mdge":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"allenfeng666":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yin02":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"elsa-zhang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"asur4s":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"littlesugarman":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhihaowan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"apockira":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guowei0223":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shuqianyang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sj941127":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zjsuper":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yongxi-zhou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"darwintk":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"h-steven":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mischaqi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wurongronga":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"miduoliu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luckyshenzhengkang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"y4h2":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yoco323":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"forschers":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shanshuiqiankun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"annabellhyx":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hwfrankfung":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"frederickfan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huibinny":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ggmybro":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"myleetcodejourney":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"want2333":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"staringwhere":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"allenfeng8":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ryanbaiyansong":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dou-yu-xuan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hyxupup":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cs12300":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chiehw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aesir-idun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kaldsk12":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hxj2001":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"for123s":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzhilin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yfu6":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mengsixing":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"import-ant":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joriscai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangqianqian202301":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"airwalkers":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhumengcheng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kofzhang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"leonalhq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hjy-u":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"csthaha":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zepherust":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"feefeefee":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hughlin07":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huizsh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chanceyliu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hshen11":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"horace7":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangzh0114":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dragonfcl":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huifeng248":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sarah11qing":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"el1as7":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zcytm3000":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pangjiadai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xb798298436":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ywang525":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"limbo42":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dorapocket":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zoeyzyzyzy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jasonqiu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lp1506947671":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"texamc2":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joemonkeylee":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"northseacoder":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dominique9898":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wl678":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"meisgithub":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sye9286":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fuku-l":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kangliqi1":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"richardtaok":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chocolate-emperor":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lydia61":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangjiahuan17":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"seanutf":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangyong-hub":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"erquaner":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jiujingxukong":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"x1aox1a":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"drinkmorekaik":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dinjufen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yuzmt":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"munmust":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yan-jie":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hktangshuo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zpbc007":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"linlizzz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"krabbejing":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"firehaosky":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chao-cc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jinjin680":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cruiseyugh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"quieter2018":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jadeliu13":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiaoq777":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jiangyanlineu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liuxiner":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yufanzh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"franciszq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kangqinsen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"manwzy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jerry9926":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"soso1105":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pkuphy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhenya-zhu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wty9sky":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"skyoct":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bingzxy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiaodingc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jyjsunny":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aoxiangw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"enrilwang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aswrise":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aneureka":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ljqchlsw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jingyuzhou123":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dianlandu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jameswangxin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhenxied":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nuozhouzhang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shin-guid":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bochengwan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kyo-tom":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"uratora":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guitarys":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sosdogecoin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zol013":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lrwhc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wwewwt":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cyk1337":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangyu1131":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"diana21170648":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"61hhh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"quaaaaaack":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"acy925":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bi9potato":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guangsizhongbin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhaoygcq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"catkathy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yqycs":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhuxinyu-znb":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"freesan44":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mo660":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sencc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"randong22":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"beginner-jamji":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yzhyzhyzh123":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sunstrongchina":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dongzegithub":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"metsystem":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"miller-em":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dorian-byte":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yizhewill":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qiaojunch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhouliuhuo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"beanza":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kingxiaozhe":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ygnauh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wzbwzt":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"iambigchen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weiboshi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"master-guang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jennyjgao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangjay408":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chang-you":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rocjemaintiendrai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ainfinitedz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"christ36":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hengistchan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huiyingc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"andyli4":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"momogir":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jamjid":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"freeroo2":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1812927006","body":"### 思路\r\n\r\n直接模拟竖式加法，没有想到reverse，代码写的有点啰嗦\r\n\r\n### 代码\r\n\r\n\r\n```java\r\npublic List<Integer> addToArrayForm(int[] num, int k) {\r\n            int length = num.length;\r\n            List<Integer> res = new ArrayList<>();\r\n            int plus = 0;\r\n            int i = length - 1;\r\n            for (; i >= 0 && k > 0; i--) {\r\n                int t = k % 10;\r\n                k /= 10;\r\n                num[i] += t + plus;\r\n                plus = 0;\r\n                if (num[i] >= 10) {\r\n                    plus = 1;\r\n                    num[i] %= 10;\r\n                }\r\n            }\r\n            // 如果k=0，说明k位数小于num，可能会进位\r\n            if (k == 0) {\r\n                if (plus == 1) {\r\n                    while (i >= 0 && plus == 1) {\r\n                        num[i]++;\r\n                        plus = 0;\r\n                        if (num[i] >= 10) {\r\n                            plus = 1;\r\n                            num[i] %= 10;\r\n                        }\r\n                        i--;\r\n                    }\r\n                    if (plus == 1) {\r\n                        res.add(1);\r\n                    }\r\n                }\r\n                for (int j = 0; j < length; j++) {\r\n                    res.add(num[j]);\r\n                }\r\n            }\r\n            // 如果i<0，k>0,说明k位数大于num\r\n            else if (i < 0 && k > 0) {\r\n                k += plus;\r\n                Stack<Integer> st = new Stack<>();\r\n                while (k > 0) {\r\n                    st.add(k % 10);\r\n                    k /= 10;\r\n                }\r\n                while(!st.empty()) {\r\n                    res.add(st.pop());\r\n                }\r\n                for (int j = 0; j < length; j++) {\r\n                    res.add(num[j]);\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n\r\n```\r\n\r\n**复杂度分析**\r\n- 时间复杂度：O(N)，其中 N 为数组长度。\r\n- 空间复杂度：O(1)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816416461","body":"### 思路\n使用last记录上次遇到c的位置，从左向右遍历字符串，只需在每次遇到c时更新last~当前c之间的元素的距离\n注意遇到第一个c之前的所有最短距离只能是第一个c的index减去i\n注意只有在遇到c时才会更新上一个区间，故可能会有最后一个c之后到最后一个字符这个区间没有被更新，需要处理\n\n### 代码\n\n\n```java\n    class Solution {\n        public int[] shortestToChar(String s, char c) {\n            int last = -1;\n            int n = s.length();\n            int[] ans = new int[n];\n            for (int i = 0; i < n; i++) {\n                if (s.charAt(i) == c) {\n                    int j = last + 1;\n                    while (j <= i) {\n                        if (last == -1) {\n                            ans[j] = i - j;\n                        } else {\n                            ans[j] = Math.min(i - j, j - last);\n                        }\n                        j++;\n                    }\n                    last = i;\n                }\n            }\n            if (last != n - 1) {\n                for (int j = last + 1; j < n; j++) {\n                    ans[j] = j - last;\n                }\n            }\n            return ans;\n        }\n    }\n}\n\n\n```\n\n**复杂度分析**\n- 时间复杂度：O(N)，其中 N 为数组长度。\n- 空间复杂度：O(1) 除返回结果外不需要额外空间\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817505207","body":"```java\r\nclass CustomStack {\r\n        private int[] array;\r\n        private int pointer; // 指向下一个栈顶元素该放入的下标\r\n\r\n        public CustomStack(int maxSize) {\r\n            array = new int[maxSize];\r\n            pointer = 0;\r\n        }\r\n\r\n        public void push(int x) {\r\n            if (pointer < array.length) {\r\n                array[pointer] = x;\r\n                pointer++;\r\n            }\r\n        }\r\n\r\n        public int pop() {\r\n            int res = -1;\r\n            if (pointer > 0) {\r\n                res = array[pointer - 1];\r\n                pointer--;\r\n            }\r\n            return res;\r\n        }\r\n\r\n        public void increment(int k, int val) {\r\n            if (k > pointer) {\r\n                for (int i = 0; i < pointer; i++) {\r\n                    array[i] = array[i] + val;\r\n                }\r\n            } else {\r\n                for (int i = 0; i < k; i++) {\r\n                    array[i] = array[i] + val;\r\n                }\r\n            }\r\n        }\r\n    }\r\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817881830","body":"### 代码\n```java\nclass Solution {\n    public String decodeString(String s) {\n        return dfs(s, 0)[0];\n    }\n    private String[] dfs(String s, int i) {\n        StringBuilder res = new StringBuilder();\n        int multi = 0;\n        while(i < s.length()) {\n            if(s.charAt(i) >= '0' && s.charAt(i) <= '9') \n                multi = multi * 10 + Integer.parseInt(String.valueOf(s.charAt(i))); \n            else if(s.charAt(i) == '[') {\n                String[] tmp = dfs(s, i + 1);\n                i = Integer.parseInt(tmp[0]);\n                while(multi > 0) {\n                    res.append(tmp[1]);\n                    multi--;\n                }\n            }\n            else if(s.charAt(i) == ']') \n                return new String[] { String.valueOf(i), res.toString() };\n            else \n                res.append(String.valueOf(s.charAt(i)));\n            i++;\n        }\n        return new String[] { res.toString() };\n    } \n}\n```\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1819157526","body":"### 思路\n用两个栈，一个输入栈一个输出栈。每次入队操作直接push到输入栈，每次遇到pop/peek就尝试从输出栈输出，若没有元素可输出了，就将输入栈的所有元素全部出栈并依次push到输出栈中，这样输出栈就可以按照队列从前往后的顺序出栈了。\n### 代码\n```java\nclass MyQueue {\n        private Stack<Integer> in;\n        private Stack<Integer> out;\n\n        public MyQueue() {\n            in = new Stack<>();\n            out = new Stack<>();\n        }\n\n        public void push(int x) {\n            in.push(x);\n        }\n\n        public int pop() {\n            if (out.empty()) {\n                in2out();\n            }\n            return out.pop();\n        }\n\n        public int peek() {\n            if (out.empty()) {\n                in2out();\n            }\n            return out.peek();\n        }\n\n        public boolean empty() {\n            return in.isEmpty() && out.isEmpty();\n        }\n\n        public void in2out() {\n            while (!in.isEmpty()) {\n                out.push(in.pop());\n            }\n        }\n    }\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820154313","body":"### 思路\n- 如果遇到比当前栈顶大的数，就压入栈\n- 如果遇到比当前栈顶小的数，就将栈中比该元素大的数清空，然后将被清空的数中最大的值（即原栈顶）压入栈中，也就是将num合并到当前块中\n- 也就是说取每一个块的最大值作为代表放在栈中，最后栈有多少个单调非递减元素就有多少个块\n### 代码\n```java\npublic int maxChunksToSorted(int[] arr) {\n            Stack<Integer> stack = new Stack<>();\n            for (int num :\n                    arr) {\n                if (stack.empty() || num >= stack.peek()) {\n                    stack.push(num);\n                } else {\n                    int max_num = stack.pop();\n                    while (!stack.empty() && stack.peek() > num) {\n                        stack.pop();\n                    }\n                    stack.push(max_num);\n                }\n//                System.out.println(stack.toString());\n            }\n            return stack.size();\n        }\n```\n### 复杂度\n时间复杂度 O(n)\n空间复杂度 O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ycan253":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1813575541","body":"## 思路\n\n1. 从数组的最高位开始（对应的是数字的最低位），使用数K和该位相加，得到的和的最低位就是所要求的最低位。\n\n2. 对这个和右移1位，丢弃掉最低位\n3. 重复这个过程，直到处理完数组为止\n\n处理完数组后，还需要对剩下的和进行处理，有两种情况：\n\n1. 剩下的和没有进位，无需处理，如最高为数组为[1]，数位8，则和为9，没有进位\n2. 剩下的和产生了进位，如\n   - 最高位数组为[7], 数为7，则和为14\n   - 最高位数组为[7]，数为97，则和为104（也对应数组长度为1的情况）\n\n​\t这两种情况，需要把这个和列表化。\n\n## 代码\n\n```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        rem = k\n        for i in range(len(num) - 1, -1, -1):\n            num[i], rem = (rem + num[i]) % 10, (rem + num[i]) // 10\n            \n    \t# 这部分注释是分情况的代码\n        # if rem == 0: # 最高位没有进位\n        #     return num  \n        # elif 0 < rem < 10: # 最高位加法结果有进位\n        #     return [rem] + num\n        # else: # 处理num长度为1的情况\n        #     res = []\n        #     while rem > 0:\n        #         res = [rem % 10] + res\n        #         rem = rem // 10\n        #     return res + num\n         \n        # 下面的代码是统一处理的情况\n        # 处理有最高位和有进位的情况\n        while rem > 0:\n            num = [rem % 10] + num\n            rem = rem // 10\n        return num \n\n\n```\n\n## 复杂度分析\n\n时间复杂度：$O(n)$\n\n空间复杂度：$O(1)$","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816261879","body":"## 思路\n\n1. 找出字符c对应的下标数组\n2. 对str中的每个元素，求出该元素和下标数组的最小差值\n3. 把最小差值加入到结果中\n\n## 代码\n\n```python\nclass Solution:\n    def shortestToChar(self, s: str, c: str) -> List[int]:\n        # 找出字符c对应的下标数组\n        e_idx = []\n        for i in range(len(s)):\n            if s[i] == c:\n                e_idx.append(i)\n\n        # 对str中的每个字符，求它和e_idx的差的最小值加入到结果中\n        res, e_idx_len = [], len(e_idx)\n        for i in range(len(s)):\n            min_diff = abs(i - e_idx[0])\n            for j in range(1, e_idx_len):\n                diff = abs(i - e_idx[j])\n                if diff < min_diff:\n                    min_diff = diff\n            res.append(min_diff)\n                \n        return res\n```\n\n## 复杂度分析\n\n时间复杂度：O(n)\n\n空间复杂度：O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817414151","body":"## 思路\n\n因为栈的大小固定，所以在构造函数中直接生成maxSize大小的列表。对于这个栈，考虑以下不变式：\n\n1. self.top总是指向下一个入栈的位置，且self.top的大小也是栈中元素的个数\n2. 栈顶元素的下标总是self.top- 1\n3. 空栈即self.top为0\n\n## 代码\n\n```python\nclass CustomStack:\n\n    def __init__(self, maxSize):\n        \"\"\"\n        :type maxSize: int\n        \"\"\"\n        self.maxSize  = maxSize\n        self.top = 0\n        self.items = [0 for i in range(maxSize)]\n\n\n    def push(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: None\n        \"\"\"\n        # 栈没有慢，则可以入栈\n        if self.top < self.maxSize:\n            self.items[self.top] = x\n            self.top += 1\n\n\n    def pop(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        if self.top == 0: # 栈为空则返回-1\n            return -1\n        else:\n            removedItem = self.items[self.top - 1]\n            self.top -= 1\n            return removedItem\n\n\n    def increment(self, k, val):\n        \"\"\"\n        :type k: int\n        :type val: int\n        :rtype: None\n        \"\"\"\n        for i in range(min(k, self.top)):\n            self.items[i] += val\n\n\n\n# Your CustomStack object will be instantiated and called as such:\n# obj = CustomStack(maxSize)\n# obj.push(x)\n# param_2 = obj.pop()\n# obj.increment(k,val)\n```\n\n## 复杂度分析\n\n空间复杂度：O(maxSize)\n\n时间复杂度：\n\n- 构造函数: O(maxSize)\n- push/pop:O(1)\n- increment: O(min(k, top))","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817789340","body":"## 思路\r\n\r\n参考“Dijkstra 的双栈算术表达式求值算法“，《算法》第四版P80\r\n\r\n## 代码\r\n\r\n```python\r\nclass Solution:\r\n    def decodeString(self, s: str) -> str:\r\n        stack = []  # (str, int) 记录之前的字符串和括号外的上一个数字\r\n        num = 0\r\n        res = \"\"  # 实时记录当前可以提取出来的字符串\r\n        for c in s:\r\n            if c.isdigit():\r\n                num = num * 10 + int(c) # 计算k的值\r\n            elif c == \"[\":\r\n                stack.append((res, num)) # 碰到左括号，把之前的res和num入栈\r\n                res, num = \"\", 0         # 入栈后，清除res和num，用于下次记录\r\n            elif c == \"]\":  # 碰到右括号，出栈并计算需要的字符串\r\n                top = stack.pop()\r\n                res = top[0] + res * top[1]\r\n            else:\r\n                res += c\r\n        return res\r\n```\r\n\r\n\r\n\r\n## 复杂度分析\r\n\r\n时间复杂度:O(n)\r\n\r\n空间复杂度:O(1)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818262280","body":"## 思路\r\n没有使用双栈实现队列，双栈实现可参考 [232. 用栈实现队列（清晰图解）](https://leetcode.cn/problems/implement-queue-using-stacks/)\r\n\r\n## 代码\r\n```python\r\nclass MyQueue:\r\n\r\n    def __init__(self):\r\n        self.deque = []\r\n\r\n    def push(self, x: int) -> None:\r\n        self.deque.insert(0, x)\r\n\r\n    def pop(self) -> int:\r\n        return self.deque.pop()\r\n\r\n    def peek(self) -> int:\r\n        return self.deque[len(self.deque) - 1]\r\n\r\n    def empty(self) -> bool:\r\n        return len(self.deque) == 0\r\n\r\n\r\n# Your MyQueue object will be instantiated and called as such:\r\n# obj = MyQueue()\r\n# obj.push(x)\r\n# param_2 = obj.pop()\r\n# param_3 = obj.peek()\r\n```\r\n\r\n## 复杂度分析\r\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820787691","body":"## 思路\n\n有点难，参考了，仅供打卡\n\n(https://leetcode.cn/problems/max-chunks-to-make-sorted-ii/solutions/22785/zui-duo-neng-wan-cheng-pai-xu-de-kuai-ii-deng-jie-/)[最多能完成排序的块 II]\n\n\n\n## 代码\n\n```python\nclass Solution:\n    def maxChunksToSorted(self, arr: List[int]) -> int:\n        stack = []\n        for num in arr:\n            if stack and num < stack[-1]: \n                head = stack.pop()\n                while stack and num < stack[-1]: stack.pop()\n                stack.append(head)\n            else: stack.append(num)\n        return len(stack)\n```\n\n\n\n## 复杂度分析","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"laurallalala":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1813793169","body":"```\r\nclass Solution(object):\r\n    def addToArrayForm(self, num, k):\r\n        \"\"\"\r\n        :type num: List[int]\r\n        :type k: int\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        def num2array(num):\r\n            # reversed order 123 -> [3, 2, 1]\r\n            a = []\r\n            while num > 0:\r\n                a.append(num%10)\r\n                num = num // 10\r\n            return a\r\n        \r\n        def addArray(a1, a2):\r\n            res = []\r\n            i = 0\r\n            s = 0\r\n            while i<len(a1) and i<len(a2):\r\n                cur = a1[i]+a2[i]+s\r\n                res.append(cur%10)\r\n                s = cur // 10\r\n                i += 1\r\n            while i<len(a1):\r\n                cur = a1[i]+s\r\n                res.append(cur%10)\r\n                s = cur // 10\r\n                i += 1\r\n            while i<len(a2):\r\n                cur = a2[i]+s\r\n                res.append(cur%10)\r\n                s = cur // 10\r\n                i += 1\r\n            if s != 0:\r\n                res.append(s)\r\n            return res[::-1]\r\n        \r\n        return addArray(num[::-1], num2array(k))\r\n```\r\nTime: O(N)\r\nSpace: O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1815877397","body":"```\nclass Solution(object):\n    def shortestToChar(self, s, c):\n        \"\"\"\n        :type s: str\n        :type c: str\n        :rtype: List[int]\n        \"\"\"\n        n = len(s)\n        res = [float(\"inf\")]*n\n        last = -float(\"inf\")\n        for i in range(n):\n            if s[i] == c:\n                res[i] = 0\n                last = i\n            else:\n                res[i] = min(res[i], i-last)\n        last = float(\"inf\")\n        for i in range(n-1, -1, -1):\n            if s[i] == c:\n                res[i] = 0\n                last = i\n            else:\n                res[i] = min(res[i], last-i)\n        return res\n```\n\nTime: O(N)\nSpace: O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817450066","body":"```\nclass CustomStack(object):\n\n    def __init__(self, maxSize):\n        \"\"\"\n        :type maxSize: int\n        \"\"\"\n        self.maxSize = maxSize\n        self.stack = []\n        \n\n    def push(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: None\n        \"\"\"\n        if len(self.stack) < self.maxSize:\n            self.stack.append(x)\n\n    def pop(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        if not self.stack:\n            return -1\n        return self.stack.pop()\n        \n\n    def increment(self, k, val):\n        \"\"\"\n        :type k: int\n        :type val: int\n        :rtype: None\n        \"\"\"\n        for i in range(min(len(self.stack), k)):\n            self.stack[i] += val\n```\nTime complexity:\npush: O(1)\npop: O(1)\nincrement: O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817796704","body":"```\r\nclass Solution(object):\r\n    def decodeString(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: str\r\n        \"\"\"\r\n        stack = []\r\n        ct = \"\"\r\n        for i in range(len(s)):\r\n            if s[i].isdigit():\r\n                ct += s[i]\r\n            elif s[i] == \"[\":\r\n                stack.append(ct)\r\n                ct = \"\"\r\n            elif s[i].isalpha():\r\n                stack.append(s[i])\r\n            elif s[i] == \"]\":\r\n                sub = \"\"\r\n                while stack:\r\n                    if stack[-1].isdigit():\r\n                        n = int(stack.pop())\r\n                        stack.append(sub*n)\r\n                        break\r\n                    else:\r\n                        sub = stack.pop() + sub                \r\n        return \"\".join(stack)\r\n```\r\nTime: O(N)\r\nSpace: O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818435211","body":"```\nclass MyQueue(object):\n\n    def __init__(self):\n        self.s1, self.s2 = [], []\n        \n\n    def push(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: None\n        \"\"\"\n        self.s1.append(x)\n        \n\n    def pop(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        while self.s1:\n            self.s2.append(self.s1.pop())\n        first = self.s2.pop()\n        while self.s2:\n            self.s1.append(self.s2.pop())\n        return first\n        \n\n    def peek(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        while self.s1:\n            self.s2.append(self.s1.pop())\n        first = self.s2[-1]\n        while self.s2:\n            self.s1.append(self.s2.pop())\n        return first\n        \n\n    def empty(self):\n        \"\"\"\n        :rtype: bool\n        \"\"\"\n        if len(self.s1) == 0:\n            return True\n        else:\n            return False\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820439372","body":"```\r\nclass Solution(object):\r\n    def maxChunksToSorted(self, arr):\r\n        \"\"\"\r\n        :type arr: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        stack = []\r\n        for a in arr:\r\n            if not stack:\r\n                stack.append(a)\r\n            else:\r\n                if stack[-1] > a:\r\n                    cur = stack[-1]\r\n                    while stack and stack[-1]>a:\r\n                        stack.pop()\r\n                    stack.append(cur)\r\n                else:\r\n                    stack.append(a)\r\n        return len(stack)\r\n```\r\nTime: O(N)\r\nSpace: O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1822280662","body":"```\nclass Solution(object):\n    def rotateRight(self, head, k):\n        \"\"\"\n        :type head: ListNode\n        :type k: int\n        :rtype: ListNode\n        \"\"\"\n        if not head or not head.next:\n            return head\n        l = 0\n        p = head\n        while p:\n            p = p.next\n            l += 1\n        k = k%l\n        if k == 0:\n            return head\n        dh = ListNode(-1, head)\n        right = dh\n        for i in range(k):\n            right = right.next\n        prev = dh\n        while right.next:\n            prev = prev.next\n            right = right.next\n        newh = prev.next\n        right.next = head\n        prev.next = None\n        return newh\n```\nTime: O(n)\nSpace: O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"danielyan86":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1813902612","body":"# 思路\n\n## 解法 1: 直接用 list-》string-》int 方法，遇到超出限制问题\n\n```\nValueError: Exceeds the limit (4300) for integer string conversion: value has 10000 digits; use sys.set_int_max_str_digits() to increase the limit\n    res=str(int(num_st)+k)\n```\n\n- 修改长度限制后可以通过 （time: 34%, memory: 56%）\n\n## 解法 2: 转化 k 为 list 后，用循环方法让两个 list 想加\n\n- 怎么处理进位问题，用一个 carry 变量标记\n- 需要考虑全面：carry 不为 0 时候，可能是 num 还没处理完，也可能是 k 没有处理完\n- 显著高于第一种（time: 34%, memory: 56%）\n\n### 代码\n\n```py\n#solution1\n#需要增加默认长度限制\nsys.set_int_max_str_digits(100000)\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        num_st=\"\"\n        for i in num:\n            num_st=\"\".join((num_st,str(i)))\n        res=str(int(num_st)+k)\n        return [int(i) for i in res]\n\n```\n\n```py\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        # no need to convert k into list\n        # no need to create a new list, update the num directly\n        carry = 0\n        # travsal the list first\n        for i in range(len(num) - 1, -1, -1):\n            tmp = k % 10  # get the last number of K\n            s = num[i] + tmp + carry\n            if s < 10:\n                num[i] = s\n                carry = 0\n            elif s >= 10:\n                num[i] = s % 10\n                carry = 1\n            k //= 10  # pop out the last number of K\n\n        while k > 0:\n            s = k % 10 + carry\n            if s >= 10:\n                carry = 1\n                s = s % 10\n            else:\n                carry = 0\n            num.insert(0, s)  # insert to first one\n            k //= 10\n        if carry == 1:\n            num.insert(0, 1)\n        return num\n```\n\n```python\n 第二种解法code还可以再次优化\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        # no need to convert k into list\n        # no need to create a new list, update the num directly\n        carry = 0\n        # travsal the list first\n        for i in range(len(num) - 1, -1, -1):\n            tmp = k % 10  # get the last number of K\n            s = num[i] + tmp + carry\n            carry = s // 10\n            num[i] = s if s < 10 else s % 10\n            k //= 10  # pop out the last number of K\n\n        while k > 0:\n            s = k % 10 + carry\n            carry = s // 10\n            if s >= 10:\n                s = s % 10\n            num.insert(0, s)  # insert to first one\n            k //= 10\n        # add the last 1 to the first\n        if carry == 1:\n            num.insert(0, 1)\n        return num\n\n```\n\n**复杂度分析**\nm 和 n 为数组长度\n解法 1:\n\n- 时间复杂度：O(m+n)\n- 空间复杂度：O(m+n)\n\n解法 2:\n因为没有新创建数组，也没有把 k 转化成整数，时间和空间优于第一种\n\n- 时间复杂度：O(m)\n- 空间复杂度：O(m)\n\n## 总结\n\n- 搞清楚，//，/，%区别\n- 搞清楚按位加法的算法\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1815963893","body":"### 思路\n\n通过题目发现这么几个点\n\n- 至少有一个桩（目标字符），想到了用 find 找到第一个\n- 第一次扫描所有距离可以用 abs 得出\n- 不确定有几个桩，所以一次遍历肯定不行\n- 想到用双指针发动态更新距离，如果发现一个新桩后和上一个字符中间的距离值\n\n### code\n\n```py\nclass Solution:\n    def shortestToChar(self, s: str, c: str) -> List[int]:\n        pre = cur = s.find(c)\n        res = [0] * len(s)\n\n        for i, st in enumerate(s):\n            if st == c and i > cur:\n                cur = i\n                for mi in range(pre + (cur - pre) // 2 + 1, cur):\n                    res[mi] = abs(cur - mi)\n                pre = cur\n            else:\n                res[i] = abs(i - cur)\n        return res\n\n```\n\n###复杂度\nn=len(s)\n第二个指针因为从两个指针中间位置开始扫描，平均时间复杂度应该是小于 2n\n时间复杂度：O（2n）\n空间复杂度：O（2n）\n\n### 总结\n\n看了官方思路，发现这个思路实现细节方面更容易出错，准备用官方思路再写一遍\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817419720","body":"### 思路\n\n这题用 python 已经有的 list 实现比较简单，pop 是现成方法，append 也就是题目对应的 push，需要注意两点\n\n- 超出 size 不能再 push\n- k 长度可能大于已有的数组长度，可能小于，取小即可\n\n### code\n\n```python\nclass CustomStack:\n    def __init__(self, maxSize: int):\n        self.stack = []\n        self.maxSize = maxSize\n\n    def push(self, x: int) -> None:\n        if len(self.stack) < self.maxSize:\n            self.stack.append(x)\n\n    def pop(self) -> int:\n        if self.stack:\n            return self.stack.pop()\n        else:\n            return -1\n\n    def increment(self, k: int, val: int) -> None:\n        # Only need to consider the length of k and stack\n        for i in range(0, min(k, len(self.stack))):\n            self.stack[i] += val\n```\n\n### 复杂度\n\n- time\n  push，pop: O（1）\n  increment: O(n) n is the length of the stack\n- memory\n  push，pop: O（1）\n  increment: O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817808581","body":"### 思路\n\n看题目分析后发现，有括号的嵌套，所以按照顺序单次遍历是没法确定具体展开的字母个数，被嵌套里层的数字和外层有个相乘的关系，很容易想到 stack 和 recursive 方法\n通常可以用 stack 解决的问题也可以用递归，递归本质上也是系统维护了一个 stack。\n但是代码实现时候在细节上没有处理好，发现写的过于复杂，最后参考了一些题解。\n两个地方实现想的过于复杂\n\n- 怎么处理数字，想到的是先入栈，再处理，其实可以正向处理\n- 增加一个格外的 string 来维护栈里面生成的字符串\n- 栈的数据结构没有设计好，没有想到用一个 tuple 成对记录数字和字符串\n\n### code\n\n```python\nclass Solution:\n    def decodeString(self, s: str) -> str:\n        stack = []\n        current_num = 0\n        cur_str = \"\"\n\n        for char in s:\n            if char.isdigit():\n                # 处理完数字后，再入栈\n                current_num = current_num * 10 + int(char)\n            elif char == \"[\":\n                # 遇到”【“后，当前数字和字符串一起入栈\n                # 重新初始化num 和ctr\n                stack.append((current_num, cur_str))\n                current_num = 0\n                cur_str = \"\"\n            elif char == \"]\":\n                #出栈，乘以对应的数字\n                num, prev_str = stack.pop()\n                cur_str = prev_str + num * cur_str\n                \"\".join((prev_str, cur_str))\n            else:\n\n                \"\".join((cur_str,char))\n\n        return cur_str\n```\n\n### complexity\n\ntime: O(n)\nSpace: O(n)\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818286217","body":"### 思路\r\n- 其实不用所谓的双栈，直接用 del stack[0] 就可以实现栈的 pop 功能，但是题目要求必须使用双栈实现\r\n- 很多示例代码处理了 pop 时候 stack 为空的时候情况，其实题目已经说了“例如，一个空的队列不会调用 pop 或者 peek 操作）”\r\n\r\n#### 双栈实现\r\n\r\n- 两个 list，一个模拟入栈，一个模拟出栈\r\n- pop 和 peek 都操作出栈的 list\r\n- 如果出栈的 list 为空，则把入栈 list 的元素搬过来，用 pop 和 list 方法刚好反转\r\n- 如果两个 list 都为空，则为空\r\n\r\n### code\r\n\r\n```python\r\n\r\nclass MyQueue:\r\n    def __init__(self):\r\n        self.A, self.B = [], []\r\n\r\n    def push(self, x: int) -> None:\r\n        self.A.append(x)\r\n\r\n    def pop(self) -> int:\r\n        if self.B:\r\n            return self.B.pop()\r\n        self._move()\r\n        return self.B.pop()\r\n\r\n    def peek(self) -> int:\r\n        if self.B:\r\n            return self.B[-1]\r\n        self._move()\r\n        return self.B[-1]\r\n\r\n    def _move(self):\r\n        while self.A:\r\n            self.B.append(self.A.pop())\r\n\r\n    def empty(self) -> bool:\r\n        return not (self.A or self.B)\r\n```\r\n\r\n```python\r\n# with one list\r\nclass MyQueue2(object):\r\n    def __init__(self):\r\n        self._data = []\r\n\r\n    def push(self, x):\r\n        self._data.append(x)\r\n\r\n    def pop(self):\r\n        if not self.empty():\r\n            first_item = self._data[0]\r\n            del self._data[0]\r\n            return first_item\r\n\r\n    def peek(self):\r\n        if not self.empty():\r\n            return self._data[0]\r\n\r\n    def empty(self):\r\n        if self._data:\r\n            return False\r\n        else:\r\n            return True\r\n```\r\n\r\n### complexity\r\n\r\nN is length of the queue\r\n\r\n- push, peek, empty is O(1)\r\n- move method : time O(N), space O(N)\r\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820533389","body":"### solution\n\n这题没有思路，理解题目就花了点时间。\n思路参考\nhttps://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/hard/768.max-chunks-to-make-sorted-ii\n采用计数法比较好理解，也容易实现\n\n- 基本思想-1，两个数组如果数字个数一样，则排序后也一样 2.把原数组和一个升序数组挨个比较计数，则可以算出最大分割数目\n- 如果原数组严格按照升序，则会出现最大分割，n，如果是降序，则是 1\n\n### code\n\n- 使用 defaultdict 好处是不用初始化字典默认子，比如 a=collections.defaultdict(int), 那么 a['key'] 的默认初始值是 0，并且不用每次判断 key 是否存在\n- 利用 zip 方法每次分别取两个数组统一个位置数字加到字典\n- 字典一样则表示当前位置数组一样，也就是可以按升序分割，结果加一\n\n```python\nclass Solution:\n    def maxChunksToSorted(self, arr: List[int]) -> int:\n        orgin_d, sorted_d = collections.defaultdict(int), collections.defaultdict(int)\n        res = 0\n        for i, j in zip(arr, sorted(arr)):\n            orgin_d[i] = orgin_d[i] + 1\n            sorted_d[j] = sorted_d[j] + 1\n            if orgin_d == sorted_d:\n                res += 1\n        return res\n\n```\n\n### complexity\n\nN 为数组长度\ntime: 取决于排序，假设为快速排序：O(n log n)\nspace： O（2N）\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1821990563","body":"### solution\n\n分析题目之后想到了用环形链表解决，先闭环，找到对应节点后再断开\n需要注意这几点：\n\n- 搞清楚断开的边界节点\n- k 的值可能大于链表长度 n，使用取余数方法让 k 小于 n（k%=step），因为整数部分其实就是 n 的倍数\n- 如果刚好是整数倍，直接返回，不用再构造环\n\n### code\n\n```python\nclass Solution:\n    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        if head is None or head.next is None: return head\n        cur = head\n        step = 0\n\n        # calculate node number\n        while cur:\n            step += 1\n            pre = cur\n            cur = cur.next\n        k %= step #use remainder to re-calculate the k\n        if k == 0: return head\n        pre.next = head #make loop link\n\n        for i in range(step - k):\n            pre = pre.next\n        new_head = pre.next\n        pre.next = None\n        return new_head\n\n```\n\n### complexity\n\nn is the length of the link\n\n- space: O(n)\n- time: O(2n-(step%k))\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rennzhang":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1813974720","body":"## 思路\n\n### 1. “暴力解法”\n\n作为一个算法小白，会自然而然带入平时对写业务的理解来实现，即：\n- 求 num 数组实际数字总和，`[1,2,0,0]` => `1200`\n- 总和加 `k`, `1200 + k`\n- 转为字符串遍历，在放到新的数组中\n\n> 但学算法应该从数据结构的特性出发\n\n### 2. 倒序-逐个相加-进位\n\n通过倒序遍历数组，从个位开始相加 `k`，并记录进位\n-  `k` 加当前位大于 9 时，保留个位\n- 处理进位，减去个位除以10（十进制）\n- 处理最后位，即最终剩余进位 加`num[0]` 大于9，需要再次向前进位的情况\n\n### 代码\n```js\nvar addToArrayForm = function (num, k) {\n  let carry = k;\n  let res = [];\n\n  for (let idx = num.length - 1; idx >= 0; idx--) {\n    let cur = num[idx];\n    // 向 res 数组中 push 相加后所得的个位数\n    res.push((cur + carry) % 10);\n    // 处理进位，减去个位除以10\n    carry = Math.floor((cur + carry) / 10);\n  }\n\n  while (carry > 0) {\n    res.push(carry % 10);\n    carry = Math.floor(carry / 10);\n  }\n\n  return res.reverse();\n};\n\n```\n\n### 复杂度分析\n\n- 时间复杂度：`O(n + log(k-n))`,\n- 时间复杂度：`O(n + (k - n))`\n\n> 对于时间复杂度：遍历 `num`需要 `O(n)` 时间 ，处理多余进位的情况为`O(log(k-n))`\n\n> 对于空间复杂度：新开了一个数组，其长度是 `n + (k - n)`, `k - n` 是最后处理剩余进位的情况\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816073277","body":"## 题目\r\n[821. 字符的最短距离](https://leetcode.cn/problems/shortest-distance-to-a-character/)\r\n\r\n```py\r\n示例 1:\r\n\r\n输入: S = \"loveleetcode\", C = 'e'\r\n输出: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]\r\n```\r\n## 思路\r\n\r\n### 双向遍历\r\n\r\n第一次正向遍历，找到 c 后，index 为 0，后续每一个递增 1，直到找到下一个 c，重复上述步骤。\r\n\r\n第二次反向遍历，从每个 c 的下一个坐标位判断当前位 是否大于 `上一位+1`，如果大于则替换更小的距离\r\n\r\n\r\n### 代码\r\n```js\r\nclass Solution:\r\n    def shortestToChar(self, s: str, c: str) -> List[int]:\r\n        res = [len(s)] * len(s)\r\n        for i in range(0,len(s)):\r\n            pre = res[i - 1] + 1 \r\n            if s[i] == c:\r\n                res[i] = 0\r\n            else:\r\n                res[i] = pre\r\n\r\n        for i in range(len(s)-1,-1,-1):\r\n            if 0 <= i+1 < len(s):\r\n                res[i] = min(res[i], res[i+1]+1)\r\n        return res\r\n```\r\n\r\n### 复杂度分析\r\n\r\n- 时间复杂度：`O(n)`\r\n> for的时间复杂度为 O(n), 两次 for 总体为 O(n)\r\n\r\n---\r\n\r\n- 时间复杂度：`O(n)`\r\n> 对数组 res 进行操作，长度是 s 的长度，所以为 O(n)\r\n\r\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817496067","body":"## 题目\n[1381. 设计一个支持增量操作的栈](https://leetcode.cn/problems/design-a-stack-with-increment-operation/description/)\n\n## 思路\n当进行`increment`操作时，让所有元素一次出栈进入另一个临时栈，然后再依次入栈并执行相加操作\n\n\n## 代码\n```js\n/**\n * @param {number} maxSize\n */\nvar CustomStack = function (maxSize) {\n  this.maxSize = maxSize;\n  this.stack = [];\n  this.topPos = 0;\n};\n\n/**\n * @param {number} x\n * @return {void}\n */\nCustomStack.prototype.push = function (x) {\n  // 说明已经在栈顶的位置了，不能继续push\n  if (this.topPos >= this.maxSize) return;\n  this.topPos += 1;\n  this.stack.push(x);\n};\n\n/**\n * @return {number}\n */\nCustomStack.prototype.pop = function () {\n  if (this.topPos == 0) return -1;\n  this.topPos -= 1;\n  return this.stack.pop();\n};\n\n/**\n * @param {number} k\n * @param {number} val\n * @return {void}\n */\nCustomStack.prototype.increment = function (k, val) {\n  const tempStack = [];\n  const len = this.topPos;\n\n  while (this.topPos) {\n    tempStack.push(this.pop());\n  }\n  for (let i = 1; i <= len; i++) {\n    let ele = tempStack.pop();\n    if (i <= k) ele += val;\n    this.push(ele);\n  }\n};\n\n```\n\n## 复杂度分析\n\n- 时间复杂度：`O(2n)`,\n> 需要进行两次遍历出入栈操作\n\n- 空间复杂度：`O(2maxSize)`\n> 需要多维护一个临时栈\n\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1818510090","body":"## 题目\n[394. 字符串解码](https://leetcode.cn/problems/decode-string/)\n\n## 思路\n当进行`increment`操作时，让所有元素一次出栈进入另一个临时栈，然后再依次入栈并执行相加操作\n\n\n## 代码\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar decodeString = function (s) {\n  const stack = [];\n  let str = \"\";\n  let num = \"\";\n  for (let i = 0; i < s.length; i++) {\n    const el = s[i];\n    if (el == \"]\") {\n      let popEl = \"\";\n      let tempS = \"\";\n      while (popEl !== \"[\") {\n        popEl = stack.pop();\n        if (popEl !== \"[\") {\n          tempS = popEl + tempS;\n        }\n      }\n      let nnn = parseInt(stack.pop())\n      for (let ii = 0; ii < nnn; ii++) {\n        stack.push(tempS);\n      }\n    } else if (el == \"[\") {\n      stack.push(num);\n      num = \"\";\n      stack.push(el);\n    } else if (!isNaN(parseInt(el))) {\n      num += el;\n    } else {\n      stack.push(el);\n    }\n  }\n\n  while (stack.length) {\n    str = stack.pop() + str;\n  }\n  return str;\n};\n\n```\n## 复杂度分析\n\n- 时间复杂度：`O(N)`\n\n- 空间复杂度：`O(N)`\n\n\n","onTime":false},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818271221","body":"## 题目\n[232. 用栈实现队列](https://leetcode-cn.com/problems/implement-queue-using-stacks/)\n\n## 思路\n按照题目所说，使用两个栈来操作，我的思路是`队列每次进行 push 操作`时，同时对 `栈A 进行入栈操作`，直到队列使用`pop\\peek` 方法时，操作 A 栈全部弹出并依次入栈 B，此时栈顶就是队列首部。\n\n队列的`push`操作依旧全部同时入栈 A，直到栈 B 为空并且队列使用`pop\\peek`时，重复以上步骤。\n\n\n## 代码\n```python\nclass MyQueue:\n\n    def __init__(self):\n        self.stackA = []\n        self.stackB = []\n\n\n    def push(self, x: int) -> None:\n        self.stackA.append(x)\n\n\n    def pop(self) -> int:\n        self.transferEl()\n        return self.stackB.pop()\n\n\n    def peek(self) -> int:\n        self.transferEl()\n        return self.stackB[-1]\n\n\n    def empty(self) -> bool:\n        return not self.stackA and not self.stackB\n    \n    def transferEl(self) -> None:\n        if not self.stackB:\n            while self.stackA:\n                self.stackB.append(self.stackA.pop())\n\n```\n## 复杂度分析\n\n- 时间复杂度：`O(N)`,\n\n- 空间复杂度：`O(N)`\n\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820608707","body":"## 题目\n[768. 最多能完成排序的块 II](https://leetcode.cn/problems/max-chunks-to-make-sorted-ii/description/)\n\n## 思路\n利用递增[单调栈](https://lucifer.ren/blog/2020/11/03/monotone-stack/)实现：\n\n遍历数组，如果栈顶元素大于当前元素，则一直 pop 到小于为止（不包括等于，等于可以分一个块）\n\n另外有一个关键点(`append操作`)卡住了，比如 `[2, 3, 1, 4, 2, 5, 6, 8]`\n\n\n当：`元素等于4` 时\n栈: `[1]`\n\n当：`元素等于2` 时\n栈: `[1,4]`\n\n如果继续按照单调栈操作，则会得到栈`[1, 2, 4]`，显然不合理，因为前面有一个3被弹出了，所以应该记录下栈中的最大值，并且入栈元素应该是一个最小块中的最大值，确保不会影响后面的块，后面的块应该保持最小值`>=`上一个块的最大值\n\n\n> 确实很难，题目看半天才理解，需要先了解下前置知识，单调栈\n\n## 代码\n```python\nclass Solution:\n    def maxChunksToSorted(self, arr) -> int:\n        stack = []\n        max_val = 0\n        for c in arr:\n            while(len(stack) > 0 and c < stack[-1]):\n                k = stack.pop()\n                # 取栈中的最大值\n                max_val = max(max_val,k)\n\n            stack.append(max(c,max_val))\n        return len(stack)\n```\n## 复杂度分析\n\n- 时间复杂度：`O(N)`\n> 遍历数组，并且对栈进行操作，最换的情况是所有元素都入栈一次，所以总体时间复杂度为 O(N)\n\n- 空间复杂度：`O(N)`\n> 栈的空间不会超过数组的最大长度，再加一个`max_val`变量，总体为 N\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"larscheng":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1813980726","body":"### 思路\n- 从低位开始逐位相加，相加结果大于10，则当前位的数字对10取余，同时进位，收集当前位数字\n- 如果k的位数大于num的长度，则按位收集剩余数字\n- 将数组反转\n### 代码\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> list = new ArrayList<>();\n\n        for (int i = num.length - 1; i >= 0; i--) {\n            int sum = num[i] + k % 10;\n            k = k / 10;\n            if (sum >= 10) {\n                //进位，当前位取余数\n                k++;\n                sum = sum % 10;\n            }\n            list.add(sum);\n        }\n        //k位数 大于num.length\n        while (k > 0) {\n            list.add(k % 10);\n            k = k / 10;\n        }\n        Collections.reverse(list);\n        return list;\n    }\n}\n```\n### 复杂度\n- 时间复杂度：O(n)\n- 空间复杂度：O(1)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816132306","body":"### 思路\n- 遍历字符串每一个元素，如果当前元素为目标字符，则距离为0\n- 从当前元素出发，分别向左、右寻找目标字符，最先找到目标字符，即为最小距离\n### 代码\n```java\n    class Solution {\n        public int[] shortestToChar(String s, char c) {\n            int[] result = new int[s.length()];\n\n            for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i) == c) {\n                    result[i] = 0;\n                    continue;\n                }\n                int l = i--;\n                int r = i++;\n                while (l >= 0 || r < s.length()) {\n                    if (l >= 0) {\n                        if (s.charAt(l) == c) {\n                            result[i] = Math.abs(i - l);\n                            break;\n                        } else {\n                            l--;\n                        }\n                    }\n                    if (r < s.length()) {\n                        if (s.charAt(r) == c) {\n                            result[i] = Math.abs(i - r);\n                            break;\n                        } else {\n                            r++;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n```\n### 复杂度\n- 时间复杂度：O(NlogN)\n- 空间复杂度：O(1)","onTime":true},null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1819024319","body":"### 思路\n暴力：\n- 长度为100的数组 stack存储队列元素，变量len记录已使用的位数\n- push：入栈，len++\n- peek：返回数组第首个元素\n- pop：删除stack[0]，剩余元素整体前移，返回删除的stack[0]\n- empty：判断数组第一个元素是否为0\n\n双栈（利用栈：**先进后出**的特性，来实现队列**先进先出**）：\n- 定义两个栈intput/output\n- push：入栈元素压入input（先进后出）\n- peek(pop)：若output无元素，将input中的元素压入output(先进后出)，从output中peek(pop)出栈\n- empty：判断两个栈中元素是否为空\n\n整体流程如下，通过在两个栈中流转，实现了队列特性：先进先出\n压入input[1,2,3] => input出栈[3,2,1] => 压入output[3,2,1] => output出栈[1,2,3]\n\n### 代码\n```java\n//双栈\nclass MyQueue {\n\n    Stack<Integer> input;\n    Stack<Integer> output;\n    public MyQueue() {\n        input = new Stack<>();\n        output = new Stack<>();\n    }\n    \n    public void push(int x) {\n        input.push(x);\n    }\n    \n    public int pop() {\n        if (output.empty()){\n            in2out();\n        }\n        return output.pop();\n    }\n    \n    public int peek() {\n        if (output.empty()){\n            in2out();\n        }\n        return output.peek();\n    }\n\n    private void in2out() {\n        while (!input.empty()){\n            output.push(input.pop());\n        }\n    }\n\n    public boolean empty() {\n        return input.empty() && output.empty();\n    }\n}\n```\n\n### 复杂度\n- 时间复杂度：O(1)\n- 空间复杂度：O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820674975","body":"### 思路\r\n- 数组拆分 => 局部升序 => 合并所有子序列 => 与原数组升序一致\r\n\r\n要保证最终合并后的序列整体升序，那么拆分出来的数组块之间，必须要为递增趋势\r\n- [2,1,3,4,4] 可拆分为 [2, 1], [3, 4, 4] , 第1块的中所有数组整体都小于第2块\r\n- [2,1,3,4,4] 可拆分为 [2, 1], [3], [4], [4], 可见数组块之间整体递增趋势\r\n题目要求最大可拆分数量，可见第二种方案符合条件\r\n\r\n结合单调栈：***找下一个大于xxx、下一个小于xxx的思路***.  \r\n保证最终留在栈内的都是每一轮寻找的最大值，栈的大小即为最大拆分块数\r\n\r\n>单调栈：栈内元素有序，出栈顺序升序为单调递增栈，出栈顺序降序为单调递减栈.  \r\n\r\n>构造单调栈的过程：https://lucifer.ren/blog/2020/11/03/monotone-stack/ （推荐配合食用）\r\n\r\n### 代码\r\n```java\r\nclass Solution {\r\n    public int maxChunksToSorted(int[] arr) {\r\n        Stack<Integer> stack = new Stack<>();\r\n        for (int num : arr) {\r\n            if (stack.isEmpty() || stack.peek() <= num){\r\n                stack.push(num);\r\n            }else {\r\n                int max = stack.pop();\r\n                while (!stack.isEmpty() && stack.peek() > num) {\r\n                    stack.pop();\r\n                }\r\n                stack.push(max);\r\n            }\r\n        }\r\n        return stack.size();\r\n    }\r\n}\r\n```\r\n### 复杂度\r\n- 时间复杂度：O(n)，数组中的元素最多只会入栈出栈1次，n为数组长度\r\n- 空间复杂度：O(n)，额外空间栈的大小即为数组长度n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qingkediguo":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1813993817","body":"### 思路\n\n将 num 填充成和 k 相同长度的数组，然后记录每次需要进位的数。按照每一位模拟计算\n\n### 代码\n\n\n```java\npublic List<Integer> addToArrayForm(int[] num, int k) {\n    return way1(num, k);\n}\n\nprivate List<Integer> way1(int[] num, int k) {\n    // 前面填充 0，是 num 长度和 kString 的长度一致\n    int maxLength = Math.max(String.valueOf(k).length(), num.length);\n    if (num.length != maxLength) {\n        num = padZero(maxLength, num);\n    }\n\n    List<Integer> result = new ArrayList<>(maxLength);\n\n    // 需要向上进位的数\n    int carryNum = 0;\n    for (int i = num.length - 1; i >= 0; i--) {\n        // 当前位数计算需要加的值\n        int addNum = num[i] + k % 10;\n        k = k / 10;\n\n        if (carryNum != 0) {\n            addNum = addNum + carryNum % 10;\n            carryNum = carryNum / 10;\n        }\n        if (addNum > 9) {\n            result.add(0, addNum % 10);\n            carryNum = carryNum + (addNum / 10);\n        } else {\n            result.add(0, addNum);\n        }\n    }\n\n    // 处理没有处理完的需要进位的数\n    if (carryNum != 0) {\n        // 没有处理完的进位的位数\n        int carryNumLength = String.valueOf(carryNum).length();\n        for (int i = 0; i < carryNumLength; i++) {\n            result.add(0, carryNum % 10);\n            carryNum = carryNum / 10;\n        }\n    }\n\n    return result;\n}\n\nprivate int[] padZero(int maxLength, int[] targetNum) {\n    int[] num;\n    int padLength = maxLength - targetNum.length;\n    int[] newNum = new int[maxLength];\n    for (int i = 0; i < maxLength; i++) {\n        if (i < padLength) {\n            newNum[i] = 0;\n        } else {\n            newNum[i] = targetNum[i - padLength];\n        }\n    }\n    num = newNum;\n    return num;\n}\n```\n\n**复杂度分析**\n- 时间复杂度：O(N)\n- 空间复杂度：O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816452229","body":"```java\npublic int[] shortestToChar(String s, char c) {\n        char[] charArray = s.toCharArray();\n        int[] result = new int[s.length()];\n        Arrays.fill(result, Integer.MAX_VALUE);\n        // 左边的距离，此时从 index0 到 第一次出现 c 的字母，都还没有赋值（因为他们的距离只有右边的距离）\n        Integer cIndex = null;\n        for (int i = 0; i < charArray.length; i++) {\n            if (charArray[i] == c) {\n                cIndex = i;\n            }\n            if (null != cIndex) {\n                result[i] = i - cIndex;\n            }\n        }\n\n        // 再计算右边的距离，然后和左边的距离取短的\n        cIndex = null;\n        for (int i = charArray.length - 1; i >= 0; i--) {\n            if (charArray[i] == c) {\n                cIndex = i;\n            }\n            if (null != cIndex) {\n                result[i] = Math.min(cIndex - i, result[i]);\n            }\n        }\n        return result;\n    }\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817460903","body":"```java\npublic static class MyStack {\n        private final int maxSize;\n        private final List<Integer> stack;\n\n        public MyStack(int maxSize) {\n            this.maxSize = maxSize;\n            this.stack = new ArrayList<>();\n        }\n\n        public MyStack push(int x) {\n            if (stack.size() < maxSize) {\n                stack.add(x);\n            } else {\n                throw new ArrayIndexOutOfBoundsException();\n            }\n            return this;\n        }\n\n        public int pop() {\n            if (!stack.isEmpty()) {\n                return stack.remove(stack.size() - 1);\n            } else {\n                return -1;\n            }\n        }\n\n        public MyStack increment(int k, int val) {\n            // incr 的元素个数\n            int addCount = Math.min(k, stack.size());\n            for (int index = 0; index < addCount; index++) {\n                stack.set(index, stack.get(index) + val);\n            }\n            return this;\n        }\n    }\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817793391","body":"```java\n    public String decodeString(String s) {\n        // 以下两个栈的长度应该是一致的\n        // 重复次数\n        ArrayDeque<Integer> repeatCountStack = new ArrayDeque<>();\n        // 重复的文字\n        ArrayDeque<StringBuilder> repeatCharStack = new ArrayDeque<>();\n\n        // 结果\n        StringBuilder result = new StringBuilder();\n\n        // 重复数字\n        int continuousNumber = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char currentChar = s.charAt(i);\n            if (currentChar == '[') {\n                repeatCountStack.add(continuousNumber);\n                repeatCharStack.add(new StringBuilder());\n                continuousNumber = 0;\n            } else if (currentChar == ']') {\n                Integer repeatCount = repeatCountStack.pollLast();\n                String msg = repeatCharStack.pollLast().toString();\n                for (int integer = 0; integer < repeatCount; integer++) {\n                    // 如果栈空，则直接加入答案\n                    if (repeatCharStack.isEmpty()) {\n                        result.append(msg);\n                    }\n                    // 如果栈不空，则需要添加到上个栈中\n                    else {\n                        repeatCharStack.peekLast().append(msg);\n                    }\n                }\n            } else {\n                // 说明是数字\n                if (Character.isDigit(currentChar)) {\n                    // 之前的值乘 10 再加上当前数字\n                    continuousNumber = continuousNumber * 10 + Integer.parseInt(String.valueOf(currentChar));\n                }\n                // 说明是字母\n                else {\n                    // 如果符号栈为空，则直接加入结果\n                    if (repeatCountStack.isEmpty()) {\n                        result.append(currentChar);\n                    }\n                    // 说明当前处于 [] 之中，需要将当前内容添加入栈\n                    else {\n                        StringBuilder stringBuilder = repeatCharStack.getLast();\n                        stringBuilder.append(currentChar);\n                    }\n                }\n            }\n        }\n\n        return result.toString();\n    }\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818936457","body":"```java\npublic static class MyQueue {\n        private Deque<Integer> inStack;\n        private Deque<Integer> outStack;\n\n        public MyQueue() {\n            this.inStack = new ArrayDeque<>();\n            this.outStack = new ArrayDeque<>();\n        }\n\n        public MyQueue push(int x) {\n            inStack.push(x);\n            return this;\n        }\n\n        public int pop() {\n            if (outStack.isEmpty()) {\n                moveInStackToOutStack();\n            }\n            return outStack.pop();\n        }\n\n        public int peek() {\n            if (outStack.isEmpty()) {\n                moveInStackToOutStack();\n            }\n            return outStack.peek();\n        }\n\n        public boolean empty() {\n            return inStack.isEmpty() && outStack.isEmpty();\n        }\n\n        private void moveInStackToOutStack() {\n            while (!inStack.isEmpty()) {\n                outStack.push(inStack.pop());\n            }\n        }\n    }\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1821198241","body":"```java\npublic int maxChunksToSorted(int[] arr) {\n        // 单调栈\n        Deque<Integer> dullStack = new ArrayDeque<>();\n\n        for (int item : arr) {\n            // 如果双端队列为空，或者当前元素大于等于双端队列的顶部元素，直接将当前元素入队\n            if (dullStack.isEmpty() || dullStack.peek() <= item) {\n                dullStack.push(item);\n            }\n            // 如果当前元素小于双端队列的顶部元素\n            else {\n                // 弹出顶部元素，作为当前块的最大值\n                int max = dullStack.pop();\n                // 将双端队列中大于当前元素的元素全部弹出，保证当前块中的元素都小于最大值\n                while (!dullStack.isEmpty() && dullStack.peek() > item) {\n                    dullStack.pop();\n                }\n                dullStack.push(max);\n            }\n        }\n        return dullStack.size();\n    }\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"adfvcdxv":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814037010","body":"### 思路\n\n从数组 num 的最后一个元素开始，逐位与整数 k 相加。\n使用进位来处理相加的过程，并将每一位的结果插入结果数组 result 的开头。\n\n### 代码\n\n`var addToArrayForm = function (num, k) {`\n  `const result = [];`\n  `for (let i = num.length - 1; i >= 0 || k > 0; i-- ,k = Math.floor(k / 10)) {`\n`if(i>=0) k+=num[i]`\n `result.unshift(k % 10)`\n  `}`\n  `return result;`\n`};`\n\n### 复杂度分析\n\n时间复杂度： O(max(n, m))，其中 n 是数组 num 的长度，m 是整数 k 的位数。整体时间复杂度由单次循环决定，取决于较大的那个数的位数。\n空间复杂度： O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1815919734","body":"#### 思路\r\n\r\n1. 首先，定义一个变量`hasC`，初始值为一个较小的负数（-s.length * 3），用于记录上一个字符`c`出现的位置。\r\n2. 创建一个空数组`res`，用于存储每个字符到字符`c`的最短距离。\r\n3. 第一个循环遍历字符串`s`，从左到右，对每个字符进行处理：\r\n   - 如果当前字符等于`c`，更新`hasC`为当前索引`i`。\r\n   - 计算当前字符到字符`c`的距离，即`i - hasC`，并将结果存入`res`数组的对应位置。\r\n4. 重置`hasC`为一个较大的正数（s.length * 3），用于记录下一个字符`c`出现的位置。\r\n5. 第二个循环遍历字符串`s`，从右到左，对每个字符进行处理：\r\n   - 如果当前字符等于`c`，更新`hasC`为当前索引`i`。\r\n   - 计算当前字符到字符`c`的距离，即`hasC - i`，与之前计算的距离`res[i]`取较小值，并更新`res[i]`。\r\n6. 返回最终的结果数组`res`。\r\n\r\n#### 代码\r\n\r\n`var shortestToChar = function (s, c) {`\r\n\r\n  `let hasC = -s.length * 3`\r\n\r\n  `let res = []`\r\n\r\n  `for (let i = 0; i < s.length; i++) {`\r\n\r\n​    `if (s[i] === c) {`\r\n\r\n​      `hasC = i`\r\n\r\n​    `}`\r\n\r\n​    `res[i] = i - hasC`\r\n\r\n  `}`\r\n\r\n  `hasC = s.length * 3`\r\n\r\n  `for (let i = s.length - 1; i >= 0; i--) {`\r\n\r\n​    `if (s[i] === c) {`\r\n\r\n​      `hasC = i`\r\n\r\n​    `}`\r\n\r\n​    `res[i] = Math.min(hasC - i, res[i])`\r\n\r\n  `}`\r\n\r\n  `return res`\r\n\r\n`};`\r\n\r\n#### 复杂度分析\r\n\r\n第一个循环和第二个循环都是线性遍历字符串，时间复杂度为O(n)，其中n为字符串`s`的长度。","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817461950","body":"第一想法：java不是有Stack包装类么？直接上啊！\n过了以后看题解：哦好吧，要自己拿数组模拟啊（\n\n题解第一种思路：好像实际上和用stack区别差不多，区别就是自己拿个指针手动加加减减；\n题解第二种思路：inc的时候不在数组本身上加，而是再弄个数组，要取值的时候再看加多少；\n\nclass CustomStack {\n\n    Stack<Integer> stack;\n    int maxSize;\n\n    public CustomStack(int maxSize) {\n        stack = new Stack<Integer>();\n        this.maxSize = maxSize;\n    }\n    \n    public void push(int x) {\n        if (stack.size() >= maxSize) {\n            \n        } else {\n            stack.push(x);\n        }\n    }\n    \n    public int pop() {\n        if (stack.empty()) {\n            return -1;\n        } else {\n            return stack.pop();\n        }\n    }\n    \n    public void increment(int k, int val) {\n        int limit = Math.min(k, stack.size());\n        for (int i = 0; i < limit; i ++) {\n            stack.set(i, stack.get(i) + val);\n        }\n    }\n}","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817777886","body":"疑研定真鉴定为：春春的体力活\n跟我平时做项目从excel里面一个个抠字段的操作差不多，做这题感觉在上班\n\nclass Solution {\n    int ptr;\n\n    public String decodeString(String s) {\n        LinkedList<String> stk = new LinkedList<String>();\n        ptr = 0;\n\n        while (ptr < s.length()) {\n            char cur = s.charAt(ptr);\n            if (Character.isDigit(cur)) {\n                String digits = getDigits(s);\n                stk.addLast(digits);\n            } else if (Character.isLetter(cur) || cur == '[') {\n                stk.addLast(String.valueOf(s.charAt(ptr++))); \n            } else {\n                ++ptr;\n                LinkedList<String> sub = new LinkedList<String>();\n                while (!\"[\".equals(stk.peekLast())) {\n                    sub.addLast(stk.removeLast());\n                }\n                Collections.reverse(sub);\n                stk.removeLast();\n                int repTime = Integer.parseInt(stk.removeLast());\n                StringBuffer t = new StringBuffer();\n                String o = getString(sub);\n                while (repTime-- > 0) {\n                    t.append(o);\n                }\n                stk.addLast(t.toString());\n            }\n        }\n\n        return getString(stk);\n    }\n\n    public String getDigits(String s) {\n        StringBuffer ret = new StringBuffer();\n        while (Character.isDigit(s.charAt(ptr))) {\n            ret.append(s.charAt(ptr++));\n        }\n        return ret.toString();\n    }\n\n    public String getString(LinkedList<String> v) {\n        StringBuffer ret = new StringBuffer();\n        for (String s : v) {\n            ret.append(s);\n        }\n        return ret.toString();\n    }\n}","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818183543","body":"#### 思路\n\n双栈：一个栈输入，一个输出\n\npop和peek只有在输出栈为空，才将输入栈的元素push到输出栈\n\n#### 代码\n\n```\nvar MyQueue = function () {\n    this.instack = []\n    this.outstack = []\n};\n\n/** \n * @param {number} x\n * @return {void}\n */\nMyQueue.prototype.push = function (x) {\n    this.instack.push(x)\n};\n\n/**\n * @return {number}\n */\nMyQueue.prototype.pop = function () {\n    if (!this.outstack.length) this.intoout()\n    return this.outstack.pop()\n};\n\n/**\n * @return {number}\n */\nMyQueue.prototype.peek = function () {\n    if (!this.outstack.length) this.intoout()\n    return this.outstack[this.outstack.length - 1]\n};\n\n/**\n * @return {boolean}\n */\nMyQueue.prototype.empty = function () {\n    return !this.outstack.length && !this.instack.length\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * var obj = new MyQueue()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.peek()\n * var param_4 = obj.empty()\n */\nMyQueue.prototype.intoout = function () {\n    while (this.instack.length) {\n        this.outstack.push(this.instack.pop())\n    }\n};\n```\n\n\n\n#### 复杂度分析\n\n时间复杂度：O(1)。\n\n空间复杂度：O(n)。\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820159601","body":"#### 思路\n\n单调栈\n\n#### 代码\n\n```\n/**\n * @param {number[]} arr\n * @return {number}\n */\nvar maxChunksToSorted = function (arr) {\n    let res = []\n    let max = 0\n    for (let i = 0; i < arr.length; i++) {\n        if (res.length === 0 || arr[i] >= res[res.length - 1]) {\n            res.push(arr[i])\n        } else {\n            max = res.pop()\n            while (arr[i] < res[res.length - 1]) {\n                res.pop()\n            }\n            res.push(max)\n        }\n    }\n    return res.length\n};\n```\n\n\n\n#### 复杂度分析\n\n时间复杂度：O(n)。\n\n空间复杂度：O(n)。\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1821973005","body":"#### 思路\n\n循环链表\n\n#### 代码\n\n```\n/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} k\n * @return {ListNode}\n */\nvar rotateRight = function (head, k) {\n    if (!head || k === 0) return head;  // 特判\n    let copyHead = head\n    let pre = head\n    let length = 1\n    while (pre.next) {\n        pre = pre.next\n        length++\n    }\n    pre.next = copyHead\n    let move = length - k % length\n    while (move--) {\n        pre = pre.next\n    }\n    copyHead = pre.next\n    pre.next = null\n    return copyHead\n};\n```\n\n\n\n#### 复杂度分析\n\n时间复杂度：O(n)。\n\n空间复杂度：O(1)。\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"javajianghu":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814185749","body":"### 题目 \n\n[989. 数组形式的整数加法](https://leetcode.cn/problems/add-to-array-form-of-integer/description/)\n\n### 解题思路\n\n#### 思路一【失败】\n\n把数组的最后一位认为是个位，然后向前依次为个位、十位、百位，那么数值为：\n\n个位 = 10的0次方 * 个位的数\n\n十位 = 10的1次方 * 十位的数\n\n...\n\n依次类推，就可以得出代码如下：\n\n##### 代码\n\n```java\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        long total = k;\n        int len = num.length;\n        for (int i = len; i > 0 ; i--) {\n            total += Math.pow(10,len - i) * num[i - 1];\n        }\n        String[] numberArray = String.valueOf(total).split(\"\");\n        return Arrays.stream(numberArray).map(Integer::valueOf).toList();\n    }\n```\n\n当num的长度不大时，total没有超过long的取值范围（ 2^63-1），结果正确，如果超过，数据就是错误的。\n\n```\n解答失败:\n\t测试用例:[1,2,6,3,0,7,1,7,1,9,7,5,6,6,4,4,0,0,6,3]\n\t\t\t516\n\t测试结果:[9,2,2,3,3,7,2,0,3,6,8,5,4,7,7,5,8,0,7]\n\t期望结果:[1,2,6,3,0,7,1,7,1,9,7,5,6,6,4,4,0,5,7,9]\n```\n\n\n#### 思路二\n\n因为直接相加数值太大，那么一位一位相加。相加需要进位的就记录下来，然后这样一位一位这么处理，类似于草稿纸上的加法处理方式。\n\n##### 代码\n```java\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        // 先把k装换为数组\n        String[] kArr = String.valueOf(k).split(\"\");\n        \n        // 比对num和kArr数组长度，谁的长，以谁的长度遍历\n        int kArrLength = kArr.length;\n        int numLength = num.length;\n        int forLen = numLength;\n        if(kArrLength > numLength){\n            forLen = kArrLength;\n        }\n        \n        // 结果最多多一位，所以设置结果的长度为forLen + 1\n        int[] result = new int[forLen + 1];\n\n        int moreAddNum = 0;\n        for (int i = 1 ; i <= forLen ; i++) {\n            int val = 0;\n            if(num.length - i >= 0 ){\n                val += num[num.length - i];\n            }\n            if(kArr.length - i >= 0 ){\n                // 从后向前获取数组的某一位值，然后相加\n                val += Integer.parseInt(kArr[kArr.length - i]);\n            }\n            \n            // 如果刚才低位相加的值>0,那就加到当前数值上\n            if(moreAddNum > 0){\n                val += moreAddNum;\n            }\n            \n            // 除以10，得到进位的数字\n            moreAddNum = val / 10;\n           \t// 取除以10的余数就是当前位数的值，小于10就是自己，大于10就是余数\n            result[result.length - i] = val % 10;\n\n            // 给结果的第0位赋值\n            if(i == forLen && moreAddNum != 0){\n                result[0] = moreAddNum;\n            }\n        }\n        \n        // 转换result数组为list\n        List<Integer> list = Arrays.stream(result).boxed().collect(Collectors.toList());\n        if(list.get(0) == 0){\n            list.remove(0);\n        }\n        System.out.println(list);\n        return list;\n    }\n```\n\n\n### 复杂度分析\n- 时间复杂度：O(n)\n- 空间复杂度：O(n)\n\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816052736","body":"### 题目 \n\n[821. 字符的最短距离](https://leetcode.cn/problems/shortest-distance-to-a-character/)\n\n### 解题思路\n\n#### 思路\n1、先遍历字符串，记录每个字符的位置\n2、然后再遍历字符串，根据字符的位置计算字符与字符之间的距离。\n\n##### 代码\n\n```\n    public int[] shortestToChar(String s, char c) {\n        int[] res = new int[s.length()];\n        char[] chars = s.toCharArray();\n        // 记录字符c在字符串s中的位置\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < chars.length; i++) {\n            if(chars[i] == c){\n                list.add(i);\n            }\n        }\n        for (int i = 0; i < chars.length; i++) {\n            // 默认第一个为最小距离\n            int minLength = Math.abs(i - list.get(0));\n            if(minLength != 0){\n                // 遍历list，找到最小距离\n                for (int j = 1; j < list.size(); j++) {\n                    minLength = Math.min(minLength, Math.abs(i - list.get(j)));\n                    if(minLength == 0){\n                        break;\n                    }\n                }\n            }\n            res[i] = minLength;\n        }\n        return res;\n    }\n```\n##### 复杂度分析\n- 时间复杂度：O(n)\n- 空间复杂度：O(n)\n：\n\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817543215","body":"### 题目 \n\n[1381. 设计一个支持增量操作的栈](https://leetcode.cn/problems/design-a-stack-with-increment-operation/)\n\n### 解题思路\n\n#### 思路\n1、初始化的时候就创建maxSize的int数组，减少后续扩容的操作。\n2、为了能够O(1)进行pop和push，那么需要记录下当前数据到哪个索引下标了，所以增加nextIndex表示下次操作索引，当pop和push时记录对其++或者--\n\n##### 代码\n```\npublic class CustomStack {\n    // 存放元素最大个数\n    private int maxSize;\n\n    // 数组存储\n    private int[] stack;\n\n    // 下一个值存放索引位置\n    private int nextIndex = 0;\n\n    private CustomStack(){}\n\n    public CustomStack(int maxSize) {\n        this.maxSize = maxSize;\n        this.stack = new int[maxSize];\n    }\n\n    public void push(int x){\n        // 当小于最大元素个数时才插入，插入完成后nextIndex++\n        if(nextIndex <= (maxSize - 1)){\n            stack[nextIndex++] = x;\n        }\n    }\n\n    public int pop(){\n        if(0 == nextIndex){\n            return -1;\n        }\n        // 获取当前元素索引\n        nextIndex--;\n        int result = stack[nextIndex];\n        // 取出重置为0\n        stack[nextIndex] = 0;\n        return result;\n    }\n\n    public void inc(int k, int val){\n        if(0 == nextIndex){\n            return;\n        }\n        //\n        int len = Math.min(nextIndex,k);\n        for (int i = 0; i < len ; i++) {\n            stack[i] += val;\n        }\n    }\n\n    public String toString(){\n        return Arrays.toString(stack);\n    }\n}   \n```\n##### 复杂度分析\n- 时间复杂度：\n  - push：O(1)\n  - pop: O(1)\n  - inc: O(n)\n- 空间复杂度：O(n)\n\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817811488","body":"### 题目 \n\n[394. 字符串解码](https://leetcode.cn/problems/decode-string/)\n\n### 解题思路\n1、要匹配[]，那么使用栈的方式，记录]入栈的时候再处理比较合适。\n2、先把非]的字符压入栈，当字符为]时，开始处理栈里面的数据。\n  2.1 首先获取]之前到[所有的字母。\n  2.2 然后获取[之前所有的数字。\n  2.3 然后根据数字，获取倍数的[]的字母\n  2.4 再把得到的倍数字符串放入到栈中，继续处理，直到下次的]出现，再运行上面的流程。\n3、最后获取栈里面所有的字母转换为字符串\n\n#### 思路\n\n\n##### 代码\n```\npublic String decodeString(String s) {\n        char[] charArray = s.toCharArray();\n        Stack<Character> stack = new Stack();\n\n        for (int i = 0; i < charArray.length; i++) {\n            if(charArray[i] != ']'){\n                stack.push(charArray[i]);\n            }else{\n                // 当字符为]\n\n                // 解析栈里面的字符串,获取]之前，[之后的字符串\n                StringBuilder sb = new StringBuilder();\n                boolean isLetter = false;\n                do{\n                    isLetter = !stack.empty() && Character.isLetter(stack.peek());\n                    if(isLetter){\n                        sb.insert(0,stack.pop());\n                    }else{\n                        break;\n                    }\n                }while (isLetter);\n                // 得到[]的字符串\n                String subStr = sb.toString();\n\n                // 抛出[\n                stack.pop();\n\n                // 获取数字\n                sb = new StringBuilder();\n                boolean isDigit = false;\n                do{\n                    isDigit = !stack.empty() && Character.isDigit(stack.peek());\n                    if(isDigit){\n                        sb.insert(0,stack.pop());\n                    }else{\n                        break;\n                    }\n                }while (isDigit);\n\n                // 获取倍数\n                int count = Integer.parseInt(sb.toString());\n\n                // 把倍数后的字符串再放入栈\n                for (int j = 0; j < count; j++) {\n                    char[] subStrCharArray = subStr.toCharArray();\n                    for (char c : subStrCharArray) {\n                        stack.push(c);\n                    }\n                }\n            }\n        }\n\n        // 获取栈里面所有的数据\n        StringBuilder result = new StringBuilder();\n        while(!stack.empty()){\n            result.insert(0,stack.pop());\n        }\n        return result.toString();\n\n    }\n```\n##### 复杂度分析\n- 时间复杂度：O(n^2)\n- 空间复杂度：O(n)\n\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818364439","body":"### 题目 \n\n[232. 用栈实现队列](https://leetcode.cn/problems/implement-queue-using-stacks/)\n\n### 解题思路\n1、因为栈的操作是先入后出，那么使用pop的话，是把栈最上层的元素出栈，但是题目要求是把最底层的元素出栈。\n\n2、借助另外一个栈，把这个栈的元素都pop到另外一个栈，那么最底层的元素就变成了最上层的元素。\n\n​\t2.1 创建两个栈，firstStack、secondStack，firstStack用于存储插入顺序的栈，secondStack表示倒叙的栈。\n\n​\t2.2 当插入元素时，需要把secondStack的元素都倒回到firstStack中，然后再push\n\n​\t2.3 当弹出元素时，就把firstStack的元素导出到secondStack中，然后secondStack中pop就可以了。\n\n#### 思路\n\n\n##### 代码\n```\nclass MyQueue {\n\n    private Stack<Integer> firstStack = new Stack<>();\n    private Stack<Integer> secondStack = new Stack<>();\n\n    public MyQueue() {\n\n    }\n\n    // 将元素 x 推到队列的末尾\n    public void push(int x) {\n        while (!secondStack.isEmpty()) {\n            firstStack.push(secondStack.pop());\n        }\n        firstStack.push(x);\n    }\n\n    //  从队列的开头移除并返回元素\n    public int pop() {\n        // 把firstStack的全部元素都倒腾到secondStack中\n        while (!firstStack.isEmpty()) {\n            secondStack.push(firstStack.pop());\n        }\n        return secondStack.pop();\n    }\n\n    // 返回队列开头的元素\n    public int peek() {\n        while (!firstStack.isEmpty()) {\n            secondStack.push(firstStack.pop());\n        }\n        return secondStack.peek();\n    }\n\n    // 如果队列为空，返回 true ；否则，返回 false\n    public boolean empty() {\n        return firstStack.isEmpty() && secondStack.isEmpty();\n    }\n}\n```\n##### 复杂度分析\n- 时间复杂度：O(n)\n- 空间复杂度：O(n)\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chloe-c11":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814383488","body":"一开始的思路：没考虑到num = [9,9,9,9,9,9,9,9,9,9], k=1连续的进位的情况\n\n```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        i = -1\n        nxt = 0\n        while k:\n            cur_k = k % 10\n            print(cur_k)\n            cur_num = num[i]\n            cur_ans = cur_k + cur_num\n            if cur_k + cur_num > 9:\n                cur_ans = cur_ans % 10\n                num[i] = cur_ans + nxt\n                nxt = 1\n            else:\n                num[i] = cur_ans + nxt\n                nxt = 0\n            k = k // 10\n            i -= 1\n        if nxt == 1:\n            return [1] + num\n        return num\n```\n\n修改后\n\n```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n\n        i = len(num) - 1\n        nxt = 0\n        ans = []\n        while k or nxt != 0 or i >= 0:\n            if k > 0:\n                cur_k = k % 10\n            else:\n                cur_k = 0\n            if i >= 0:\n                cur_num = num[i]\n            else:\n                cur_num = 0\n\n            cur_ans = cur_k + cur_num + nxt\n            if cur_ans > 9:\n                cur_ans = cur_ans - 10\n                ans.append(cur_ans)\n                nxt = 1\n            else:\n                ans.append(cur_ans)\n                nxt = 0\n\n            k = k // 10\n            i -= 1\n        return ans[::-1]\n\n```\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1815996853","body":"1. 第一个循环用于找到目标字符的位置\n2. 第二个循环用于遍历整个字符串，对于每个字符都需要计算到目标字符的最短距离\n3. 时间复杂度为O(n^2)\n\n```python\nclass Solution:\n    def shortestToChar(self, s: str, c: str) -> List[int]:\n        c_set = set()\n        ans = []\n        # find place\n        for i, ci in enumerate(s):\n            if ci == c:\n                c_set.add(i)\n\n        # loop s, find each distance\n        for i, si in enumerate(s):\n            cur_min = len(s) + 1\n            for j in c_set:\n                cur_min = min(cur_min, abs(i - j))\n            ans.append(cur_min)\n        \n        return ans\n```\n\n优化：左右分别遍历，找最近\n\n第一次找到每个i左边最近的 c\n\n第二次找到每个i右边最近的 c\n\n```python\nclass Solution:\n    def shortestToChar(self, s: str, c: str) -> List[int]:\n        n = len(s)\n        ans = [n + 1] * n\n        j = -1\n        for i, si in enumerate(s):\n            if si == c:\n                j = i\n            if j != -1:\n                ans[i] = i - j\n        j = -1\n        for i in range(n-1, -1, -1):\n            if s[i] == c:\n                j = i\n            if j != -1:\n                ans[i] = min(ans[i], j - i)\n        return ans\n\n```\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817424105","body":"根据题目要求来写，注意长度是否超过maxsize即可\n\n```python\nclass CustomStack:\n\n    def __init__(self, maxSize: int):\n        self.s = []\n        self.maxSize = maxSize\n\n\n    def push(self, x: int) -> None:\n        if len(self.s) < self.maxSize:\n            self.s.append(x)\n\n\n    def pop(self) -> int:\n        if self.s:\n            return self.s.pop()\n        return -1\n\n\n\n    def increment(self, k: int, val: int) -> None:\n        if len(self.s) < k:\n            for i in range(len(self.s)):\n                self.s[i] += val\n        else:\n            for i in range(k):\n                self.s[i] += val\n\n\n\n# Your CustomStack object will be instantiated and called as such:\n# obj = CustomStack(maxSize)\n# obj.push(x)\n# param_2 = obj.pop()\n# obj.increment(k,val)\n```\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817681635","body":"使用栈，遇到\"]\"的时候进行出栈等操作，其他时候都入栈\n\n先获取字符串的长度，剔除“[”，再获取数字的长度\n\n获得新的字符串后，如果栈里面还有元素 – 加入。否则直接加入答案\n\n```python\nclass Solution:\n    def decodeString(self, s: str) -> str:\n        # 使用栈，遇到\"]\"的时候进行出栈等操作，其他时候都入栈\n        ans = []\n        myStack = []\n        for c in s:\n            if c ==\"]\":\n                # 当遇到'['的时候添加到ans里面\n                cur_str = \"\"\n                while myStack and myStack[-1] != \"[\":\n                    cur_str = myStack.pop() + cur_str\n                # 剔除\"[\"\n                myStack.pop()\n                # 遇到‘[’的时候，获取下一个数字\n                cur_num = myStack.pop()\n                # 如果stack里面还有内容 -- 新的字符串入栈\n                # 否则：加入答案\n                if myStack:\n                    myStack.append(int(cur_num) * cur_str)\n                else:\n                    ans.append(int(cur_num) * cur_str)\n            else:\n                myStack.append(c)\n        ans += myStack\n        return \"\".join(ans)\n```\n\n第一遍思路，但是debug发现当遇到s = \"100[leetcode]\"时有误，发现没考虑完全字符串和数字的转换\n\n```python\nclass Solution:\n    def decodeString(self, s: str) -> str:\n        # 使用栈，遇到\"]\"的时候进行出栈等操作，其他时候都入栈\n        ans = []\n        myStack = []\n        for c in s:\n            if c ==\"]\":\n                # 当遇到'['的时候添加到ans里面\n                cur_str = \"\"\n                while myStack and myStack[-1] != \"[\":\n                    cur_str = myStack.pop() + cur_str\n                # 剔除\"[\"\n                myStack.pop()\n                # 遇到‘[’的时候，获取下一个数字\n                # cur_num = myStack.pop()\n                # 但是数字可能不止一个\n                cur_num = \"\"\n                while myStack and myStack[-1].isdigit():\n                    cur_num = myStack.pop() + cur_num\n                # 如果stack里面还有内容 -- 新的字符串入栈\n                # 否则：加入答案\n                if myStack:\n                    myStack.append(int(cur_num) * cur_str)\n                else:\n                    ans.append(int(cur_num) * cur_str)\n            else:\n                myStack.append(c)\n        ans += myStack\n        return \"\".join(ans)\n```\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818060537","body":"用两个栈和一个元素记录\n\n```python\nclass MyQueue:\n    def __init__(self):\n        # stack1 出\n        # stack2 入\n        # s1[]\n        # s2[1,2]\n        # top 1\n        self.stack1 = []\n        self.stack2 = []\n        self.top = None\n\n    def push(self, x: int) -> None:\n        if not self.stack2:\n            self.top = x\n        self.stack2.append(x)\n\n    def pop(self) -> int:\n        if not self.stack1:\n            while self.stack2:\n                self.stack1.append(self.stack2.pop())\n        return self.stack1.pop()\n\n    def peek(self) -> int:\n        # 返回队列开头的元素\n        # 返回最先入栈的元素\n        # 拿一个top来记录\n        if not self.stack1:\n            return self.top\n        else:\n            return self.stack1[-1]\n\n    def empty(self) -> bool:\n        return not self.stack1 and not self.stack2\n\n```\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820345067","body":"1. 哈希\n\n```python\nclass Solution:\n    def maxChunksToSorted(self, arr: List[int]) -> int:\n        # 拿两个哈希数组来统计，看能不能分组\n        map1 = {}\n        map2 = {}\n        ans = 0\n\n        for i, j in zip(arr, sorted(arr)):\n            if i not in map1:\n                map1[i] = 1\n            else:\n                map1[i] += 1\n            if j not in map2:\n                map2[j] = 1\n            else:\n                map2[j] += 1\n            \n            if map1 == map2: ans += 1\n        return ans\n```\n\n2. 前面一段的最大值一定要小于当前段的最小值 ： 单调栈\n\n```python \nclass Solution:\n    def maxChunksToSorted(self, arr: List[int]) -> int:\n        stack = []\n        for num in arr:\n            # 前面一段的最大值一定要小于当前段的最小值\n            # 可以分段的后一段的最小的数，要比前一段最大的数要大\n            if stack and num < stack[-1]: \n                head = stack.pop()\n                while stack and num < stack[-1]: \n                    stack.pop()\n                stack.append(head)\n            else: \n                stack.append(num)\n        return len(stack)\n```\n\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1822240532","body":"#### 使用计算长度和反转\n\n全部reverse之后，分成两部分再reverse\n\n1. 翻转整个链表，得到新的链表头节点。\n2. 翻转前半部分链表，得到新的前半部分链表头节点。\n3. 翻转后半部分链表，得到新的后半部分链表头节点。\n4. 找到前半部分链表的末尾，将其指向后半部分链表的头节点，完成链表的拼接。\n5. 返回新的前半部分链表头节点。\n\n时间复杂度为O(n)\n\n空间复杂度为O(1)\n\n```python\nclass Solution:\n    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        # 特殊条件的判断\n        if not head or not head.next or k == 0:\n            return head\n        \n         # 计算链表长度\n        length = 1\n        cur = head\n        while cur.next:\n            cur = cur.next\n            length += 1\n\n        # 计算实际需要移动的步数\n        k = k % length\n        if k == 0: \n            return head\n\n        # 翻转整个链表\n        pre = None\n        cur = head\n        while cur:\n            cur.next, pre, cur = pre, cur, cur.next\n\n        # 翻转前半部分链表\n        cur = pre\n        pre = None\n        while k:\n            cur.next, pre, cur = pre, cur, cur.next\n            k -= 1\n        new_start_part = pre\n\n        # 翻转后半部分链表\n        pre = None\n        while cur:\n            cur.next, pre, cur = pre, cur, cur.next\n        \n        # 找到前部分链表的末尾，两部分拼接\n        cur = new_start_part\n        while cur.next:\n            cur = cur.next\n        cur.next = pre\n\n        return new_start_part\n```\n\n\n\n#### 快慢指针\n\n1. 使用快慢指针找到倒数第k个节点的前一个节点。\n2. 移动慢指针和快指针，直到快指针到达链表末尾。\n3. 重新连接链表，将慢指针的下一个节点作为新的头节点，将快指针的下一个节点指向原来的头节点。\n4. 返回新的头节点。\n\n```python\nclass Solution:\n    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        # 特殊条件的判断\n        if not head or not head.next or k == 0:\n            return head\n        \n        # 计算链表长度\n        length = 1\n        cur = head\n        while cur.next:\n            cur = cur.next\n            length += 1\n        \n        # 计算实际需要移动的步数\n        k = k % length\n        if k == 0:\n            return head\n        \n        # 找到倒数第k个节点的前一个节点\n        slow = fast = head\n        for _ in range(k):\n            fast = fast.next\n        \n        # 移动slow和fast指针，直到fast指针到达链表末尾\n        while fast.next:\n            slow = slow.next\n            fast = fast.next\n        \n        # 重新连接链表\n        new_head = slow.next\n        slow.next = None\n        fast.next = head\n        \n        return new_head\n\n```\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"verkru":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814398968","body":"### 初始可执行代码：\n\n```js\n/*\n * @lc app=leetcode.cn id=989 lang=javascript\n *\n * [989] 数组形式的整数加法\n */\n\n// @lc code=start\n/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */\nvar addToArrayForm = function (A, K) {\n\n    // 设置必要参数\n    let res = []    // 返回结果\n    let KVal = K\n    let KList = []  // K 的数字数组\n    let carry = 0\n\n\n    // 1，将数字截取成数字数组\n    while (KVal > 0) {\n        KList = [Math.floor(KVal % 10), ...KList]\n        KVal = Math.floor(KVal / 10)\n    }\n\n    // 2，判断 A 与 KList 的长度大小，长度小的末尾不足补零\n    let judgeNum = A.length - KList.length\n    let zeroList = new Array(Math.abs(judgeNum)).fill(0)\n    if (judgeNum > 0) {\n        KList = [...zeroList, ...KList]\n    } else {\n        A = [...zeroList, ...A]\n    }\n\n    // 3，对位循环并输出\n    for (let i = A.length - 1; i >= 0; i--) {\n        \n        // 判断进位\n        let resSingle = A[i] + KList[i] + carry\n        let resVal = Math.floor(resSingle % 10)\n        carry = Math.floor(resSingle / 10)\n        res = [resVal, ...res]\n    }\n\n    // 4，判断最后一次进位\n    if(carry > 0) res = [carry, ...res]\n\n    return res\n};\n// @lc code=end\n```\n\n### 优化后：\n\n```js\n/*\n * @lc app=leetcode.cn id=989 lang=javascript\n *\n * [989] 数组形式的整数加法\n */\n\n// @lc code=start\n/**\n * @param {number[]} A\n * @param {number} K\n * @return {number[]}\n */\nvar addToArrayForm = function (A, K) {\n\n    // 设置必备参数\n    let i = A.length\n    let res = []    // 输出结果\n    let KVal = K\n\n    // 1，循环 A 数组，以 A 数组的每个元素都为个位为标准，对 K 进行位数处理，并加和\n    while (--i >= 0 || KVal > 0) {\n        if(i >= 0) KVal += A[i]  // 最后一次加和的进位处理\n        res.push(Math.floor(KVal % 10))\n        KVal = Math.floor(KVal / 10)    // 由于要配合与数组中的个位数进行加和，需要将 KVal 降位处理\n    }\n\n    // 2,将完成的数组翻转后输出\n    return res.reverse()\n};\n// @lc code=end\n```\n空间复杂度：这个函数的空间复杂度是O(n)，其中n是数组A的长度。这是因为函数中创建了一个与A长度相同的数组res来存储结果。\n\n时间复杂度：这个函数的时间复杂度也是O(n)，其中n是数组A的长度。这是因为在while循环中，会遍历数组A的每个元素一次，同时对K进行相应的处理。因此，总的执行次数与数组A的长度相同。","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816681058","body":"1. 使用两个指针`prev`和`i`来跟踪最近的目标字符的位置\n2. 第一次遍历中，从左到右计算每个字符到目标字符的距离，并将其存储在`result`数组中\n3. 在第二次遍历中，从右到左计算每个字符到目标字符的距离，并将其与之前计算的距离取最小值\n\n```js\n/*\n * @lc app=leetcode.cn id=821 lang=javascript\n *\n * [821] 字符的最短距离\n */\n\n// @lc code=start\n/**\n * @param {string} s\n * @param {character} c\n * @return {number[]}\n */\nvar shortestToChar = function (s, c) {\n  const n = s.length;\n  const result = new Array(n).fill(0);\n\n  let prev = -Infinity;\n  for (let i = 0; i < n; i++) {\n    if (s[i] === c) {\n      prev = i;\n    }\n    result[i] = i - prev;\n  }\n\n  prev = Infinity;\n  for (let i = n - 1; i >= 0; i--) {\n    if (s[i] === c) {\n      prev = i;\n    }\n    result[i] = Math.min(result[i], prev - i);\n  }\n\n  return result;\n};\n// @lc code=end\n```\n\n时间复杂度为O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817346693","body":"## 牛刀初试🪫\n\n```js\n/*\n * @lc app=leetcode.cn id=1381 lang=javascript\n *\n * [1381] 设计一个支持增量操作的栈\n */\n\n// @lc code=start\n/**\n * @param {number} maxSize\n */\nvar CustomStack = function (maxSize) {\n  this.maxSize = maxSize;\n  this.stack = [];\n};\n\n/**\n * @param {number} x\n * @return {void}\n */\nCustomStack.prototype.push = function (x) {\n  if (this.stack.length < this.maxSize) {\n    this.stack.push(x);\n  }\n};\n\n/**\n * @return {number}\n */\nCustomStack.prototype.pop = function () {\n  if (this.stack.length) {\n    return this.stack.pop();\n  } else {\n    return -1;\n  }\n};\n\n/**\n * @param {number} k\n * @param {number} val\n * @return {void}\n */\nCustomStack.prototype.increment = function (k, val) {\n  for (let index = 0; index < Math.min(k, this.stack.length); index++) {\n    this.stack[index] += val;\n  }\n};\n\n/**\n * Your CustomStack object will be instantiated and called as such:\n * var obj = new CustomStack(maxSize)\n * obj.push(x)\n * var param_2 = obj.pop()\n * obj.increment(k,val)\n */\n// @lc code=end\n```\n\n时间复杂度为 O(1)，空间复杂度为 O(maxSize)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817586433","body":"## 牛刀初试🪫\n\n```js\n/*\n * @lc app=leetcode.cn id=394 lang=javascript\n *\n * [394] 字符串解码\n */\n\n// @lc code=start\n/**\n * @param {string} s\n * @return {string}\n */\nvar decodeString = function (s) {\n  let res = \"\";\n  let loop = \"\";\n  let stackCount = 0;\n  let loopTimes = \"\";\n  for (let index = 0; index < s.length; index++) {\n    const element = s[index];\n    if (!isNaN(element) && !loop) {\n      if (stackCount) {\n        loop += element;\n      } else {\n        loopTimes += element;\n      }\n    } else if (element === \"[\") {\n      if (stackCount) {\n        loop += element;\n      }\n      stackCount++;\n    } else if (element === \"]\") {\n      stackCount--;\n      if (!stackCount) {\n        res += decodeString(loop).repeat(loopTimes);\n        loop = \"\";\n        loopTimes = \"\";\n      } else {\n        loop += element;\n      }\n    } else if (stackCount) {\n      loop += element;\n    } else {\n      res += element;\n    }\n  }\n\n  return res;\n};\n// @lc code=end\n```\n\n时间复杂度为 O(n)，空间复杂度为 O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818280213","body":"## 牛刀初试🪫\n\n```js\n/*\n * @lc app=leetcode.cn id=232 lang=javascript\n *\n * [232] 用栈实现队列\n */\n\n// @lc code=start\n/**\n * Initialize your data structure here.\n */\nvar MyQueue = function () {\n  this.stack = [];\n};\n\n/**\n * Push element x to the back of queue.\n * @param {number} x\n * @return {void}\n */\nMyQueue.prototype.push = function (x) {\n  this.stack.push(x);\n};\n\n/**\n * Removes the element from in front of queue and returns that element.\n * @return {number}\n */\nMyQueue.prototype.pop = function () {\n  return this.stack.length ? this.stack.splice(0, 1) : -1;\n};\n\n/**\n * Get the front element.\n * @return {number}\n */\nMyQueue.prototype.peek = function () {\n  return this.stack[0] || -1;\n};\n\n/**\n * Returns whether the queue is empty.\n * @return {boolean}\n */\nMyQueue.prototype.empty = function () {\n  return !this.stack.length;\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * var obj = new MyQueue()\n * obj.push(x)\n * var param_2 = obj.pop()\n * var param_3 = obj.peek()\n * var param_4 = obj.empty()\n */\n// @lc code=end\n```\n\n时间复杂度为 O(1)，空间复杂度为 O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"eggeggliu":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814465587","body":"[989. 数组形式的整数加法](https://leetcode.cn/problems/add-to-array-form-of-integer/description/)\n# 解题思路\n笨办法把k也变成数组形式，用while循环遍历两个数组进行相加，记得处理进位。(有优化空间，k没必要转换为数组，一个数字本身已经存够了需要的信息)\n## 实现代码\n```Cpp\nvector<int> addToArrayForm(vector<int>& num, int k) {\n    if (!k) return num;\n    vector<int> n;\n    while (k) {\n        n.push_back(k % 10);\n        k /= 10;\n    }\n    reverse(num.begin(), num.end());\n    int plus = 0, ptr = 0;\n    int len = min(num.size(), n.size());\n    vector<int> res;\n    while (ptr < len) {\n        int temp = num[ptr] + n[ptr] + plus;\n        res.push_back(temp % 10);\n        plus = temp / 10;\n        ++ptr;\n    }\n    if (ptr == num.size()) {\n        while (ptr < n.size()) {\n            int temp = n[ptr] + plus;\n            res.push_back(temp % 10);\n            plus = temp / 10;\n            ++ptr;\n        }\n    } else {\n        while (ptr < num.size()) {\n            int temp = num[ptr] + plus;\n            res.push_back(temp % 10);\n            plus = temp / 10;\n            ++ptr;\n        }\n    }\n    if (plus) res.push_back(1);\n    reverse(res.begin(), res.end());\n    return res;\n}\n```\n## 算法复杂度\nO(max(num.size(), log k / log 10))","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1815879007","body":"[821. 字符的最短距离](https://leetcode.cn/problems/shortest-distance-to-a-character/description/)\n# 解题思路\n遍历一边字符串记录所有c出现的位置。再用一个滑动指针求出每个下标对应的结果。\n## 实现代码\n```Cpp\nvector<int> shortestToChar(string s, char c) {\n    vector<int> chars = {}, res = {};\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == c) {\n            chars.push_back(i);\n        }\n    }\n    int ptr = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (ptr == chars.size() - 1) {\n            res.push_back(fabs(i - chars[ptr]));\n            continue;\n        }\n        int pre = fabs(i - chars[ptr]), next = fabs(i - chars[ptr + 1]);\n        if (pre < next) {\n            res.push_back(pre);\n        } else {\n            res.push_back(next);\n            ++ptr;\n        }\n    }\n    return res;\n}\n```\n## 算法复杂度\nO(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817462981","body":"```cpp\nclass CustomStack {\n    maxSize:number;\n    cnt:number;\n    stack: Array<number>;\n    incrementInfos: Array<number>;\n\n    constructor(maxSize: number) {\n      this.maxSize = maxSize;\n      this.cnt = -1;\n      this.incrementInfos = new Array(maxSize).fill(0);\n      this.stack = [];\n    }\n\n    push(x: number): void {\n      if (this.cnt < this.maxSize -1) {\n        this.cnt++;\n        this.stack.push(x);\n      }\n    }\n\n    pop(): number {\n      if (this.cnt === -1) return -1;\n      const inc = this.incrementInfos[this.cnt];\n\n      if (inc) {\n        this.incrementInfos[this.cnt] = 0;\n        this.incrementInfos[this.cnt -1] += inc;\n      }\n      this.cnt--;\n      return this.stack.pop() + inc;\n    }\n\n    increment(k: number, val: number): void {\n      let i = k;\n      if (this.cnt < i) i = this.cnt + 1;\n      if (i > 0 ) this.incrementInfos[i - 1] += val;\n    }\n}\n```\n复杂度 O(1)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817892545","body":"# 代码\n```cpp\nclass Solution {\npublic:\n    string getDigits(string &s, size_t &ptr) {\n        string ret = \"\";\n        while (isdigit(s[ptr])) {\n            ret.push_back(s[ptr++]);\n        }\n        return ret;\n    }\n\n    string getString(vector <string> &v) {\n        string ret;\n        for (const auto &s: v) {\n            ret += s;\n        }\n        return ret;\n    }\n\n    string decodeString(string s) {\n        vector <string> stk;\n        size_t ptr = 0;\n\n        while (ptr < s.size()) {\n            char cur = s[ptr];\n            if (isdigit(cur)) {\n                // 获取一个数字并进栈\n                string digits = getDigits(s, ptr);\n                stk.push_back(digits);\n            } else if (isalpha(cur) || cur == '[') {\n                // 获取一个字母并进栈\n                stk.push_back(string(1, s[ptr++])); \n            } else {\n                ++ptr;\n                vector <string> sub;\n                while (stk.back() != \"[\") {\n                    sub.push_back(stk.back());\n                    stk.pop_back();\n                }\n                reverse(sub.begin(), sub.end());\n                // 左括号出栈\n                stk.pop_back();\n                // 此时栈顶为当前 sub 对应的字符串应该出现的次数\n                int repTime = stoi(stk.back()); \n                stk.pop_back();\n                string t, o = getString(sub);\n                // 构造字符串\n                while (repTime--) t += o; \n                // 将构造好的字符串入栈\n                stk.push_back(t);\n            }\n        }\n\n        return getString(stk);\n    }\n};\n```\n# 复杂度\nO(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1817900893","body":"# 思路\n学习官方题解的优雅写法\n# 代码\n```cpp\nclass MyQueue {\nprivate:\n    stack<int> inStack, outStack;\n\n    void in2out() {\n        while (!inStack.empty()) {\n            outStack.push(inStack.top());\n            inStack.pop();\n        }\n    }\n\npublic:\n    MyQueue() {}\n\n    void push(int x) {\n        inStack.push(x);\n    }\n\n    int pop() {\n        if (outStack.empty()) {\n            in2out();\n        }\n        int x = outStack.top();\n        outStack.pop();\n        return x;\n    }\n\n    int peek() {\n        if (outStack.empty()) {\n            in2out();\n        }\n        return outStack.top();\n    }\n\n    bool empty() {\n        return inStack.empty() && outStack.empty();\n    }\n};\n```","onTime":true},null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1822236727","body":"# 思路\n快慢指针，注意`k>链表长度`的情况\n# 代码\n```cpp\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if (head == nullptr || head->next == nullptr || !k) return head;\n        ListNode* cur = head;\n        int len = 1;\n        while (cur->next) {\n            cur = cur->next;\n            ++len;\n        }\n        k %= len;\n        ListNode* first = head;\n        ListNode* second = head;\n        while (k--) {\n            first = first->next;\n        }\n        while (first->next) {\n            first = first->next;\n            second = second->next;\n        }\n        first->next = head;\n        ListNode* newHead = second->next;\n        second->next = nullptr;\n        return newHead;\n    }\n};\n```\n# 复杂度\nO(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dr-kkk":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814589556","body":"### 思路 \n先对数组操作，如果k较大再通过%10处理，最后通过交换向量中前后两个数实现翻转\n### 代码\n```cpp\nclass Solution\n{\npublic:\n    vector<int> addToArrayForm(vector<int> &num, int k)\n    {\n        vector<int> ans;\n        int len = num.size();\n        for (int i = len - 1; i >= 0; i--)\n        {\n            k += num[i];\n            ans.push_back(k % 10);\n            k /= 10;\n        }\n        while (k > 0)\n        {\n            ans.push_back(k % 10);\n            k /= 10;\n            len++;\n        }\n        for (int i = 0, j = len - 1; i < j;)\n        {\n            swap(ans[i], ans[j]);\n            i++;\n            j--;\n        }\n        return ans;\n    }\n};\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816236392","body":"### 思路\n先遍历字符串，用一个向量记录目标字符的位置；然后再遍历字符串，取当前字符到两个目标字符的距离之差的绝对值的最小值\n\n### 代码\n```c++\n   class Solution\n{\npublic:\n    vector<int> shortestToChar(string s, char c)\n    {\n        vector<int> appearc, ans;\n        int n = s.size();\n        for (int i = 0; i < n; i++)\n        {\n            if (s[i] == c)\n                appearc.push_back(i);\n        }\n        appearc.push_back(21474836);\n        int cnt = 1;\n        for (int i = 0; i < n; i++)\n        {\n            ans.push_back(min(abs(i - appearc[cnt - 1]), abs(i - appearc[cnt])));\n            if (i == appearc[cnt])\n                cnt++;\n        }\n        return ans;\n    }\n};\n```\n复杂度分析：\n时间复杂度：O(n)\n空间复杂度：O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jinhma":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1814610210","body":"思路：先按照k依次加数组中的元素取余来获取结果，最后单独处理k的情况\r\n``` JAVA\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> result = new ArrayList<>();\r\n        int len = num.length;\r\n        for (int i = 0; i < len; ++i) {\r\n            int a = num[len - i - 1];\r\n            k = k + a;\r\n            int b = k % 10;\r\n            result.add(b);\r\n            k = k / 10;\r\n        }\r\n        while (k != 0) {\r\n            int a = k % 10;\r\n            result.add(a);\r\n            k = k / 10;\r\n        }\r\n        Collections.reverse(result);\r\n        return result;\r\n    }\r\n}\r\n```\r\n时间复杂度：O(n)\r\n空间复杂度：O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1815653163","body":"```java\nclass Solution {\n    public int[] shortestToChar(String s, char c) {\n        int len = s.length();\n        int[] result = new int[len];\n        List<Integer> cPosition = new ArrayList<>();\n        for (int i=0;i<len;i++){\n            if (s.charAt(i)==c){\n                cPosition.add(i);\n            }\n        }\n        \n        for (int i=0;i<len;i++){\n            if (s.charAt(i)==c){\n                result[i] = 0;\n                continue;\n            }\n            int min = len;\n            for (int a:cPosition){\n                min = Math.min(min,Math.abs(i-a));\n            }\n            result[i] = min;\n        }\n        return result;\n    }\n}\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817501970","body":"\n```java\nclass CustomStack {\n    List<Integer> stack;\n    int size;\n    public CustomStack(int maxSize) {\n        this.stack = new ArrayList<Integer>(maxSize);\n        this.size = maxSize;\n    }\n    \n    public void push(int x) {\n        if(stack.size()+1<=size){\n            stack.add(x);\n        }\n    }\n    \n    public int pop() {\n        if(stack.size() == 0){\n            return -1;\n        }\n        int result = stack.get(stack.size()-1);\n        stack.remove(stack.size()-1);\n        return result;\n    }\n    \n    public void increment(int k, int val) {\n        for(int i=0;i<stack.size();i++){\n            int var1 = stack.get(i);\n            if(i<k){\n                stack.set(i, var1+val);\n            }\n        }\n    }\n}\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817835690","body":"\n```java\nclass Solution {\n    public String decodeString(String s) {\n        Deque<Integer> numStack = new LinkedList<>();\n        Deque<StringBuilder> sbStack = new LinkedList<>();\n        int multi = 0;\n        StringBuilder sb = new StringBuilder();\n        for(char ch : s.toCharArray()){\n            if(Character.isDigit(ch)){\n               multi = multi * 10 + ch - '0';\n            }\n            else if(ch == '['){\n                numStack.push(multi);\n                sbStack.push(sb);\n                multi = 0;\n                sb = new StringBuilder();\n            }\n            else if(ch == ']'){\n                StringBuilder sbTemp = sbStack.pop();\n                int numTemp = numStack.pop();\n                for(int i = 0;i<numTemp;i++){\n                    sbTemp.append(sb.toString());\n                }\n                sb = sbTemp;\n            }\n            else{\n                sb.append(ch);\n            }\n        }\n        return sb.toString();\n    }\n}\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1819205502","body":"\n```java\nclass MyQueue {\n    private Stack<Integer> stackOne;\n    private Stack<Integer> stackTwo;\n    public MyQueue() {\n        this.stackOne = new Stack<Integer>();\n        this.stackTwo = new Stack<Integer>();\n    }\n\n    public void push(int x) {\n        stackOne.add(x);\n    }\n\n    public int pop() {\n        while (!stackOne.empty()){\n            stackTwo.add(stackOne.pop());\n        }\n        int result = stackTwo.pop();\n        while (!stackTwo.empty()){\n            stackOne.add(stackTwo.pop());\n        }\n        return result;\n    }\n\n    public int peek() {\n        while (!stackOne.empty()){\n            stackTwo.add(stackOne.pop());\n        }\n        int result = stackTwo.peek();\n        while (!stackTwo.empty()){\n            stackOne.add(stackTwo.pop());\n        }\n        return result;\n    }\n\n    public boolean empty() {\n        return stackOne.empty();\n    }\n}\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820020860","body":"\n```java\nclass Solution {\n    public int maxChunksToSorted(int[] arr) {\n        Deque<Integer> stack = new ArrayDeque<Integer>();\n        for (int num : arr) {\n            if (stack.isEmpty() || num >= stack.peek()) {\n                stack.push(num);\n            } else {\n                int mx = stack.pop();\n                while (!stack.isEmpty() && stack.peek() > num) {\n                    stack.pop();\n                }\n                stack.push(mx);\n            }\n        }\n        return stack.size();\n    }\n}\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"emergence23":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1815631366","body":"> Problem: [989. 数组形式的整数加法](https://leetcode.cn/problems/add-to-array-form-of-integer/description/)\r\n\r\n[TOC]\r\n\r\n# 思路\r\n将数组转为字符串，然后转为 int，直接相加，然后再转为字符串拆分保存\r\n\r\n\r\n# 复杂度\r\n- 时间复杂度:\r\n> 添加时间复杂度, 示例： $O(n)$\r\n\r\n- 空间复杂度:\r\n> 添加空间复杂度, 示例： $O(n)$\r\n  \r\n\r\n\r\n# Code\r\n```Java []\r\n\r\nimport java.math.BigInteger;\r\nclass Solution {\r\n    public static List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res = new ArrayList<Integer>();\r\n\r\n        int nLength = num.length;\r\n        StringBuffer numS = new StringBuffer();\r\n        for (int i = 0; i < nLength; i++) {\r\n            numS.append(String.valueOf(num[i]));\r\n        }\r\n        BigInteger numB = new BigInteger(numS.toString());\r\n        BigInteger add = numB.add(BigInteger.valueOf(k));\r\n        String resS = String.valueOf(add);\r\n        char[] charArray = resS.toCharArray();\r\n\r\n        for (char c : charArray) {\r\n            res.add(Integer.valueOf(String.valueOf(c)));\r\n        }\r\n\r\n        return res;\r\n    }\r\n}\r\n```\r\n  ","onTime":false},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/3#issuecomment-1816031579","body":"# 思路\r\n问题可以转换成，对 s 的每个下标 i，求\r\n\r\ns[i] 到其左侧最近的字符 c 的距离\r\ns[i] 到其右侧最近的字符 c 的距离\r\n这两者的最小值。\r\n\r\n对于前者，我们可以从左往右遍历 s，若 s[i]=c 则记录下此时字符 c 的的下标 idx。遍历的同时更新 answer[i]=i−idx。\r\n\r\n对于后者，我们可以从右往左遍历 s，若 s[i]=c 则记录下此时字符 c 的的下标 idx。遍历的同时更新 answer[i]=min⁡(answer[i],idx−i)。\r\n\r\n代码实现时，在开始遍历的时候 idx 可能不存在，为了简化逻辑，可以用 −n 或 2n 表示，这里 n 是 s 的长度。\r\n\r\n参考\r\n作者：力扣官方题解\r\n链接：https://leetcode.cn/problems/shortest-distance-to-a-character/solutions/1429810/zi-fu-de-zui-duan-ju-chi-by-leetcode-sol-2t49/\r\n来源：力扣（LeetCode）\r\n\r\n\r\n# 复杂度\r\n- 时间复杂度:\r\n> 添加时间复杂度, 示例： $O(n)$，n 为字符串长度\r\n\r\n- 空间复杂度:\r\n> 添加空间复杂度, 示例： $O(1)$\r\n  \r\n\r\n\r\n# Code\r\n```Java []\r\n\r\nclass Solution {\r\n    public int[] shortestToChar(String s, char c) {\r\n\r\n        int n = s.length();\r\n        int[] ans = new int[n];\r\n\r\n        for (int i = 0, idx = -n ; i < n; i++) {\r\n            if (s.charAt(i) == c) {\r\n                idx = i;\r\n            }\r\n            ans[i] = i - idx;\r\n\r\n        }\r\n\r\n        for (int i = n -1, idx = 2 * n; i >= 0; i--){\r\n            if (s.charAt(i) == c) {\r\n                idx = i;\r\n            }\r\n\r\n            ans[i] = Math.min(ans[i], idx - i);\r\n        }\r\n\r\n        return ans;\r\n\r\n    }\r\n}\r\n```\r\n  ","onTime":true},null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818878831","body":"# 思路\r\n参考官方思路\r\n将一个栈当作输入栈，用于压入 push 传入的数据；另一个栈当作输出栈，用于 pop 和 peek 操作。\r\n\r\n每次 pop 或 peek 时，若输出栈为空则将输入栈的全部数据依次弹出并压入输出栈，这样输出栈从栈顶往栈底的顺序就是队列从队首往队尾的顺序。\r\n\r\n\r\n# Code\r\n```Java []\r\n\r\nclass MyQueue {\r\n    Deque<Integer> inStack;\r\n    Deque<Integer> outStack;\r\n\r\n    public MyQueue() {\r\n        inStack = new ArrayDeque<Integer>();\r\n        outStack = new ArrayDeque<Integer>();\r\n    }\r\n\r\n    public void push(int x) {\r\n        inStack.push(x);\r\n    }\r\n\r\n    public int pop() {\r\n        if (outStack.isEmpty()) {\r\n            in2out();\r\n        }\r\n        return outStack.pop();\r\n    }\r\n\r\n    public int peek() {\r\n        if (outStack.isEmpty()) {\r\n            in2out();\r\n        }\r\n        return outStack.peek();\r\n    }\r\n\r\n    public boolean empty() {\r\n        return inStack.isEmpty() && outStack.isEmpty();\r\n    }\r\n\r\n    private void in2out() {\r\n        while (!inStack.isEmpty()) {\r\n            outStack.push(inStack.pop());\r\n        }\r\n    }\r\n}\r\n```\r\n作者：力扣官方题解\r\n链接：https://leetcode.cn/problems/implement-queue-using-stacks/solutions/632369/yong-zhan-shi-xian-dui-lie-by-leetcode-s-xnb6/\r\n来源：力扣（LeetCode）\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"0christ1":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1815320617","body":"### 思路\r\n1. 先把数组num转换成integer数字\r\n2. 再加上k得到total\r\n3. 再把total里的数字存到数组里面\r\n4. 最后返回数组\r\n5. 考虑到edge case，当且仅当total为0的情况\r\n\r\n### 代码\r\n```python\r\nclass Solution(object):\r\n    def addToArrayForm(self, num, k):\r\n        num_val = 0\r\n\r\n        for elem in num:\r\n           num_val = num_val * 10 + elem\r\n\r\n        total = num_val + k\r\n\r\n        if total == 0: \r\n           return [0]\r\n\r\n        ans = []\r\n\r\n        while total > 0:\r\n            ans.insert(0, total%10)\r\n            total = total // 10\r\n\r\n        return ans        \r\n```\r\n\r\n**复杂度分析**\r\n- 时间复杂度：因为要获取数组里所有的元素，所以涉及到数组常见操作里的遍历，即 $`O(N)`$\r\n- 空间复杂度：创建了新的空数组，即 $`O(1)`$\r\n\r\n\r\n### 总结\r\n1. 这道题的算法核心思想在于统一处理。先将两种不同类型的数据结构“Array”和“Int”转换成同一个类型“int”，再进行数学运算得到结果。\r\n2. 以此题作延伸，想要操作不同数据结构的变量，可以先尝试是否可以统一。\r\n\r\n***\r\n### 新发现\r\n相同思路但写法不同\r\n```python\r\nclass Solution(object):\r\n    def addToArrayForm(self, num, k):\r\n       integer_result = int(''.join(map(str, num)))\r\n       sum = integer_result+k\r\n       array_result = [int(digit) for digit in str(sum)]\r\n       return(array_result)\r\n```","onTime":false},null,null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1821164421","body":"### 思路\r\n1. 自己想的：先判断数组是不是升序（不是就返回1），于是就没思路了\r\n2. 官方题解：单调栈刚好解决了我的思路问题\r\n\r\n### 代码\r\n```python\r\nclass Solution:\r\n    def maxChunksToSorted(self, arr: List[int]) -> int:\r\n        stack = []\r\n        for a in arr:\r\n            if stack and stack[-1] > a:\r\n                cur = stack[-1]\r\n                while stack and stack[-1] > a : \r\n                    stack.pop()\r\n                stack.append(cur)\r\n            else:\r\n                stack.append(a)\r\n        return len(stack)\r\n```\r\n\r\n**复杂度分析**\r\n- 时间复杂度：$`O(N)`$, N is the length of array\r\n- 空间复杂度：$`O(N)`$, N is the length of array\r\n\r\n\r\n### 总结\r\n这题对目前的我来说还是太难了\r\n1. 没搞明白stack的特性和如何运用stack这样的adt去解这道算法题\r\n2. 没有吃透排序问题，比如计数排序。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"junru281":[null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/4#issuecomment-1817403752","body":"Leetcode 1381 Nov 17\n\n[1381. Design a Stack With Increment Operation](https://leetcode.cn/problems/design-a-stack-with-increment-operation/)\n\n\n```java\nclass CustomStack {\n    int[] stack;\n  \t// pointer here represent the current element\n    int pointer = -1;\n  \t// create the stack frame by initialzie an array of size (maxsize)\n    public CustomStack(int maxSize) {\n        stack = new int[maxSize];\n    }\n    //remember to check if the array is out of space\n    public void push(int x) {\n        if(pointer + 1 <= stack.length-1){\n            stack[pointer+1] = x;\n            pointer ++;\n        }\n    }\n    // remember to check if the stack frame is still null --> pointer is -1\n    public int pop() {\n        if(pointer == -1){\n             return -1;\n        }\n        int ret_val = stack[pointer];\n        pointer --;\n        return ret_val;\n    }\n    //  first to find the correct number of elements to update\n  \t//  then use a for loop to update all \"k\" value\n    public void increment(int k, int val) {\n        int min_count = Math.min(pointer, k-1);\n        for(int i = 0; i<=min_count; i++){\n                stack[i] = stack[i]+val;\n        }\n    }\n}\n\n/**\n * Your CustomStack object will be instantiated and called as such:\n * CustomStack obj = new CustomStack(maxSize);\n * obj.push(x);\n * int param_2 = obj.pop();\n * obj.increment(k,val);\n */\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/5#issuecomment-1817886797","body":"# Leetcode 394 Nov 19 #\n\n[394. Decode String](https://leetcode.cn/problems/decode-string/)\n\n**Ideas**\n\n与括号匹配问题联系, 故而使用stack\n\n主要卡壳在如何提取数字上, 最后用了一个单独的parameter记录. 但何时清零, 何时加1, 还花了点时间. \n\n\n```java\nclass Solution {\n    public String decodeString(String s) {\nStack<String> stack = new Stack<>();\n        int times;\n        int left_ptr;\n        int right_ptr = 0;\n        while(s.contains(\"[\")) {\n            String rep = \"\";\n            for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i) == '[') {\n                    times = Integer.parseInt(s.substring(i - 1, i));\n                    left_ptr = i - 1;\n                    for (int j = i + 1; j < s.length(); j++) {\n                        stack.push(s.substring(j, j + 1));\n                        if (s.charAt(j) == '[') {\n                            stack.clear();\n                            times = Integer.parseInt(s.substring(j - 1, j));\n                            left_ptr = j - 1;\n                        }\n                        if (s.charAt(j) == ']') {\n                            stack.pop();\n                            right_ptr = j;\n                            break;\n                        }\n                    }\n\n                    while (!stack.isEmpty()) {\n                        rep = stack.pop() + rep;\n                    }\n\n                    String tmp = rep;\n                    for (int m = 0; m < times - 1; m++) {\n\n                        rep = rep + tmp;\n                    }\n\n                    s = s.substring(0, left_ptr) + rep + s.substring(right_ptr + 1);\n                    break;\n                }\n            }\n\n        }\n        return s;\n\n    }\n}\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818028298","body":"# Leetcode 232 Nov 20 #\n[232. Implement Queue using Stacks](https://leetcode.cn/problems/implement-queue-using-stacks/)\n\n**Ideas**\n\nThe huge difference between a stack and a queue is the order to retrieve an element. \nBy the hint that we are going to us e two stack, we can use one stack to store elements just as queue and use the other stack to reverse the order of one queue.\nIn other words, before we push the new element, we first pop all existing elements and then push the new element to the bottom of a stack. Then push all the element back, \nso that the first element is still at the top of the stack. \n\n```java\nclass MyQueue {\n    Stack<Integer> queue;\n    Stack<Integer> records;\n\n    public MyQueue() {\n        queue = new Stack<>();\n        records = new Stack<>();\n    }\n    \n    public void push(int x) {\n        while(!queue.empty()){\n            int top_queue = queue.pop();\n            records.push(top_queue);\n        }\n        queue.push(x);\n        while(!records.empty()){\n            int next = records.pop();\n            queue.push(next);\n        }\n    }\n    \n    public int pop() {\n        return queue.pop();\n    }\n    \n    public int peek() {\n        return queue.peek();\n    }\n    \n    public boolean empty() {\n        if(queue.empty()){\n            return true;\n        }\n        else return false;\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */\n```","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820154274","body":"# Leetcode 768 Nov 20 #\n[768. Max Chunks To Make Sorted II](https://leetcode.cn/problems/max-chunks-to-make-sorted-ii/)\n\n**Ideas**\n\nSpent one hour trying to figure out an algorithm but failed. After taking a look at [seedjyh's comment](https://leetcode.cn/problems/max-chunks-to-make-sorted-ii/discussion/comments/1701328),\nI figured out how to do using the monotonicity. But forgot we should use stack. :(\n\n\n```java\nclass Solution {\n    public int maxChunksToSorted(int[] arr) {\n        int res = 1;\n        for(int i = 0; i< arr.length; i++){\n            if(LeftMax(arr, i) <= RightMin(arr, i+1))\n                res ++;\n        }\n        return res;\n    }\n\n    public int LeftMax(int[] arr, int t){\n        int max = arr[0];\n        for(int i = 0; i<= t; i++){\n            if(max < arr[i]){\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n\n    public int RightMin(int[] arr, int t){\n        if(t>=arr.length)\n            return -1;\n        int min = arr[t];\n        for(int i = t; i< arr.length; i++){\n            if(min > arr[i]){\n                min = arr[i];\n            }\n        }\n        return min;\n    }\n}\n```\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1822158585","body":"# Leetcode 61 Nov 21 #\n[61.Rotate List](https://leetcode.cn/problems/rotate-list/)\n\n**Ideas**\n\n我是直接粗暴上手List, :( 每一次循环找到last node.next =  head, last node的前一个.next设定为null. 直接暴力用for loop.\n\nMistakes: \n1. 没考虑edge case, when empty list, only one node\n2. 没考虑k>>n, 根据评论区小伙伴的提醒, 发现可以用modulus方法\n\n\n```java\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n        if(head == null) return null;\n        if(head.next == null) return head;\n        int n = 1;\n        ListNode node = head;\n        while(node.next != null){\n            node = node.next;\n            n++;\n        }\n        k = k%n;\n        for(int i =0; i<k; i++){\n            ListNode rotate_node = head;\n            ListNode rotate_node_prev = head;\n            while(rotate_node.next != null){\n                rotate_node_prev = rotate_node;\n                rotate_node = rotate_node.next;\n            }\n            rotate_node_prev.next = null;\n            rotate_node.next = head;\n            head = rotate_node;\n        }\n        return head;\n    }\n}\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joe-the-plumber":[null,null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818151042","body":"```\r\nclass Stack(object):\r\n    def __init__(self):\r\n        self.stack = []\r\n\r\n    def push(self, x):              # 入栈\r\n        self.stack.append(x)\r\n\r\n    def pop(self):                  # 出栈\r\n        if self.is_empty:           # 注意特殊情况\r\n            return None\r\n        return self.stack.pop()\r\n\r\n    @property\r\n    def length(self):               # 获取栈中元素\r\n        return len(self.stack)\r\n    \r\n    @property                      \r\n    def is_empty(self):            # 获取栈的状态：是否为空\r\n        return self.length == 0\r\n\r\n\r\n\r\nclass MyQueue:\r\n    def __init__(self):\r\n        \"\"\"\r\n        Initialize your data structure here.\r\n        \"\"\"\r\n        self.stack1 = Stack()                           # 基本栈\r\n        self.stack2 = Stack()                           # 辅助栈\r\n\r\n    def push(self, x):\r\n        \"\"\"\r\n        Push element x to the back of queue.\r\n        :type x: int\r\n        :rtype: None\r\n        \"\"\"\r\n        self.stack1.push(x)                             # 入栈，即入队列\r\n\r\n    def pop(self):\r\n        \"\"\"\r\n        Removes the element from in front of queue and returns that element.\r\n        :rtype: int\r\n        \"\"\"\r\n        while self.stack1.length > 1:                   # 卡住要出栈的最后一个元素\r\n            self.stack2.push(self.stack1.pop())         # 其他元素倒进辅助栈\r\n        res = self.stack1.pop()                         # 那个被卡住的元素就是所需\r\n        while not self.stack2.is_empty:                 # 只要辅助栈不为空\r\n            self.stack1.push(self.stack2.pop())         # 辅助栈中的元素倒回基本栈\r\n        return res                                      # 返回栈底元素即为出队队头\r\n\r\n    def peek(self):\r\n        \"\"\"\r\n        Get the front element.\r\n        :rtype: int\r\n        \"\"\"\r\n        while self.stack1.length > 1:                   # 卡住要出栈的最后一个元素\r\n            self.stack2.push(self.stack1.pop())         # 其他元素倒进辅助栈\r\n        res = self.stack1.pop()                         # 那个被卡住的元素就是所需\r\n        self.stack2.push(res)                           # 记得把被卡住的元素放回\r\n        while self.stack2.length > 0:                   # 只要辅助栈不为空\r\n            self.stack1.push(self.stack2.pop())         # 辅助栈中的元素倒回基本栈\r\n        return res                                      # 返回栈底元素即为出队队头\r\n\r\n    def empty(self):\r\n        \"\"\"\r\n        Returns whether the queue is empty.\r\n        :rtype: bool\r\n        \"\"\"\r\n        return self.stack1.is_empty                     # 队列的状态即为基本栈的状态\r\n```","onTime":true},null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1822140555","body":"官方题解的python最好改一下。。。现在版本实在不行。。。\n\nanyway,  c++ here, we go!\n```\n//    获取链表的长度\n//   k = k % 链表的长度\n\n//   获取倒数第k + 1,倒数第K个节点与链表尾节点\n//   倒数第k + 1个节点.next = null\n//   链表尾节点.next = head\n//   return 倒数第k个节点\nclass Solution {\n    public:\n        ListNode* rotateRight(ListNode* head, int k) {\n        if (head == nullptr\n            || head->next == nullptr\n            || k == 0)\n            return head;\n\n        int len = 1;\n        ListNode* cur = head;\n        while (cur->next != nullptr) {\n            cur = cur->next;\n            len++;\n        }\n\n        k %= len;\n\n        ListNode* fast = head;\n        ListNode* slow = head;\n\n        while (fast->next != nullptr) {\n            // slow wait k times\n            if (k-- <= 0) {\n                slow = slow->next;\n            }\n            fast = fast->next;\n        }\n\n        fast->next = head;\n        ListNode* new_head = slow->next;\n        slow->next = nullptr;\n        return new_head;\n    }\n}\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jsaki":[{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/2#issuecomment-1818159707","body":"```\nclass Solution:\n    def addToArrayForm(self, A: List[int], K: int) -> List[int]:\n        carry = 0\n        for i in range(len(A) - 1, -1, -1):\n            A[i], carry = (carry + A[i] + K % 10) % 10, (carry + A[i] + K % 10) // 10\n            K //= 10\n        B = []\n        # 如果全部加完还有进位，需要特殊处理。 比如 A = [2], K = 998\n        carry = carry + K\n        while carry:\n            B = [(carry) % 10] + B\n            carry //= 10\n        return B + A\n```","onTime":false},null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818162326","body":"```\nclass MyQueue:\n\n    def __init__(self):\n        self.stack=[]\n        self.ex=0\n\n    def push(self, x: int) -> None:\n        self.stack.append(x)\n        self.ex+=1\n        return self.stack\n\n    def pop(self) -> int:\n        self.ex+=1\n        return self.stack.pop(0)\n\n    def peek(self) -> int:\n        self.ex+=1\n        return self.stack[0]\n\n    def empty(self) -> bool:\n        if self.ex==0:\n            return True\n        if not self.stack:\n            return True\n        return False\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"witerth":[null,null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1818400119","body":"### **【Day 5】232. 用栈实现队列**\n\n[232. 用栈实现队列](https://leetcode.cn/problems/implement-queue-using-stacks/description/)\n\n#### **思路**\n\n原本思路每次push都要把输出栈压会输入栈，看官方思路后已改进\n\n#### **代码**\n\n```javascript\nvar MyQueue = function() {\n\n​    this.s = [];\n\n​    this.s1 = [];\n\n\n};\n\n\n/** \n\n * @param {number} x\n\n * @return {void}\n\n */\n\nMyQueue.prototype.push = function(x) {\n\n​    this.s.push(x);\n\n​    return this.s;\n\n};\n\n\n/**\n\n * @return {number}\n\n */\n\nMyQueue.prototype.pop = function() {\n\n​    if (!this.s1.length) {\n\n​        while (this.s.length) {\n\n​            this.s1.push(this.s.pop());\n\n​        }\n\n​    }\n\n​    return this.s1.pop();\n\n};\n\n\n/**\n\n * @return {number}\n\n */\n\nMyQueue.prototype.peek = function() {\n\n​    if (!this.s1.length) {\n\n​        while (this.s.length) {\n\n​            this.s1.push(this.s.pop());\n\n​        }\n\n​    }\n\n​    return this.s1[this.s1.length -1];\n\n};\n\n\n/**\n\n * @return {boolean}\n\n */\n\nMyQueue.prototype.empty = function() {\n\n​    return !this.s.length && !this.s1.length;\n\n};\n\n\n/**\n\n * Your MyQueue object will be instantiated and called as such:\n\n * var obj = new MyQueue()\n\n * obj.push(x)\n\n * var param_2 = obj.pop()\n\n * var param_3 = obj.peek()\n\n * var param_4 = obj.empty()\n\n */\n```\n\n\n\n#### **复杂度分析**\n\n\\- 时间复杂度：push和empty复杂的为O(1)  pop和peek复杂度为O(N)\n\\- 空间复杂度：O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1820921082","body":"**【Day 6】768. 最多能完成排序的块 II**\r\n\r\n[**[768. 最多能完成排序的块 II](https://github.com/leetcode-pp/91alg-12-daily-check/issues/**%E3%80%90Day%206%E3%80%91768.%20%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97%20II**)**](**【Day 6】768. 最多能完成排序的块 II**)\r\n\r\n#### 思路\r\n\r\n每个块中的最大值也是按升序排列的，只需要当前数字和前面块的最大值比较即可，如果当前数最大，则加入前面的块作为最大值，否则一直和前面的最大值比较，直到找到比前面最大值小，中间原本算好的块就合并成一个块\r\n\r\n#### 代码\r\n\r\nvar maxChunksToSorted = function(arr) {\r\n\r\n  var stack = [];\r\n\r\n  arr.forEach((i, index) => {\r\n\r\n   if (index === 0) {\r\n\r\n​    stack.push(i);\r\n\r\n   } else {\r\n\r\n​    if (i < stack[stack.length - 1]) {\r\n\r\n​     var max = stack.pop();\r\n\r\n​     while (stack.length) {\r\n\r\n​      if (stack.length && i < stack[stack.length - 1]) {\r\n\r\n​       stack.pop();\r\n\r\n​      } else {\r\n\r\n​       break;\r\n\r\n​      }\r\n\r\n​     }\r\n\r\n​     stack.push(max);\r\n\r\n​    } else {\r\n\r\n​     stack.push(i);\r\n\r\n​    }\r\n\r\n​    }\r\n\r\n  })\r\n\r\n  return stack.length;\r\n\r\n};","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1822170193","body":"### **【Day 7】61. 旋转链表**\n\n[61. 旋转链表](https://leetcode.cn/problems/rotate-list/description/)\n\n#### **思路**\n\n第一次遍历时，计算链表长度l，算出新的k（k可能比l大，newK = k % l），并且首尾连接。第二次遍历找到新链表的最后一个节点（旧链表的第 l - newK 个节点），将闭合链表断开。\n\n如果k为l的倍数，则新旧链表相同，直接返回旧链表\n\n#### 代码\n\nvar rotateRight = function(head, k) {\n\n  if (k === 0 || !head || !head.next) return head;\n\n  var l = 1;\n\n  var cur = head;\n\n  while (cur.next) {\n\n​    cur = cur.next;\n\n​    l++;\n\n  }\n\n  var n = l - k % l;\n\n  if (n === l) {\n\n​    return head;\n\n  }\n\n  cur.next = head;\n\n  while (n) {\n\n​    cur = cur.next;\n\n​    n--;\n\n  }\n\n  var newHead = cur.next;\n\n  cur.next = null;\n\n  return newHead;\n\n};\n\n#### **复杂度分析**\n\n\\- 时间复杂度：O(N)\n\\- 空间复杂度：O(1)\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ludwig-ll":[null,null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/6#issuecomment-1819205214","body":"**思路**\n\n看到用两个栈来实现队列，就像是用两个#*%#&% 实现#%%&，不懂这个要求的概念。\n先查资料：\n    栈：类似存放的空间，但是像是排队进胡同，要退出来肯定要从最后一个开始退出，然后倒数第二个才能继续。\n    队列：这个比较像火车过山，最先进的车头也一定会最先出山洞。\n（这先进先出、后进先出的概念有点类似会计的存货过程计算）\n\n有了基本的认知之后，就回来再次解读题目：要用两个后进先出的空间，来完成一个先进先出的概念（或是做法）\n这样理解并不合理，因为两个先进后出的栈，他们最先进的只能是最后出，那要怎么达到先进的能先出呢？\n想了一下，如果有两个冰棒袋子，这时候我不管拆开的冰棒袋子露出的是冰棒或木板，我都可以用手拿木板。\n概念就是如果是冰棒，那倒入到另一个冰棒袋中，这样露出的末尾就会是木板。\n（应该是这样）\n看了一下力扣里面大家的说法也像是这样子，接下来就是操作。\n\n**代码**\n功力还不足以进行这个情况的操作，偷看了大佬的设定：\n(目前还不会Markdown 上色，自己看了有点痛苦）\n\nclass MyQueue(object):\n\n    def __init__(self):\n        self.stack1 = []\n        self.stack2 = []\n\n    def push(self, x):\n        self.stack1.append(x)\n\n    def pop(self):\n        if not self.stack2:\n            while self.stack1:\n                self.stack2.append(self.stack1.pop())\n        return self.stack2.pop()\n\n    def peek(self):\n        if not self.stack2:\n            while self.stack1:\n                self.stack2.append(self.stack1.pop())\n        return self.stack2[-1]\n\n    def empty(self):\n        return not self.stack1 and not self.stack2\n\n**时间复杂度**\n还在学习如何对设定进行计算。\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luster-lyl":[null,null,null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1821156711","body":"```\r\n/**\r\n * @param {number[]} arr\r\n * @return {number}\r\n */\r\nvar maxChunksToSorted = function (arr) {\r\n    // 单调栈, 从右向左比较\r\n    const stack = []\r\n    for (const num of arr) {\r\n        const max = stack[stack.length - 1];\r\n        if (stack.length === 0 || num >= max) {\r\n            // 新增的数据大于等于原数字的最大值，就可以单独形成一个块\r\n            stack.push(num)\r\n        } else {\r\n            if (stack.length && max > num) {\r\n                // 新增的数字小于已有的最大值，就不能单独形成块\r\n            } else {\r\n                stack.push(max)\r\n            }\r\n        }\r\n    }\r\n    return stack.length\r\n};\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"smallppgirl":[null,null,null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/7#issuecomment-1821204358","body":"解题思路：元素评率\r\n\r\n```\r\nclass Solution:\r\n    def maxChunksToSorted(self, arr: List[int]) -> int:\r\n        c = Counter()\r\n        blk = 0\r\n        for a, b in zip(arr, sorted(arr)):\r\n            c[a] += 1\r\n            if c[a] == 0:\r\n                del c[a]\r\n            c[b] -= 1\r\n            if c[b] == 0:\r\n                del c[b]\r\n\r\n            if len(c) == 0:\r\n                blk += 1\r\n        return blk\r\n```\r\n\r\ntime: nlog(n)\r\nspace: O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"realduxy":[null,null,null,null,null,null,{"url":"https://github.com/leetcode-pp/91alg-12-daily-check/issues/8#issuecomment-1821429570","body":"# 题目名称\n旋转链表\n## 题目链接\n[题目链接](https://leetcode.cn/problems/rotate-list/)\n\n## 题目思路\n拆解链表，重新拼接，重点在于找到断点以及拼接操作\n\n## 题目代码\n```python\n# 这里写下解决问题的Python代码\nclass Solution:\n    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        if not head or not head.next or k == 0: return head\n        \n        # 特殊情况直接得到答案\n        total_length = 1\n        node = head\n        while node.next:\n            # print(node.next.val)\n            node = node.next\n            total_length += 1\n        print(\"final total length: \", total_length)\n\n        if k == total_length:\n            return head\n        if k > total_length:\n            k = k % total_length\n        print(\"final k: \", k)\n\n        if k == 0:\n            return head\n\n        # 本质上是找到断点，然后将断电后的链表移位\n        peak_node = head\n        for _ in range(total_length-k-1):\n            peak_node = peak_node.next\n        print(peak_node.val)\n\n        post_peak_node = peak_node.next\n        new_head = post_peak_node\n        print(k)\n        for _ in range(k-1):\n            post_peak_node = post_peak_node.next\n            print(post_peak_node.val)\n\n        post_peak_node.next = head\n        peak_node.next=None\n\n        return new_head\n\n## 复杂度\n时间: O(n)\n空间:O(1)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}