{"372354984":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"965682575":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"1052561252":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991881171","body":"```\n/**\n * 解题思路：先把题做出来，再考虑优化\n * <p>\n * 1.直观的看，应该属于大整数相加的问题\n * 2.对num从后向前遍历，每次遍历中对k%10获得对应位数的值t，再对k/10\n * 3.使得num[i]+t；考虑两种情况，<=9和>=10；如何是第一种情况，直接相加就行；如何是第二种情况，要考虑进位\n * <p>\n * 时间复杂度：O(n)\n *\n * @author My\n * @date 2021/12/12\n */\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> temp = new ArrayList<>();\n\n        //用于进位\n        int carry = 0;\n        for (int i = num.length - 1; i >= 0; i--) {\n            int t = k % 10 + num[i] + carry;\n            if (t > 9) {\n                carry = 1;\n            } else {\n                carry = 0;\n            }\n            temp.add(t % 10);\n            k /= 10;\n        }\n\n        while (k != 0) {\n            int t = k % 10 + carry;\n            if (t > 9) {\n                carry = 1;\n            } else {\n                carry = 0;\n            }\n            temp.add(t % 10);\n            k /= 10;\n        }\n\n        if (carry != 0)\n            temp.add(carry);\n\n        List<Integer> res = new ArrayList<>();\n        for (int i = temp.size() - 1; i >= 0; i--) {\n            res.add(temp.get(i));\n        }\n\n        return res;\n    }\n}\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"1149004121":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991841813","body":"### 989. 数组形式的整数加法\n### 思路\n①将数组A转成整数，再将整数A和K进行运算，再将运算结果化为数组  \n\n- 优点：不用考虑数组运算的进位问题  \n- 存在问题： 时间复杂度必然增大，因为过程包含整成整数和拆成数组2部分；最大问题是数组A长度最大为1万，超出js的16位整数长度，会导致不精确问题  \n\n②利用数组进行运算  \n通过取余和整除的方法，把k的最低位取出与数组的最低位进行和运算；在进行加和的时候因为有可能超出9，要考虑进位，可考虑把进的那一位直接加在k上；由于k和数组的相对长度不知道，所以在第一次循坏完数组之后，要再循环一次k的剩余位数。\n\n### 代码\n\n\n```java  \n\n  var addToArrayForm = function (num, k) {\n    const numLen = num.length;\n    let res = [];\n    for (let i = numLen - 1; i >= 0; i--) {\n      let sum = num[i] + k % 10;\n      k = Math.floor(k / 10);\n      if (sum > 9) {\n        k++;\n        sum -= 10;\n      }\n      res.push(sum);\n    }\n    for (; k > 0; k = Math.floor(k / 10)) {\n      let sum = k % 10;\n      res.push(sum);\n    }\n    res.reverse();\n    return res;\n  };\n\n```\n\n**复杂度分析**  \n\n- 时间复杂度：O(MAX(m,n))，其中m为数组长度，n为k的位数。\n- 空间复杂度：O(MAX(m,n))，其中m为数组长度，n为k的位数。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"1916603886":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991911495","body":"\n### 思路：\n将其中一个变为数组，之前两个都变数组，纠结怎么获取索引，现在另一个每次自处自动补零。\n### 代码：\n\nvar addToArrayForm = function(num, k) {\n       let s = [];\n        let flag = false;\n        let nl = num.length;\n        while(nl != 0 || k != 0) {\n            let a = 0, b = k % 10 ;\n            if(nl !== 0) a = num[--nl];\n            k = parseInt(k/10);\n            \n            let ans = a + b;\n            \n            if(flag) {\n                ans += 1;\n                flag = false;\n            }\n            if( ans >= 10) flag = true;\n            s.push(ans % 10);\n        }\n        if(flag) s.push(1);\n        return s.reverse();\n};\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ruohai0925":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lilyzhaoyilu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mm12344":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangzehan123":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991766191","body":"\n\n```java\n\nclass Solution {\npublic List<Integer> addToArrayForm(int[] num, int k) {\n    int len = num.length;\n    int count = 0;\n    int flag = 0;\n    List<Integer> ans = new ArrayList<>();\n    while (k > 0) {\n        int tmpNum = len - count - 1 < 0 ? 0: num[len - count - 1];\n        int sum = k % 10 + tmpNum + flag;\n        flag = sum / 10;\n        k /= 10;\n        count++;\n        ans.add(flag == 1 ? sum % 10 : sum);\n    }\n    for(int i = len - count - 1; i > -1; i--) {\n        int sum = num[i] + flag;\n        flag = sum / 10;\n        ans.add(flag == 1 ? sum % 10 : sum);\n    }\n    if (flag == 1) {\n        ans.add(1);\n    }\n    Collections.reverse(ans);\n    return ans;\n}\n}\n\n```\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"erik7777777":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yachtcoder":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chang-you":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mmboxmm":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangwiitao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"leungogogo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ai2095":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yanglr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cicihou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shixinlovey1314":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pangjiadai":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991847081","body":"## Python3\n```Python3\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        number = 0\n        for n in num:\n            number = number * 10 + n\n        total_num = number + k\n        num_list = []\n        while total_num >= 10:\n            temp = total_num % 10\n            total_num = total_num // 10\n            num_list.append(temp)\n        num_list.append(total_num)\n        return num_list[::-1]\n```\n\n## 思路\n1. 可以用暴力解法\n2. 也可以每个位单独计算（注意进位）\n- time complexity: O(n)\n- space complexity: O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luojiamun":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991904972","body":"### 思路\r\n\r\n- 思路与解法\r\n```\r\n- 逐位加；\r\n- 反向存，最后reverse，不然正向存，每次add数组都得挪位；\r\n```\r\n\r\n- 心得\r\n```\r\n- 第一次fail了因为大意了，这题要注意num和k的长短不一，不能一个for on num解决；\r\n```\r\n\r\n### 代码\r\n```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        int carry = 0, i = num.length - 1;\r\n        List<Integer> res = new ArrayList<>();\r\n        \r\n        while(i >= 0 || k > 0 || carry > 0){\r\n            int left = i >= 0?num[i]:0;\r\n            i--;\r\n            int right = k % 10;\r\n            k = k / 10;\r\n            int sum = left + right + carry;\r\n            res.add(sum % 10);\r\n            carry = sum / 10;\r\n        }\r\n\r\n        Collections.reverse(res);\r\n        return res;\r\n    }\r\n}\r\n```\r\n\r\n### 复杂度\r\n\r\n***k因为是常数，其实其长度可以忽略。***\r\n\r\ntime: O(Math.max(num.length, Math.log10(k)+1))\r\nspace: O(1)，不算结果","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yiwchen":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991921921","body":"思路：\r\n直接模拟\r\n代码：\r\nJava：\r\n```\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        /* Set up */\r\n        int n = num.length;\r\n        int cur = k;\r\n        List<Integer> res = new ArrayList();\r\n        \r\n        /* run the addition backwards digit by digit*/\r\n        int i = n;\r\n        while (--i >= 0|| cur > 0){\r\n        /* Adding a new digit*/\r\n            if (i >= 0){\r\n                cur += num[i];\r\n            }\r\n        /* Carry addition simulator*/\r\n            res.add(cur % 10);\r\n            cur = cur / 10;;\r\n        }\r\n        /* return the result reversely since we adding up reversely*/\r\n        Collections.reverse(res);\r\n        return res;\r\n    }\r\n}\r\n```\r\n\r\nScala:\r\n```\r\nobject Solution {\r\n    def addToArrayForm(num: Array[Int], K: Int): List[Int] = {\r\n        // Set up\r\n        var res = List[Int]()\r\n        var k = K\r\n        \r\n        // Reverse the num list, and initialize the carry\r\n        // Scala variable definition 101\r\n        // carry is repeatedly folding out and most addition is taken care here\r\n        val carry = num.reverse.foldLeft(0)((sum, x)=>{\r\n          val temp = k % 10 + x + sum\r\n          k = k / 10\r\n          res :::= List(temp % 10)\r\n          temp / 10}\r\n        )\r\n        // edge case when there is k or carry left\r\n        if(k == 0){\r\n          if (carry == 1) res :::= List(1)\r\n          res\r\n        }\r\n        else{\r\n          k = k + carry\r\n          while(k > 0){\r\n            res :::= List(k % 10)\r\n            k  = k / 10\r\n          }\r\n          res\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n复杂度：\r\nTC: O(n + k)\r\nSC: O(n + k)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qixuan-code":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ZT4188":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"thinkfurther":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pophy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ninghuang456":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991829936","body":"```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] nums, int k) {\r\n        LinkedList<Integer> res = new LinkedList<>(); // LinkedList addFirst()\r\n        for (int i = nums.length - 1; i >= 0; i --) {\r\n            res.addFirst((nums[i] + k) % 10);\r\n            k = (nums[i] + k) / 10;\r\n        }\r\n        while (k > 0) {\r\n            res.addFirst(k % 10);\r\n            k /= 10;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//Time O(n), Space O(n)\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zol013":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qyw-wqy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"skinnyh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"leo173701":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kidexp":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"falconruo":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991748173","body":"** 思路：**\r\n1. 从后向前依次取一位数字与k相加，余数等于和模10，并存入返回数组，令k除10，继续遍历\r\n2. 遍历结束，判断k是否为0， 不为0则循环继续将余数存入数组res, k除10，继续，直至k=0\r\n3. 反转数组res并返回\r\n\r\n** 复杂度分析: **\r\n- 时间复杂度:  O(max(n, m))， 其中n为数组num的长度，m为数字k的位数\r\n- 空间复杂度:  O (1)\r\n-\r\n** 代码(C++): **\r\n```C++\r\nclass Solution {\r\npublic:\r\n    vector<int> addToArrayForm(vector<int>& num, int k) {\r\n        int n = num.size() - 1;\r\n        vector<int> res;\r\n\r\n        while (n >= 0) {\r\n            k += num[n];\r\n            res.push_back(k % 10);\r\n            k /= 10;\r\n            n--;\r\n        }\r\n\r\n        // for the condition that k not 0\r\n        while (k) {\r\n            res.push_back(k % 10);\r\n            k /= 10;\r\n        }\r\n        reverse(res.begin(), res.end());\r\n\r\n        return res;\r\n    }\r\n};\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"florenzliu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"q815101630":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991823659","body":"Ripple Adder\r\nSimilar to the implementation of ripple adder, The adder will add numbers at the same position, output the sum of the current position, and pass the carry to the next bit.\r\n\r\nPython\r\nclass Solution:\r\n    def addToArrayForm(self, A: List[int], k: int) -> List[int]:\r\n        curSum = 0\r\n        carry = 0\r\n\r\n        # This can be achieved through continuing division, but I am lazy\r\n        if not A:\r\n            return [int(i) for i in str(k)]\r\n        elif not k:\r\n            return A\r\n\r\n        K = [int(i) for i in str(k)]\r\n        LA = len(A)-1\r\n        LK = len(K)-1\r\n\r\n        if LA <= LK:\r\n            target = K\r\n            idx = LK\r\n        else:\r\n            target = A\r\n            idx = LA\r\n        while LA >= 0 and LK >= 0:\r\n            curSum = A[LA] + K[LK] + carry\r\n            if curSum < 10:\r\n                target[idx] = curSum\r\n                carry = 0\r\n            else:\r\n                carry = curSum //10\r\n                target[idx] = curSum % 10\r\n            LA-=1\r\n            LK-=1\r\n            idx-=1\r\n        if LK != LA:\r\n            while idx >=0:\r\n                curSum = target[idx] + carry\r\n                if curSum < 10:\r\n                    target[idx] = curSum\r\n                    carry = 0\r\n                else:\r\n                    carry = curSum // 10\r\n                    target[idx] = curSum%10\r\n                idx-=1\r\n        if carry > 0:\r\n            target[0:0] = [carry]\r\n        return target\r\nTime Complexity: O(max(K,A))\r\nSpace Complexity: O(max(K,A))","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chen445":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991850462","body":"### 代码\n``` Python3\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        k=[int(x) for x in str(k)]\n        i=len(num)-1\n        j=len(k)-1\n        carry=0\n        result=deque([])\n        while i>=0 or j>=0:\n            a=num[i] if i >=0 else 0 \n            b=k[j] if j>=0 else 0\n            s=a+b+carry\n            carry=s//10\n            result.appendleft(s%10)\n            i-=1\n            j-=1\n        if carry != 0:\n            result.appendleft(carry)\n        return result\n```\n### 复杂度\n\nTime: O(n)\nSpace: O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"JachinM":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangyalei1026":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangzz2015":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991759056","body":"## 思路\r\n- 倒序遍历num ，把 k 转化为每一位，做加法注意carry flag。时间复杂度 O(n)，空间复杂度为O(1)。\r\n\r\n## 代码\r\n\r\n- 语言支持：C++\r\n\r\nC++ Code:\r\n\r\n```c++\r\n\r\nclass Solution {\r\npublic:\r\n    vector<int> addToArrayForm(vector<int>& num, int k) { \r\n        \r\n        int i=num.size()-1; \r\n        int carry =0; \r\n        vector<int> ret; \r\n        while(k||carry||i<num.size())\r\n        {\r\n            int value ;\r\n            if(i>=0)\r\n            {\r\n              value = k%10 + num[i] + carry; \r\n            }\r\n            else\r\n            {\r\n                value = k%10 + carry; \r\n            }\r\n            \r\n            carry = value/10; \r\n            ret.push_back(value%10); \r\n            \r\n            k = k/10; \r\n            i--; \r\n        }\r\n        \r\n        reverse(ret.begin(), ret.end()); \r\n        \r\n        return ret; \r\n        \r\n    }\r\n};\r\n\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tongxw":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991829384","body":"## 思路\r\n遍历合并，类似合并有序数组/链表。\r\n## 代码\r\n```js\r\nvar addToArrayForm = function(num, k) {\r\n    ans = [];\r\n    i = num.length - 1;\r\n    carry = 0;\r\n    while (i >= 0 || k != 0) {\r\n        val1 = i >= 0 ? num[i] : 0;\r\n        val2 = k != 0 ? k % 10 : 0;\r\n        \r\n        sum = val1 + val2 + carry;\r\n        carry = Math.floor(sum / 10);\r\n        sum = sum % 10;\r\n        \r\n        ans.push(sum);\r\n        \r\n        i--;\r\n        k = Math.floor(k/10);\r\n    }\r\n    \r\n    if (carry != 0) {\r\n        ans.push(carry);\r\n    }\r\n\r\n    return ans.reverse();\r\n};\r\n```\r\nTC: O(max(N, logK))\r\nSC: O(max(N, logK))\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"okbug":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yan0327":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991699058","body":"思路：\r\n创建一个out数组用于存放结果。\r\npre代表进位，sum代表总和,k代表被加数\r\n数组从n-1到0开始遍历， 但是for的判断条件有i>=0||k>0||pre>0\r\n如果i>=0，则 sum= num[i]+k%10+pre\r\n否则 sum= k%10+pre\r\n最后处理：pre = sum/10; k /= 10 添加到out数组\r\n最后翻转数组即可\r\n```Go\r\nfunc addToArrayForm(num []int, k int) []int {\r\n    n := len(num)\r\n    pre,sum:=0,0\r\n    out := []int{}\r\n    for i:=n-1;i>=0||k>0||pre>0;i--{\r\n        if i >= 0{\r\n            sum = num[i]+k%10+pre\r\n        }else{\r\n            sum =k%10 + pre\r\n        }\r\n        pre = sum/10\r\n        k /= 10\r\n        out = append(out,sum%10)\r\n    }\r\n    reverse(out)\r\n    return out\r\n}\r\nfunc reverse(out []int) []int{\r\n    for i:=0;i<len(out)/2;i++{\r\n        out[i],out[len(out)-1-i] = out[len(out)-1-i] , out[i]\r\n    }\r\n    return out\r\n}\r\n```\r\n时间复杂度O（n）\r\n空间复杂度O（n）","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/2#issuecomment-991925070","body":"思路：\r\n字符的最短距离，可以从前往后遍历，以及从后往前遍历求最小值。\r\n初始化一个out数组\r\n令flag = -1 ，flag表示前一个字符c出现的位置。\r\n从前往后遍历：（1）判断是否该字符为c （2）若c存在【flag >= 0】则此时out[i] = i-flag 否则 out[i] = math.MaxInt32\r\n从后往前遍历：（1）判断是否该字符为c （2）若c存在【flag >= 0】则此时out[i] = min（out[i]，flag-i）\r\n第二次遍历记得比较大小，为了得到最优解。求个最小值。\r\n最后题目出问题的地方是：flag >= 0 考虑 字符c在第一个的情况！\r\n```Go\r\nfunc shortestToChar(s string, c byte) []int {\r\n    out := make([]int,len(s))\r\n    flag := -1\r\n    for i :=0;i<len(s);i++{\r\n        if s[i] == c{\r\n            flag = i\r\n        }\r\n        if flag >= 0{\r\n            out[i] = i-flag\r\n        }else{\r\n            out[i] = math.MaxInt32\r\n        }\r\n    }\r\n    flag = -1\r\n    for i := len(s)-1;i>=0;i--{\r\n        if s[i] == c{\r\n            flag = i\r\n        }\r\n        if flag >= 0{\r\n            out[i] = min(out[i],flag-i)\r\n        }\r\n    }\r\n    return out\r\n}\r\nfunc min(a,b int)int{\r\n    if a < b{\r\n        return a\r\n    }\r\n        return b\r\n}\r\n```\r\n时间复杂度O（N）\r\n空间复杂度O（N）","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chenming-cao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mozro0327":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xingzhan0312":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"laurallalala":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yingliufilms":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jin03041209":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"agentzzz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"suukii":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bingyingchu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"newbeenoob":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"samaritan1998":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ginnydyy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"GemZq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"littlemoon-zh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xbhog":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"st2yang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiezhengyun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kofzhang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ymkymk":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"15691894985":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"feikerwu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xj-yan":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991819951","body":"```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        num2 = list()\n        while k:\n            tmp = k % 10\n            num2.append(tmp)\n            k //= 10\n        num2.reverse()\n        i, j = len(num) - 1, len(num2) - 1\n        isCarried = False\n        res = list()\n        while i >= 0 or j >= 0 or isCarried:\n            digit = (num[i] if i >= 0 else 0) +  (num2[j] if j >= 0 else 0) + (1 if isCarried else 0)\n            isCarried = True if digit >= 10 else False\n            res.append(digit % 10)\n            i -= 1\n            j -= 1\n        res.reverse()\n        return res\n```\nTime Complexity: O(n), Space Complexity: O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ychen8777":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lilixikun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"peteruixi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"user1689":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xieyj17":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shamworld":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991877147","body":"```js\nvar addToArrayForm = function(num, k) {\n    const res = [];\n    const n = num.length;\n    for (let i = n - 1; i >= 0; --i) {\n        let sum = num[i] + k % 10;\n        k = Math.floor(k / 10);\n        if (sum >= 10) {\n            k++;\n            sum -= 10;\n        }\n        res.push(sum);\n    }\n    for (; k > 0; k = Math.floor(k / 10)) {\n        res.push(k % 10);\n    }\n    res.reverse();\n    return res;\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"learning-go123":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"a244629128":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhousibao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ysy0707":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sunupdong":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"machuangmr":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991903092","body":"### 代码\r\n```java\r\nclass Solution {\r\n    // 思路： 1、将数组的最后一个元素和k的个位开始相加，\r\n    //       2、大于10 就向前进一位（k的前一位 + 1）\r\n     //        3、 重复以上步骤直到数组和k的位数结束\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n     List<Integer> rest = new LinkedList<>();\r\n    int len = num.length - 1;\r\n    for(int i = len;i >= 0;i--) {\r\n        int total = num[i] + k % 10;\r\n        //取 除过后一位的前面的值\r\n        k /= 10;\r\n        if(total >= 10) {\r\n            //大于10，则前面的值需要进1\r\n            k++;\r\n            total = total % 10;\r\n        }\r\n        rest.add(total);\r\n    }\r\n    while(k > 0) {\r\n        rest.add(k % 10);\r\n        k /=10;\r\n    }\r\n     Collections.reverse(rest);\r\n     return rest;\r\n    }\r\n}\r\n````\r\n### 复杂度\r\n- 时间复杂度O(N)\r\n- 空间复杂度O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wang-hejie":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"iambigchen":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991853617","body":"### 思路\n逐位相加，如果大于9，就要进位\n\n### 代码\n```js\nvar addToArrayForm = function(num, k) {\n    k = String(k).split('')\n    var length = Math.max(num.length, k.length)\n    var res = new Array(length).fill(0)\n    for (let index = length-1; index >= 0; index--) {\n        var a = num.length > 0 ? num.pop() : 0\n        var b  = k.length > 0 ?  k.pop() : 0\n        var sum = res[index] + a + +b\n        res[index] = sum % 10\n        if (sum > 9) {\n            if (index-1 >= 0) {\n                res[index - 1] = 1\n            } else {\n                res.unshift(1)\n            }\n        }\n    }\n    return res\n};\n```\n\n### 复杂度\n\n时间复杂度：O(n)\n空间复杂度：O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ningli12":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zjsuper":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"siyuelee":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"miss1":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"doveshnnqkl":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"taojin1992":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991834328","body":"# Understand:\r\n```\r\n1. num array won't be empty, no leading 0's, each digit is valid [0,9]\r\n2. k is non-negative, 1 <= k <= 10^4\r\n3. output most significant -> least significant\r\n4. k can have more digits\r\n\r\ncarry,\r\n99 + 1 -> 100\r\n98 + 1 -> 99\r\n789 + 12 -> 801\r\n1 + 99 -> 100\r\n```\r\n# Plan:\r\n```\r\ngo backward from the least significant digit, record carry and current sum digit, update k\r\n\r\ncheck k > 0\r\n\r\ncheck if carry == 1\r\n\r\nuse a linkedlist and insert into the head\r\n```\r\n# Evaluate:\r\n```\r\nTime: O(number of digits inside num + number of digits inside k) \r\n= O(nums.length + number of digits inside k) = O(max(nums.length, logk))\r\n\r\nSpace: O(max(nums.length, number of digits inside k) = O(max(nums.length, logk))\r\n\r\n```\r\n\r\n# Code:\r\n```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        LinkedList<Integer> sum = new LinkedList<>();\r\n        int carry = 0, newDigit = 0;\r\n        for (int pos = num.length - 1; pos >= 0; pos--) {\r\n            newDigit = num[pos] + k % 10 + carry;\r\n            carry = newDigit / 10;\r\n            newDigit %= 10;\r\n            sum.addFirst(newDigit);\r\n            k /= 10;\r\n        }\r\n        while (k > 0) {\r\n            newDigit = k % 10 + carry;\r\n            carry = newDigit / 10;\r\n            newDigit %= 10;\r\n            sum.addFirst(newDigit);\r\n            k /= 10;\r\n        }\r\n        \r\n        if (carry == 1) {\r\n            sum.addFirst(1);\r\n        }\r\n        return sum;\r\n    }\r\n}\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"septasset":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kennyxcao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"james20141606":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"muimi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"crystallili":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"benngfour":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ergwang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mixtureve":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"freedom0123":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"leolisgit":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhuliangyu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chun1hao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"m-z-w":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jinmenghan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lxy030988":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"HarryPangPang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"iamtheUsername":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hwpanda":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Nina1031":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fengchen321":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"maqianxiong":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hewenyi666":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"flame0409":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dongzegithub":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xy147":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ccslience":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiaowenhe":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991843707","body":"```C++\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        int n = num.size() - 1;\n        int cur = k;\n        vector<int> result;\n        while(n >= 0 || cur)\n        {\n            if(n>=0)\n            {\n                cur = cur + num[n];\n            }\n            result.push_back(cur%10);\n            cur = cur / 10;\n            n--;\n        }\n        reverse(result.begin(), result.end());\n        return result;\n\n    }\n};\n```\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mglslg":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"max-qaq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tobepellucid":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sxr000511":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"july-aha":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xyinghe":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joriscai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cy-sues":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991867656","body":"## code\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List <Integer> arr = new ArrayList <Integer>();\n        for(int i=num.length-1;i>=0;i--){\n            int p=k%10;\n            k=k/10;\n            int sum = num[i]+p;\n            if(sum>=10){\n                k+=1;\n                sum-=10;\n            }\n            arr.add(sum);\n        }\n        for(;k>0;k=k/10){\n            int s= k%10;\n            arr.add(s);\n        }\n        Collections.reverse(arr);\n        return arr;\n    }\n}\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shenzhengkang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ryzhao5":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mosihan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"babbomax98":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Brandylulu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ivalkshfoeif":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yibenxiao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ray-hr":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991898710","body":"# 思路 \n 1.列竖式法 \n\n2.低位到高位相加 \n \n3.考虑进位位  \n\n4.取反\n# 代码 \n```python  \n \nclass Solution(object):\n    def addToArrayForm(self, num, k):\n        \"\"\"\n        :type num: List[int]\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n        p1 = len(num) - 1\n        carry = 0\n        res = []\n        while p1 >= 0 or k != 0 or carry > 0:\n            adder1 = num[p1] if p1 >= 0 else 0\n            adder2 = k % 10\n            sum = adder1 + adder2 + carry\n            carry = 1 if sum >= 10 else 0\n            sum = sum - 10 if sum >= 10 else sum\n            res.append(sum)\n            p1 -= 1\n            k //= 10\n        return res[::-1]\n\n```\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nekomoon404":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chen-ds":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"minuet-red":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mokrs":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"niyaolanggeyo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bowlofnoodles":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jerry9926":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kendj-staff":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"asterqian":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jmstart":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lizzy-123":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"edge-wzw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"20donkey":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lzcyx":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"naomiwufzz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jaysonss":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"maxsarratt":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bxcharlie":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zszs97":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yj9676":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"carreylife":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fzzfgbw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jsyxiaoba":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"carterrr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ff1234-debug":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzhsaga":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"heyqz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Clarence5":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aatoe":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangyifan2018":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"eemsyw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"linearindep":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"iciue":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jiayinya":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chaggle":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sqshada":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"daidaidashixiong666":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xingkong1994":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"itsjacob":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alwaysbest":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pzl233":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guangshisong":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"baoqin87":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"MusicOfWind":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"codingcai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yuetong3yu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kbfx1234":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991893740","body":"#### [989. 数组形式的整数加法](https://leetcode-cn.com/problems/add-to-array-form-of-integer/)\n\n```python\n// 91-day1-python\n\nclass Solution(object):\n    def addToArrayForm(self, num, k):\n        \"\"\"\n        :type num: List[int]\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n        i = len(num) - 1\n        carry = 0\n        res = []\n        while i >= 0 or k != 0:\n            x = num[i] if i >= 0 else 0\n            y = k % 10 if k != 0 else 0\n\n            sum = x + y + carry\n            res.append(sum % 10)\n            carry = sum // 10\n\n            i -= 1\n            k //= 10\n        if carry != 0: res.append(carry)\n        return res[::-1]\n```\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"crypteee":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzcyes":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yliboom":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chenbihao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xuanaxuan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"brainlds":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"flagyk5":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liuajingliu":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991891349","body":"#### 解题思路\n  1. 低位到高位逐位将数字加在一起\n  2. 若加法的结果大于等于 1010，把进位的 11 加入到下一位的计算中\n#### 代码实现\n\n```\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function(num, k) {\n    const res = [];\n    const n = num.length;\n    for (let i = n - 1; i >= 0; --i) {\n        let sum = num[i] + k % 10;\n        k = Math.floor(k / 10);\n        if (sum >= 10) {\n            k++;\n            sum -= 10;\n        }\n        res.push(sum);\n    }\n    for (; k > 0; k = Math.floor(k / 10)) {\n        res.push(k % 10);\n    }\n    res.reverse();\n    return res;\n};\n```\n#### 复杂度分析\n- 时间复杂度: O(max(n,logk), 其中 nn 为数组的长度\n- 空间复杂度: O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"moxiaopao278":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guangsizhongbin":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991821310","body":"```go\r\nfunc addToArrayForm(num []int, k int) (ans []int) {\r\n\r\n    // 考虑直接相加k\r\n    for i := len(num) - 1; i >= 0 || k > 0; i-- {\r\n        if i >= 0 {\r\n            k += num[i]\r\n        }\r\n        ans = append(ans, k % 10)\r\n        k /= 10\r\n    }\r\n    reverse(ans)\r\n    return\r\n}\r\n\r\n// 反序的时候，直接头与尾相交换\r\nfunc reverse(num []int){\r\n    for i, n := 0, len(num); i < n/2; i++ {\r\n        num[i], num[n-1-i] = num[n-1-i], num[i]\r\n    }\r\n}\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"winterdogdog":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yankang233":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gentleman-goodman":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991839137","body":"> ### 思路\n>\n> 本来是想着是把两个数加起来，再依次取出个位，添加进结果中，但是这样会溢出。\n>\n> 于是选择从后往前遍历数组，末尾数字相加后添加进结果集中，同时判断一下有没有进位。\n>\n> 最后还要看看 k 和进位等于 0 没有，如果没有还要继续添加进结果集中。\n>\n> 最后需要Collections.reverse(res);反转链表\n>\n> <加法模板>\n>\n> while ( A 没完 || B 没完)\n>\n> A 的当前位\n>\n> B 的当前位\n>\n> 和 = A 的当前位 + B 的当前位 + 进位carry\n>\n> 当前位 = 和 % 10;\n>\n> 进位 = 和 / 10;\n>\n> 判断还有进位吗\n\n```java\nclass Solution {\n        public List<Integer> addToArrayForm(int[] num, int k) {\n            List<Integer> res = new ArrayList<>();\n            int carry = 0;//进位\n            int l1 = num.length - 1;//最右边的索引开始\n            while (l1 >= 0 || k != 0) {\n                int x = l1 < 0 ? 0 : num[l1];//最左边，也就是前面没有数了，就附上0\n                int y = k == 0 ? 0 : k % 10;//取余->取出个位数   ////最左边，也就是前面没有数了，就附上0\n                int sum = x + y + carry;\n                carry = sum / 10;\n                res.add(sum % 10);\n                l1--;\n                k = k / 10;\n            }\n            //最左边的carr可能还有，判断是不是0\n            if (carry != 0) {\n                res.add(carry);\n            }\n            Collections.reverse(res);\n            return res;\n        }\n    }\n```\n\n> **复杂度分析**\n>\n> - 时间复杂度：O(N)\n> - 空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zulliu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"supermeohh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Baiqr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"for123s":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bolunzhang2021":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"simonsayshi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"devosend":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991914988","body":"## 思路\r\n从后往前遍历相加。\r\n## 代码\r\n```\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        for i in range(len(num) - 1, -1, -1):\r\n            k += num[i]\r\n            if k >= 10:\r\n                num[i] = k % 10\r\n                k = k // 10\r\n            else:\r\n                num[i] = k\r\n                return num\r\n\r\n        while k > 0:\r\n            num.insert(0, k % 10)\r\n            k = k // 10\r\n\r\n        return num\r\n```\r\n## 复杂度分析\r\n- 时间复杂度：O(N)\r\n- 空间复杂度：O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"comst007":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"asuka1h":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"biscuit279":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991830092","body":"# 思路：先求A+k的值，再转换成数组形式\n···\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        n = len(num)\n        A = 0\n        for i,a in enumerate(num):\n            A += a*(10**(n-i-1))\n        ans = A+k\n\n        res = [int(s) for s in str(ans)]\n        return res\n···\n时间复杂度：O(n)\n空间复杂度：O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"x-joey":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"biancaone":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hyxupup":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cassiechris":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sumukeio":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xvm03":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hengistchan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"youyiqin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"juleijs":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rebel-ly":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Winperrr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangcn111":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"freesan44":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991861722","body":"## 思路\r\n通过int转换实现\r\n## 关键点\r\n\r\n-  \r\n\r\n## 代码\r\n\r\n- 语言支持：Python3\r\n\r\nPython3 Code:\r\n\r\n```python\r\n\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        #字符串与int的转换\r\n        resStr = \"\"\r\n        for i in num:\r\n            resStr +=str(i)\r\n        res = str(int(resStr)+k)\r\n        reslist = []\r\n        for i in res:\r\n            reslist.append(int(i))\r\n        return reslist\r\n\r\nif __name__ == '__main__':\r\n    A = [1,2,0,0]\r\n    K = 34\r\n    ret = Solution().addToArrayForm(A, K)\r\n    print(ret)\r\n\r\n```\r\n\r\n\r\n**复杂度分析**\r\n\r\n令 n 为数组长度。\r\n\r\n- 时间复杂度：$O(n)$\r\n- 空间复杂度：$O(n)$","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"XiangyDeng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yanjyumoso":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"leige635539766":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"summer506hai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"saltychess":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lihuiwen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhy3213":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zywang0":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hibriansun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jz1433":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aduispace":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wenlong201807":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qibao1112":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ziyue08":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xuezhongyuan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"watchpoints":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wanghuaikuan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ShuchenWuu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luoanyang":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991921146","body":"### 思路\n先反转数组，然后循环相加\n\n### 代码\n```js\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function(num, k) {\n  let x1 = num.reverse();\n  let x2 = k.toString().split('').reverse();\n  let count = x1.length > x2.length?x1.length:x2.length;\n  let result = [];\n  let isAdd = false;\n  for(let i=0;i<count;i++){\n    let num1 = x1[i] || 0;\n    let num2 = x2[i] || 0;\n    let num = Number(num1) + Number(num2);\n    if(isAdd){\n      isAdd = false;\n      num+=1;\n    }\n\n    if(num>=10){\n      num -=10;\n      isAdd = true;\n    }\n    result.push(num)\n  }\n  if(isAdd){\n    result.push(1)\n  }\n  return result.reverse()\n};\n```\n\n### 复杂度\n时间复杂度 O(n),其中n为Max(num.length,k)\n空间复杂度 O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ymwang-2020":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chanceyliu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Craig-Cheng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weichuliao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"absent1353":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"banjingking":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"now915":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"akxuan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cdd111":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kuwan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhiyuanpeng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"whitewhatpin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liudi9047":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guohuijiedesu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzyhang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yourspeace":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"thisjustsoso":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ozhfo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yyangeee":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pan-qin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Crazy-xjm":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"grapefruit-hellomonday":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pandaCure":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jawn-ha":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"panda-qin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lihanchenyuhua":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"whgsh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kangxiaohan05":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ru8dgj0001":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"taoyr722":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"raoshuang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ninghuangaa":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"blanktime":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"iceburgs":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xlzy520":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"vaqua":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dahuang257":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shuichen17":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wsgouwan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kkwu314":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991891441","body":"# 思路 1\n\n\n\n<aside> 💡 新建一个List<Integer>，从num的最右边的元素开始加。将超出个位数的remainder继续加到被/10的k上。将计算过的sum加入到List里。最后将剩余k加入list里然后reverse List\n\n</aside>\n\n# 代码\n\n\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> ans = new ArrayList<Integer>();\n        int n = num.length;\n        for (int i=n-1; i>=0; i--){\n            int sum = num[i]+k%10;\n            k/=10;\n            if (sum>=10){\n                k+=sum/10;\n                sum%=10;\n            }\n            ans.add(sum);\n        }\n        for (;k>0;k/=10){\n            ans.add(k%10);\n        }\n        Collections.reverse(ans);\n        return ans;\n    }\n}\n```\n\n# 复杂度分析\n\n\n\n时间复杂度：O(N)\n\n空间复杂度：O(N)\n\n# 思路 2\n\n\n\n<aside> 💡 和上一种类似，但是直接将num[i]加到k中，再将k的个位数加到arr里\n\n</aside>\n\n# 代码\n\n\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> ans = new ArrayList<Integer>();\n        int n = num.length;\n        for (int i=n-1; i>=0 || k>0; i--,k/=10){\n            if (i>=0){\n                k+=num[i];\n            }\n            ans.add(k%10);\n        }\n        Collections.reverse(ans);\n        return ans;\n    }\n}\n```\n\n# 复杂度分析\n\n时间复杂度：O(N) *O*(max(*n*,log*k*))\n\n空间复杂度：O(N)\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"carsonlin9996":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"niuyibo0619":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chakochako":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991807958","body":"```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        num1 = int(''.join(map(str,num)))\n        return list(map(int,list(str(num1+k))))\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mannnn6":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sogatechnology":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ariel-mu3":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sugar666":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liwangping":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cecilialmw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ph2200":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yunomin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hinancy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guochiscoding":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shibingchao123":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yukicoding":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lhjzuibang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nadostars":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xitice":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cyk1337":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ywang525":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"razor1895":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"famine330":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jsu-arch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yxq1997":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zbqnb":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xjlgod":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bai170":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nerrolk":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liyubin117":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bpointa":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991859929","body":"### 思路\n\n模拟竖式计算，新的一期打算开始试着用Java实现，自己不习惯Java，思路还是在Python上的思路，感觉实现得有点粗糙\n\n### Java代码\n```Java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n      ArrayList<Integer> klist=new ArrayList<>();\n      ArrayList<Integer> nums=new ArrayList<>();\n      for (int n:num)\n      {\n          nums.add(n);\n      }\n      while (k>0)\n      {\n          klist.add(0,k%10);\n          k=k/10;\n      }\n      int a=klist.size();\n      int b=nums.size();\n    if(a<b)\n    {\n        for (int i1=0;i1<b-a;i1++)\n        {\n            klist.add(0,0);\n        }\n    }\n    else if(b<a)\n    {\n        for (int i2=0;i2<a-b;i2++)\n        {\n            nums.add(0,0);\n        }\n    }\n  \n      ArrayList<Integer> ans=new ArrayList<>();\n      int saving=0;\n      for (int i=nums.size()-1;i>=0;i--)\n      {\n          int tmp=saving+klist.get(i)+nums.get(i);\n          ans.add(0,tmp%10);\n          saving=tmp/10 ;\n      }\n      if(saving>0)\n      {\n          ans.add(0,saving);\n      }\n\n    \n\n      \n      return ans;\n    }\n}\n\n\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jiangyanlineu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rocjemaintiendrai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sunnyyujf":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zz10044":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"menglin-l":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991822250","body":"### 思路：\r\n#### 1.将k与num的最后一位(size - 1)数字相加，然后把得到的结果与10取模，便是数组新的最后一位，将其存入原数组中最后一位。\r\n#### 2.将1中的k与10取余，去掉个位，再与num的(size - 2)位相加，重复1过程。\r\n#### 3.利用LinkedList特性插入元素，直接返回最终结果，不需要再翻转。\r\n---\r\n\r\n### 代码部分：\r\n```Java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        LinkedList<Integer> ans = new LinkedList<>();\r\n        \r\n        int sum = 0, carry = 0, len = num.length - 1;\r\n        \r\n        while (len >= 0 || k != 0) {\r\n            int x = len >= 0 ? num[len] : 0;\r\n            int y = k != 0 ? k % 10 : 0;\r\n            \r\n            sum = x + y + carry;\r\n            carry = sum / 10;\r\n            \r\n            k /= 10;\r\n            len --;\r\n            \r\n            ans.addFirst(sum % 10);\r\n        }\r\n        \r\n        if (carry != 0) ans.addFirst(carry);\r\n        return ans;\r\n    }\r\n}\r\n```\r\n---\r\n\r\n#### Time: O(N)\r\n#### Space: O(1), 长度为26的数组算作常数空间","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"potatoma":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991866936","body":"### 思路\n\n***\n\n先在对应位置一一相加，再进行进位操作\n\n### 代码\n\n***\n\nJavascript code:\n\n```javascript\nvar addToArrayForm = function(num, k) {\n    let temp = 0;\n    const kLen = k.toString().length;\n    for (let i = 0;i < kLen;i++) {\n        if (num.length < kLen) num.unshift(0);\n        temp = k % 10;\n        k = Math.floor(k / 10);\n        num[num.length - 1 - i] += temp;\n    }\n    const nLen = num.length;\n    for (let i = nLen - 1;i > 0;i--) {\n        if (num[i] >= 10) {\n            num[i - 1] += 1\n            num[i] = num[i] % 10;\n        }\n    }\n    if (num[0] >= 10) {\n        num[0] = num[0] % 10;\n        num.unshift(1);\n    }\n    return num;\n};\n```\n\n### 复杂度分析\n\n***\n\n时间复杂度O(max(N,logk))\n\n空间复杂度O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mahalasu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"maschinist-lzy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jackielj":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"francis-xsc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"autumndesea":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"snowballbears":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liuyangqiqaq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jinming-gu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lovewitch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kashinggo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"laofuwf":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991847136","body":"```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        total = 0\n        index = 0\n        \n        for n in num[::-1]:\n            total += (10 ** index) * n\n            index += 1\n        \n        total += k\n        \n        res = []\n        for digit in str(total):\n            res.append(int(digit))\n        \n        return res\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zjp1483469269":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991833580","body":"```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        c = 0\n        ans = []\n        for i in range(len(num)):\n            x = k % 10\n            k = k // 10\n            n,c = (x + num[len(num)-1-i] + c) % 10,(x + num[len(num)-1-i]+c) // 10\n            ans = [n]+ans\n        k = k+c\n        if k!=0:\n            while(k!=0):\n                ans = [k%10] + ans\n                k = k // 10\n            return ans\n        if c == 0:\n            return ans\n        else :\n            return [c]+ans\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bluerui":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joeychengtor":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"watermelondrip":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jding0":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jk1452470209":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tao-mao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"agathawang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"daniel-zheng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"moin-jer":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991922037","body":"### 思路\n---\n逐位相加\n### 代码\n---\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> ans = new LinkedList<>();\n        int len = num.length;\n        int i = len - 1, tmp = k, carry = 0;\n        while (i >= 0 || tmp > 0 || carry > 0) {\n            int t = (i >= 0 ? num[i] : 0) + (tmp > 0 ? tmp % 10 : 0) + carry;\n            carry = t / 10;\n            ans.add(0, t % 10);\n            --i;\n            tmp /= 10;\n        }\n        return ans;\n    }\n}\n```\n### 复杂度分析\n---\n+ 时间复杂度：O(max(num.length, logk))\n+ 空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qizhongdd":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lllouiselao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huangxuang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangzhengneu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"just-focus":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"monkofeast":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hackbl":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhang6260":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jadeqi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"houhao1998":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cartie-zhoumo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yufanzh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"timmmyang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kennethalgol":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991873877","body":"##语言\r\njava\r\n\r\n```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res = new LinkedList<>();\r\n\t\tfinal int len = num.length;\r\n\t\tfor(int i = len - 1; i >= 0; i--) {\r\n\t\t\tint sum = num[i] + k % 10;\r\n\t\t\tk /= 10;\r\n\t\t\tif(sum >= 10) {\r\n\t\t\t\tk++;\r\n\t\t\t\tsum -= 10;\r\n\t\t\t}\t\r\n\t\t\tres.add(0, sum);\r\n\t\t}\r\n\t\tfor(; k > 0; k /= 10) {\r\n\t\t\tres.add(0, k % 10);\r\n\t\t}\r\n\t\treturn res;\r\n    }\r\n}\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dana-dai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yqycs":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"oasans":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"changanyue":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sunstrongchina":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhumengcheng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"laurence-try":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jinhma":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ronghuanyou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"last-battle":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991860618","body":"## 思路\r\n\r\n## 关键点\r\n\r\n从num的最后一位往前遍历，同时维护carry进位。循环条件是num下标合法或者k大于0才结束，那么累加的时候就要注意数组num下标的合法性。最后退出循环后再检查一下carry，防止漏加。将最后结果reverse后返回即可。 \r\n\r\n## 代码\r\n\r\n- 语言支持：C++\r\n\r\nC++ Code:\r\n\r\n```c++\r\n\r\nclass Solution {\r\npublic:\r\n    vector<int> addToArrayForm(vector<int>& num, int k) {\r\n        vector<int> res;\r\n\r\n        int carry = 0;\r\n        for (int i = num.size() - 1, j = 0; i >= 0 || k > 0; --i, ++j) {\r\n            auto tmp = (i >= 0 ? num[i] : 0) + k % 10 + carry;\r\n            res.emplace_back(tmp % 10);\r\n            carry = tmp / 10;\r\n            k /= 10;\r\n        }\r\n\r\n        if (carry) {\r\n            res.emplace_back(carry);\r\n        }\r\n\r\n        reverse(res.begin(), res.end());\r\n\r\n        return res;\r\n    }\r\n};\r\n\r\n```\r\n\r\n\r\n**复杂度分析**\r\n\r\n令 n 为数组长度。\r\n\r\n- 时间复杂度：$O(n)$\r\n- 空间复杂度：$O(n)$","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"l-sui":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991831999","body":"var addToArrayForm = function(A, K) {\n    const res = [];\n    const n = A.length;\n    for (let i = n - 1; i >= 0 || K > 0; --i, K = Math.floor(K / 10)) {\n        if (i >= 0) {\n            K += A[i];\n        }\n        res.push(K % 10);\n    }\n    res.reverse();\n    return res;\n};","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"52hzecho":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bochengwan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lareinawei":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chiajune":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzh-zh3ndu1":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lydia61":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"astrking":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"doublew2w":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"forschers":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"toms-bigdata":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991834648","body":"# 【Day 1】989. 数组形式的整数加法\n## 思路\n数字转化成数组，按位相加，注意进位\n## Golang代码\n```\nfunc reverse(num []int) {\n\tfor i, j := 0, len(num)-1; i < j; {\n\t\tnum[i], num[j] = num[j], num[i]\n\t\ti++\n\t\tj--\n\t}\n}\n\nfunc addToArrayForm(num []int, k int) []int {\n\tif k == 0 {\n\t\treturn num\n\t}\n\tk_list := make([]int, 5)\n\n\tfor i:=0;k != 0;i++{\n\t\tk_list[i] = k%10\n\t\tk/=10\n\t}\n\tmax_length := int(math.Max(float64(len(num)), float64(len(k_list)))) + 1\n\tans := make([]int, max_length)\n\treverse(num)\n\n\tfor i := 0; i < max_length; i++ {\n\t\tnum_num := 0\n\t\tk_num := 0\n\t\tans_num := ans[i]\n\t\tif i < len(num) {\n\t\t\tnum_num = num[i]\n\t\t}\n\t\tif i < len(k_list) {\n\t\t\tk_num = k_list[i]\n\t\t}\n\t\tdata := num_num + k_num + ans_num\n\t\tif data >= 10 {\n\t\t\tans[i+1] += 1\n\t\t}\n\t\tans[i] = data % 10\n\t}\n\n\treverse(ans)\n\ti := 0\n\tfor ans[i] == 0 {\n\t\ti++\n\t}\n\treturn ans[i:]\n}\n```\n## 复杂度\n时间:O(n)\n空间:O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jaywx":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wu-zonglin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"socrates2001":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shinnost":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"v-enzo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hwfrankfung":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991913378","body":"Codes\n-\n```javascript\nvar addToArrayForm = function(num, k) {\n    const res = [];\n    const n = num.length;\n    for (let i = n - 1; i >= 0; --i) {\n        let sum = num[i] + k % 10;\n        k = Math.floor(k / 10);\n        if (sum >= 10) {\n            k++;\n            sum -= 10;\n        }\n        res.push(sum);\n    }\n    for (; k > 0; k = Math.floor(k / 10)) {\n        res.push(k % 10);\n    }\n    res.reverse();\n    return res;\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mrhero-web":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hondrytravis":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"awenbocc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"vincentlw":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"richard-lyf":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991922848","body":"class Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n\n        carry = 0\n        nums = num\n        for i in range(len(num)-1,-1,-1):\n            tmp = (nums[i] + k % 10 + carry) % 10\n            carry = (nums[i] + k % 10 + carry) // 10\n            nums[i] = tmp\n            k = k // 10  \n\n        s = k + carry\n        b = []\n        while s:\n             b = [s % 10] + b\n             s = s // 10\n        return b + nums\n\n        # o n + max(0 , k-n)2  o max(1, k-n) ","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gjts":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aruseito":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"harleyszhang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"badcoderchou":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"auto-sk":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"breezepython":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jianxinyu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cruiseyugh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"abby-xu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zetavi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"anhtom2000":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhi22":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991886091","body":"```python3\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        lk = []\n        addOne = 0\n        while k:\n            k, m = divmod(k, 10)\n            lk.append(m)\n        ln = len(num); llk = len(lk)\n        res = [0 for _ in range(max(ln, llk)+1)]\n        num.reverse()\n        idx = 0\n        while idx < ln and idx < llk:\n            sum = num[idx] + lk[idx] + addOne\n            res[idx] = sum % 10\n            addOne = 0\n            if sum >= 10: addOne = 1\n            idx += 1\n        remain = num if ln > llk else lk\n        while idx < len(remain) or addOne:\n            if idx < len(remain): res[idx] += remain[idx]\n            res[idx] += addOne\n            addOne = 0\n            idx += 1\n            if res[idx] >= 10:\n                res[idx] %= 10\n                addOne = 1\n        if res[-1] == 0: res.pop()\n        res.reverse()\n        return res\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"master-guang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chenjingjing85":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"forlittlebeauty":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991717494","body":"## 思路\n\n***\n\n1. sum the value of the num list\n2. add k\n3. return the list form of the final value\n\n***\n\n## 代码\n\n``` python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        # numSum = 0\n        # for n in num:\n        #     numSum = numSum*10+n\n        # numSum += k\n        # return list(str(numSum))\n        return (list(str(int(\"\".join(map(str, num))) + k)))\n```\n\n\n\n***\n\n时间复杂度: O(n) \n\n空间复杂度: O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liuxy94":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991874521","body":"## 思路\n把num先变成int 然后sum_int = k+num_int 再把sum_int变成sum_array\n\n## 代码\n``` python\nclass Solution(object):\n    def addToArrayForm(self, num, k):\n        \"\"\"\n        :type num: List[int]\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n        ## step0: corner case\n        if k == 0:\n            return num\n        ## step1: change the array to number\n        n = len(num)\n        num_int = 0\n        for i in range(n):\n            num_int += num[i]*10**(n-1-i)\n        ## step2: compute the sum\n        sum_int = num_int + k\n        sum_array = []\n        ## step3: change the sum to array\n        while sum_int != 0:\n            quotient = sum_int//10\n            remainder = sum_int%10\n            ## update sum array and int\n            sum_array.insert(0,remainder)\n            sum_int = quotient\n        \n        return sum_array\n```\n\n## 复杂度分析\n时间 O(n^2)\n\n空间 O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xinnxuu":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991851926","body":"# Idea\n\n---\n\n- Add numbers from right to left digit by digit. Add k's units' digit to first sum, tens' digit to second sum, hundreds' digit to third sum, and so on.\n- Beware of  the case that k > num.  (Whether k > 0 after the num loop)\n- And remember to reverse the result list.\n\n# Code (Java)\n\n---\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> res = new ArrayList<Integer>();\n        for (int i = num.length - 1; i >= 0; i--){\n            int sum = num[i] + k % 10;\n            k /= 10;\n            if (sum >= 10){\n                k++;\n                sum -= 10;\n            }\n            res.add(sum);\n        }\n        \n        while (k > 0){\n            res.add(k % 10);\n            k /= 10;\n        }\n        \n        Collections.reverse(res);\n        return res;\n    }\n}\n```\n\n# Complexity\n\n---\n\n- Time Complexity: O(N)\n- Space Complexity: O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weisday":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"missnanlan":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991866075","body":"## 思路\n\n1、逐位相加法，逐位数字相加在一起，遇到相加等于 10 的时候要进位，把进位的 1 加入到下一位计算中\n\n2、将整个加数 k 加数加入数组表示数的最低位(简单点)\n\n## 关键点\n\n- 要考虑进位的情况， 比如 num=[3,6,9]，n=45\n- 要考虑 n>num 的长度 的情况，比如 num=[3,6]，n=789\n\n## 代码\n\n- 语言支持：JavaScript\n\nJavaScript Code:\n\n### 解法 1 逐位相加法\n\n```javascript\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\n\nvar addToArrayForm = function (n, k) {\n  var res = [];\n  for (var i = n.length - 1; i >= 0; --i) {\n    var sum = n[i] + (k % 10);\n    k = Math.floor(k / 10);\n    // 如果相加大于10，则进位，把进位的1加入到下一位计算中\n    if (sum >= 10) {\n      k++;\n      sum = sum % 10;\n    }\n    res.push(sum);\n  }\n  // 如果n>num的长度\n  for (; k > 0; k = Math.floor(k / 10)) {\n    res.push(k % 10);\n  }\n\n  return res.reverse();\n};\n```\n\n### 解法 2 将整个加数 k 加数加入数组表示数的最低位\n\n```javascript\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function (num, k) {\n  const res = [];\n  const n = num.length;\n  for (let i = n - 1; i >= 0 || k > 0; --i, k = Math.floor(k / 10)) {\n    if (i >= 0) {\n      k += num[i];\n    }\n    res.push(k % 10);\n  }\n  res.reverse();\n  return res;\n};\n```\n\n**复杂度分析**\n\n令 n 为数组长度。\n\n- 时间复杂度：$O(max(n,logk))$\n- 空间复杂度：$O(n)$\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"venchyluo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yuanwenlai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sjingz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jlin-data":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"victoria011":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"coreja":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991915086","body":"# 思路\n方法挺多的，可以用map以及reduce的方法把列表转字符串再转数字，最后再换成列表\n\n更合理的方法是运用列表模拟进位等操作，把k直接加到num的最后一位里，然后再进位，k自除10，num最后一位取余保留，直到k为0.\n\n# 代码\n```python\nclass Solution:\n    def addToArrayForm1(self, num: List[int], k: int) -> List[int]:\n        return list(map(int, str(int(\"\".join(map(str, num))) + k)))\n\n    def addToArrayForm2(self, num: List[int], k: int) -> List[int]:\n        return list(map(int, str(k + reduce(lambda x, y: 10 * x + y, num))))\n\n    def addToArrayForm3(self, num: List[int], k: int) -> List[int]:\n        i = len(num) - 1\n        carry = 0\n        res = []\n        while k or i >= 0:\n            left = k % 10\n            res_dig = num[i] + left + carry if i >= 0 else left + carry\n            if res_dig >= 10:\n                carry = 1\n                res_dig %= 10\n            else:\n                carry = 0\n            res.insert(0, res_dig)\n            i -= 1\n            k //= 10\n        if carry:\n            res.insert(0, 1)\n        return res\n\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        i = len(num) - 1\n        while k:\n            num[i] += k\n            k, num[i] = num[i] // 10, num[i] % 10\n            i -= 1\n            if i < 0 and k:\n                num.insert(0, 0)\n                i = 0\n        return num\n\n\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weilantao":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gaozizhong":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pearlcoastal":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jinjin680":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"northseacoder":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"greyqt":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lagrangist":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"asukareisj":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"stefanleeee":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huijunxu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"naivecoder1999":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wxqkb":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"serena9":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"imsingee":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hzhengzhi":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"poidaze7":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"c2tr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"okkband":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bingbinxu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gz712d":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"smallcodebo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zymacro":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"florencelll":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991916994","body":"### 思路\n1.把k转为数组，做数组逐位相加的运算，需要一个tmp array记录哪一位进1了;\n\n2.把num转为数字计算后再转数组;\n\n3.边把num加到k里，边存;\n\n\n采用3，有3个步骤：\n\n1.将num未计算的最低位取出来，跟k相加\n\n2.将k未存到AL的最低位存进去\n\n3.全部完成后 reverse刚刚的AL，因为是从低位存的，但每次都是addLast操作\n\n\n\n\n### 代码\n```Java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> res = new ArrayList<>();\n        for (int i = num.length - 1; i >= 0 || k > 0; i--, k /= 10) {\n            //add num to k from low bits\n            if (i >= 0) {\n                k += num[i];\n            }\n            //add k's bit to AL from low\n            res.add(k % 10);\n        }\n        //reverse\n        Collections.reverse(res);\n        return res;   \n    }\n}\n```\n\n### 复杂度分析：\n时间复杂度 O(n)，这里n是 num、k的长度中的最大值(reverse的操作应该是logn的？）\n\n空间复杂度 O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weiwri-cc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kirito1017":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"a-polarbear":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"krabbejing":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fullstackh":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"carinskyrim":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ziyangz":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"threegold-yxh":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991855499","body":"# [989. 数组形式的整数加法](https://leetcode-cn.com/problems/add-to-array-form-of-integer/)\n\n\n\n对于非负整数 `X` 而言，*`X`* 的*数组形式*是每位数字按从左到右的顺序形成的数组。例如，如果 `X = 1231`，那么其数组形式为 `[1,2,3,1]`。\n\n给定非负整数 `X` 的数组形式 `A`，返回整数 `X+K` 的数组形式。\n\n```java\n示例 1：\n\n输入：A = [1,2,0,0], K = 34\n输出：[1,2,3,4]\n解释：1200 + 34 = 1234\n示例 2：\n\n输入：A = [2,7,4], K = 181\n输出：[4,5,5]\n解释：274 + 181 = 455\n示例 3：\n\n输入：A = [2,1,5], K = 806\n输出：[1,0,2,1]\n解释：215 + 806 = 1021\n示例 4：\n\n输入：A = [9,9,9,9,9,9,9,9,9,9], K = 1\n输出：[1,0,0,0,0,0,0,0,0,0,0]\n解释：9999999999 + 1 = 10000000000\n```\n\n\n\n```java\n提示：\n1 <= A.length <= 10000\n0 <= A[i] <= 9\n0 <= K <= 10000\n如果 A.length > 1，那么 A[0] != 0\n```\n\n\n\n## 思路一\n\n模拟加法的过程即可\n\n\n\n### 代码\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        //因为num的位数可以有10000位，所以肯定是超过了int，或者long的，那么只能通过数组按位计算\n        //每一位的值 = num数组在这一位上的值 + k数组在这一位上的值 + 前一位的进位\n        LinkedList<Integer> res = new LinkedList<>();\n        int carry = 0;\n        for(int i = num.length - 1; i >= 0; i--){\n            //拿当前k的最后一位 Take the last digit of the current k\n            int kLastDigital = k % 10;\n            //sum of the add\n            int sumOfAdd = num[i] + kLastDigital + carry;\n            //注意是头插到结果list中\n            res.addFirst(sumOfAdd % 10);\n\n            //处理carry和k\n            carry = sumOfAdd / 10;\n            k = k / 10;\n        }\n        //如果k提前结束了，那没有关系，后面全部加的都是0\n        //但如果是num先结束了，k还有剩余，那还要把k给处理完\n        while(k != 0){\n            int kLastDigital = k % 10;\n            int sumOfAdd = kLastDigital + carry;\n            //注意是头插到结果list中\n            res.addFirst(sumOfAdd % 10);\n            //处理carry和k\n            carry = sumOfAdd / 10;\n            k = k / 10;\n        }\n        //最后还要检查carry里面还有没有数，如果有的话，加进去\n        if(carry!=0){\n            res.addFirst(carry);\n        }\n\n        return res;        \n    }\n}\n```\n\n\n\n### 复杂度分析\n\n时间复杂度：$O(n)$\n\n空间复杂度：$O(n)$\n\n\n\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"linrax":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991897178","body":"# 思路\n\n将数组从低位到高位加到k上,最后反转\n\n# 代码\n\n语言支持:java\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> res = new ArrayList<>();\n        for(int i = num.length-1;i >= 0|| k >0;i--,k/=10){\n            if(i>=0){\n                k+=num[i];\n            }\n            res.add(k%10);\n        }\n        Collections.reverse(res);\n        return res;\n    }\n}\n```\n\n# 复杂度分析\n\n时间复杂度  O(max(n,log k)) , n为数组长度\n\n空间复杂度 O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"davont":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991922745","body":"## code\n```js\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function (num, k) {\n  /**\n   * 大数相加，先将两个数反转\n   */\n  let numAStr = num.reverse();\n  let numBStr = k.toString().split('').reverse();\n  let temp = 0;\n  let result = [];\n  for (let i = 0; i < Math.max(numAStr.length, numBStr.length); i++) {\n    if (!numAStr[i]) {\n      numAStr[i] = 0;\n    }\n    if (!numBStr[i]) {\n      numBStr[i] = 0;\n    }\n    result[i] = numAStr[i] + +numBStr[i] + temp;\n    if (result[i] > 9) {\n      result[i] -= 10;\n      temp = 1;\n    } else{\n        temp = 0;\n    }\n  }\n  if (temp === 1) {\n    result.push(temp);\n  }\n  return result.reverse();\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"joyce94":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"domorecode":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"junqu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bruce-young233":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"eggeggliu":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991834504","body":"## 代码\n```cpp\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        reverse(num.begin(), num.end());\n        \n        vector<int> num2 = splitToArray(k);\n        \n        num = addTwoArrays(num, num2);\n        \n        reverse(num.begin(), num.end());\n        return num;\n    }\nprivate:\n    vector<int> splitToArray(int k) {\n        if (k < 0 || k > 10000) {\n            cout << \"invalid input\" << endl;\n            return {};\n        }\n        vector<int> res = {};\n        while (k) {\n            res.push_back(k % 10);\n            k /= 10;\n        }\n        return res;\n    }\n    \n    vector<int> addTwoArrays(vector<int>num1, vector<int>num2) {\n        int sz1 = num1.size();\n        int sz2 = num2.size();\n        int n = 0;\n        int carry = 0;\n        while (n < sz1 && n < sz2) {\n            int sum = num1[n] + num2[n] + carry;\n            carry = sum / 10;\n            num1[n++] = sum % 10;\n        }\n        while (n < sz1) {\n            int sum = num1[n] + carry;\n            carry = sum / 10;\n            num1[n++] = sum % 10;\n        }\n        while (n < sz2) {\n            int sum = num2[n++] + carry;\n            carry = sum / 10;\n            num1.push_back(sum % 10);\n        }\n        if (carry) {\n            num1.push_back(carry);\n        }\n        return num1;\n    }\n};\n```\n\n## 复杂度\n时间 O(n)\n空间 O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"daxiadaxia":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"draculabo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ankidord":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tomtao626":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alanwgy":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"potato121":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"baijian1990":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"l-mx-wq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"corki418":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lovemyse1f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kuroky-chen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yachen-guo":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991918651","body":"加法问题，重点在于进位的处理。使用carry位储存。\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        LinkedList<Integer> tmp = new LinkedList<>();\n        int n = num.length;\n        int i = n - 1, sum = 0, carry = 0;\n        while(i >= 0 || k!=0){\n            int x = i >= 0 ? num[i] : 0;\n            int y = k != 0? k % 10 : 0;\n            sum = x + y + carry;\n            carry = sum / 10;\n            k /= 10;\n            tmp.addFirst(sum % 10);\n            i--;\n        }\n        if(carry!=0) tmp.addFirst(carry);\n        List<Integer> res = new ArrayList<>(tmp);\n        return res;\n    }\n}\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zt4188":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jachinm":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gemzq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"harrypangpang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"iamtheusername":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nina1031":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"brandylulu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"clarence5":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991903023","body":"```js\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function(num, k) {\n    const res = [];\n    const n = num.length;\n    for (let i = n - 1; i >= 0 || k > 0; --i, k = Math.floor(k / 10)) {\n        if (i >= 0) {\n            k += num[i];\n        }\n        res.push(k % 10);\n    }\n    res.reverse();\n    return res;\n};\n```\n复杂度：数组长度O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"musicofwind":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"baiqr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"winperrr":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xiangydeng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shuchenwuu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"craig-cheng":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"crazy-xjm":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pandacure":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shanrufu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"husky-gong":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991805344","body":"# 解题思路\r\n - 遍历整个array，求出array的值\r\n - 将array求出的数字和给的数字相加\r\n - 将数字转化为array\r\n\r\n# 代码\r\n```\r\nprivate static int[] arrayAddInteger (int[] A, int k) {\r\n        int temp = 0;\r\n        int idx = 0;\r\n\r\n        List<Integer> list = new ArrayList<>();\r\n\r\n        while (idx < A.length) {\r\n            temp = temp * 10 + A[idx];\r\n            idx++;\r\n        }\r\n\r\n        System.out.println(temp);\r\n\r\n        int sum = temp + k;\r\n\r\n        System.out.println(sum);\r\n\r\n        while (sum != 0) {\r\n            list.add(sum % 10);\r\n            sum /= 10;\r\n        }\r\n\r\n        // convert to array\r\n        Collections.reverse(list);\r\n\r\n        int[] result = new int[list.size()];\r\n        for (int i = 0; i < list.size() ; i++) {\r\n            result[i] = list.get(i);\r\n        }\r\n\r\n        return result;\r\n    }\r\n```\r\n\r\n# 复杂度\r\n- 时间复杂度：O(n) 需要遍历整个数组\r\n- 空间复杂度：O(n) 返回数组需要开辟N的额外空间","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/2#issuecomment-991929422","body":"# 解题思路\r\n- 使用两个指针，代表一个window，左边设为left，右边设置为right\r\n- curr代表当前遍历到的S的位置\r\n- 分为三个阶段：\r\n-- 初始化：left未进入S，right为第一个e出现的位置\r\n-- 中间阶段：left和right均为S中的某一个位置\r\n-- 最后阶段：left为S中最后一个e出现的位置，right已发生越界\r\n- 需要注意：\r\n-- 每次curr扫描到一个C，代表其已到达window的右边界，则需要将左边界设置为C当前位置，并且重新设定右边界\r\n-- 更新距离时，需要使用Math.min(Math.abs(curr - left), Math.abs(curr - right))求出最小值gap，设置到结果位置result[curr] = gap\r\n-- 不能设置为Integer.MIN_VALUE 和Intger.MAX_VALUE，因为会发生越界\r\n# 代码\r\n```\r\npublic static int[] minGap(String S, Character C) {\r\n        // set window [left, right] range\r\n        int left = -S.length();\r\n        int right = 0;\r\n\r\n        // initialize right first\r\n        while (right < S.length() && S.charAt(right) != C) {\r\n            right++;\r\n        }\r\n\r\n        // curr -> current position\r\n        int curr = 0;\r\n        int[] distance = new int[S.length()];\r\n\r\n        while (curr < S.length() && right < S.length()) {\r\n            if (S.charAt(curr) == C) {\r\n                distance[curr] = 0;\r\n                // it means curr has reached to the right edge of the window\r\n                // then have to update the left, right for a new window\r\n                left = curr;\r\n                while (left == right || (right < S.length() && S.charAt(right) != C)) {\r\n                    right++;\r\n                    // if right is out of S, then set it as Integer.MAX_VALUE\r\n                    if (right == S.length()) {\r\n                        right = 2 * S.length();\r\n                    }\r\n                }\r\n            } else {\r\n                // between current window\r\n                // update gaps for Characters in this window\r\n                int gap = Math.min(Math.abs(curr - left), Math.abs(right - curr));\r\n                distance[curr] = gap;\r\n            }\r\n            curr++;\r\n        }\r\n\r\n        return distance;\r\n    }\r\n```\r\n# 复杂度\r\n时间复杂度：O(n) 从左到右，只遍历一遍\r\n空间复杂度：O(n) 需要开辟新的空间，存储结果\r\n\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mayqiu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"leonalhq":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jiabin123":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zacherycao":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991742873","body":"## Idea\n1. Use a carry variable to record previous sum's tenth value\nWhile loop (if num is not empty or k larger than zero or carry larger than zero): \n2. Pop num array's last element as variable LAST. If empty num, LAST = 0\n3. Append the ones digit of the summation to the ans array left side\n4. Update the carry to the summation's tens digit\n\n## Code:\n```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        carry = 0\n        ans = collections.deque()\n        while num or k>0 or carry > 0:\n            last = num.pop() if num else 0\n            cur = (carry + last + k%10)%10\n            carry = (carry + last + k%10)//10\n            k = k//10\n            ans.appendleft(cur)\n        return ans\n```\n\n## Complexity:\nTime: O(max(N, log_10(K)). N is the length of num array. Since we divide K by 10 every loop till K is zero, the complexity of this operation will be log base 10 of K.\nSapce: O(1). The space for carry, last is O(1). The space for the ans is O(max(N, log_10(K)).","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zliu1413":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ts4331":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xueniuniu98":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"louxibai":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kelh93":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"qin-pan":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xulli1996":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"beckyyu96":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"renxumei":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liangsen-zju":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hellowxwworld":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"asaoba":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jiahui-z":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"falsity":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"crystallatte":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhuzuojun":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"atree716":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luoguanggit":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"abouty":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zippend":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tjuaachen":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"goddessiu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangyingxuhalo":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lemon-hoyoung":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"huzizailushang":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"25829365639":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liang233":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"neal0408":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991914566","body":"### 思路\r\n倒着 按位相加，大于 10进位。但是写的有点乱七八糟。\r\n\r\n### 代码\r\n```Python3\r\nclass Solution:\r\n\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        A = num[::-1]\r\n        B = []\r\n        # 将 k 变数组。\r\n        while k:\r\n            B.append(k % 10)\r\n            k = (k - k % 10) // 10\r\n\r\n        # A比 B 短的时候。\r\n        if len(A) < len(B):\r\n            A, B = B, A\r\n\r\n        # 把 B加到 A 中。\r\n        for i in range(len(B)):\r\n            A[i] = A[i] + B[i]\r\n\r\n        # A 中超过 10 的做进位，超过 A 长度的做列表添加。\r\n        for i in range(len(A)):\r\n            if A[i] >= 10:\r\n                if i < len(A) - 1:\r\n                    A[i + 1] = A[i + 1] + A[i] // 10\r\n                    A[i] = A[i] % 10\r\n                else:\r\n                    A.append(A[i] // 10)\r\n                    A[i] = A[i] % 10\r\n\r\n        return A[::-1]\r\n```\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"taylucky":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jocelinlx":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"vuesch":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yulecc":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jax-van":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wenjialu":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yohannjin":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"codewithiris":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991714436","body":"### 思路\n\n\n模拟,将num和k从个位起逐位相加，最终然后反转vector即可。\n例如:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num = [1, 2, 3, 4]  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 12  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-->ans = [6]  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-->ans = [6, 4]  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-->ans = [6, 4, 2]  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-->ans = [6, 4, 2, 1]  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-->ans = [1, 2, 4, 6] \n\n\n### 代码\n\n\n``` C++\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        vector<int> ans;\n        int n = num.size() - 1;\n        int flag = 0;\n        while(n >= 0 || k != 0){\n            int a = n < 0 ? 0 : num[n];\n            int b = k != 0 ? (k % 10) : 0;\n            int tmp = a + b + flag;\n            ans.push_back(tmp % 10);\n            flag = tmp / 10;\n            --n; k/=10;\n        }\n        if(flag != 0){\n            ans.push_back(flag);\n        }\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }\n};\n\n```\n\n**复杂度分析**\n- 时间复杂度: O(max(n,len(k)),其中n是num的长度, len(k)是k的长度\n- 空间复杂度：O(n), n是ans的长度","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/2#issuecomment-991940147","body":"### 思路\n\n\n&nbsp;&nbsp;初始化ans均为1.  \n&nbsp;&nbsp;第一次遍历字符串s，将ans中对应字符c的位置设置为0.    \n&nbsp;&nbsp;第二次遍历字符串s，遇到非字符c的便从左侧或者右侧寻找字符c，取最小值填入ans中.    \n\n\n### 代码\n\n\n``` C++\n\nclass Solution {\npublic:\n    void findC(string& s, int i, char c, vector<int>& ans){\n        int left = i - 1, right = i + 1, n = s.size();\n        while(left >= 0 || right < n){\n            if(left >= 0 && right < n){\n                if(s[left] == c || s[right] == c){\n                    ans[i] = right - i;\n                    return ;\n                }\n            }else if(left >= 0 && s[left] == c){\n                ans[i] = i - left;\n                return ;\n            }else if(right < n && s[right] == c){\n                ans[i] = right - i;\n                return ;\n            }\n            --left;\n            ++right;\n        }\n    }\n    vector<int> shortestToChar(string s, char c) {\n        int n = s.size();\n        vector<int> ans(n, 1);\n        for(int i = 0; i < n; ++i){\n            if(s[i] == c) ans[i] = 0;\n        }\n        for(int i = 0; i < n; ++i){\n            if(s[i] != c) findC(s, i, c, ans);\n        }\n        return ans;\n    }\n};\n\n```\n\n**复杂度分析**\n- 时间复杂度: O(n)\n- 空间复杂度：O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zwx0641":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991715965","body":"思路：\r\n从后往前遍历数组，k+num[i]的模就为结果数组的前一位，k /= 10\r\n存在遍历结束k还大于0的情况，用k/=10处理\r\n``` java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> ans = new ArrayList<>();\r\n        int i = num.length - 1;\r\n        while (i >= 0 || k > 0) {\r\n            if (i >= 0) {\r\n                k = num[i] + k;\r\n            }\r\n            ans.add(0, k % 10);\r\n            k/= 10;\r\n            i--;\r\n        }\r\n        return ans;\r\n    }\r\n}\r\n```\r\n时间O(n) 空间O(n)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/2#issuecomment-991928973","body":"思路：\n从前往后从后往前两次遍历\ntmp记录c出现的位置\n第一次遍历ans[i]存放s中i位置字符与前一个c的距离\n第二次遍历比较min(ans[i], s中i位置字符与后一个c的距离)\n``` java\nclass Solution {\n    public int[] shortestToChar(String s, char c) {\n        int[] ans = new int[s.length()];\n        //Arrays.fill(ans, s.length() + 1);\n        int i = 0, j = s.length() - 1, tmp = -1;\n        while (i < s.length()) {\n            if (s.charAt(i) == c) {\n                ans[i] = 0;\n                tmp = i;\n            } \n            if (tmp != -1) {\n                ans[i] = i - tmp;\n            } else {\n                ans[i] = s.length() + 1;\n            }\n            \n            i++;\n        }\n        tmp = -1;\n        while (j >= 0) {\n            if (s.charAt(j) == c) {\n                ans[j] = 0;\n                tmp = j;\n            }\n            if (tmp != -1) ans[j] = Math.min(ans[j], tmp - j);\n            \n            j--;\n        }\n        \n        return ans;\n    }\n}\n```\n时间：O(n)\n空间：O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wxj783428795":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991716414","body":"### 思路\r\n\r\n将K的每位与A的每位相加，如果大于10，则下一次相加要进位。\r\n\r\n### 代码\r\n```javascript\r\n/**\r\n * @param {number[]} num\r\n * @param {number} k\r\n * @return {number[]}\r\n */\r\nvar addToArrayForm = function (num, k) {\r\n\r\n    let answer = []; \r\n    let carry = 0; // 进位\r\n    for (let i = 1; i <= num.length || k >= 1; i++) {\r\n        let num1 = num.length - i >= 0 ? num[num.length - i] : 0;\r\n        let num2 = k % 10;\r\n        let sum = num1 + num2 + carry; //每位的和记得加上上一位的进位\r\n        if (sum >= 10) { \r\n            answer.unshift(sum % 10);\r\n            carry = Math.floor(sum / 10)\r\n        } else {\r\n            answer.unshift(sum)\r\n            carry = 0\r\n        }\r\n        k = Math.floor(k / 10)\r\n    }\r\n    if (carry !== 0) { // 出循环后，如果最后进位不为0，则将进位添加到数组首位\r\n        answer.unshift(carry)\r\n    }\r\n    return answer;\r\n};\r\n```\r\n### 复杂度分析\r\n**复杂度分析不是很会，不一定对，如果有错，请指正。**\r\n- 时间复杂度：O(N)，其中 N 为 num 和 k 中较长的长度。\r\n- 空间复杂度：O(N)，其中 N 为 answer 的长度。","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/2#issuecomment-991931122","body":"### 思路\r\n\r\n第一次循环：找到s中所有c的下标。\r\n第二次循环：循环对比s中每个字符，到所有c的下标的距离，取其中的最小值放入answer中\r\n\r\n### 代码\r\n```javascript\r\n/**\r\n * @param {string} s\r\n * @param {character} c\r\n * @return {number[]}\r\n */\r\n\r\nvar shortestToChar = function (s, c) {\r\n    let indexs = []; // 存储所有c在s中的下标\r\n    let answer = []; // 存储结果\r\n    for (let i = 0; i < s.length; i++) { // 第一遍循环先找到所有c在s中的下标\r\n        if (c === s[i]) {\r\n            indexs.push(i)\r\n        }\r\n    }\r\n    for (let i = 0; i < s.length; i++) { // 第二遍循环\r\n        let distance = 0;\r\n        if (c === s[i]) { // 如果当前位等于c，则将0放入answer\r\n            answer.push(distance)\r\n        } else {\r\n            distance = Math.abs(i - indexs[0]);\r\n            for (let j = 1; j < indexs.length; j++) {// 循环判断当前位和每一个c的距离，取最小值\r\n                distance = Math.min(distance, Math.abs(i - indexs[j]));\r\n            }\r\n            answer.push(distance)\r\n        }\r\n    }\r\n    return answer;\r\n};\r\n```\r\n### 复杂度分析\r\n**复杂度分析不是很会，不一定对，如果有错，请指正。**\r\n- 时间复杂度：O(NM)，其中 N 为s的长度，M为s中c出现的次数。\r\n- 空间复杂度：O(N+M)，其中 N 为s的长度，M为s中c出现的次数。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"baddate":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991718618","body":"### 题目\n\n[https://leetcode-cn.com/problems/add-to-array-form-of-integer/](https://leetcode-cn.com/problems/add-to-array-form-of-integer/)\n\n### 思路\n\n基本的加减法思路，从最低位开始，逐位相加，大于10就进1位（直接在原数k上操作），把结果存到一个新的数组res中，\n如果最后k仍然大于0，说明最终结果位数大于两个加数，这时候再将k值加到结果数组res中，\n最后再翻转该数组即可得到最终结果。\n\n### 代码\n\n```cpp\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        vector<int> res;\n        int n = num.size();\n        for(int i = n-1;i >= 0;i--)\n        {\n            int temp = num[i] + k % 10;\n            k /= 10;\n            if(temp >= 10)\n            {\n                k++;\n                temp -= 10;\n            }\n            res.push_back(temp);\n        }\n        while(k > 0)\n        {\n            res.push_back(k % 10);\n            k /= 10;\n        }\n        reverse(res.begin(), res.end());\n        return res;\n    }\n};\n```\n\n**复杂度分析**\n\n- 时间复杂度：O(N)，其中 N 为max(num数组长度，k的位数）。\n- 空间复杂度：O(N)，其中 N 为res数组长度。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"courtneyz94":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991738847","body":"```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        ans, i = [],len(num) -1\n        while k > 0 or i >= 0:\n            k,rmd = divmod(k + (num[i] if i >= 0 else 0),10)\n            ans.append(rmd)\n            i -= 1\n        return reversed(ans)\n```\n### Time Complexity O(n) , Space O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"feifan-bai":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991744742","body":"\n### 思路\n1. Add the k to the num array from the last digit\n2. Iterated with each digit to update the num array\n3. Deal with the carry situation(if need carry, num.insert(0, 0))\n\n\n*### 代码*\n\n```\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        i = len(num)-1\n\n        while k > 0:\n            num[i] += k\n            k, num[i] = num[i] // 10, num[i] % 10\n            i -= 1\n\n            if i < 0 and k!= 0:\n                num.insert(0, 0)\n                i = 0\n        return num\n\n```\n\n- *复杂度分析**\n- 时间复杂度：O(N), N = max(num,len(k)) \n- 空间复杂度：O(N), N = max(len(num), len(k))","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhangnn2018":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991753962","body":"思路： 把数组num转换成整数，与k相加，再将得到的和转换成对应的数组\n代码：\nclass Solution(object):\n    def addToArrayForm(self, num, k):\n        \"\"\"\n        :type num: List[int]\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n        nn=0\n        '''\n        for i in reversed(range(len(num))):\n            nn = nn + 10 ** (len(num) - 1 - i) * num[i]\n        '''\n        for n in num:\n            nn = nn*10+n\n        sum=nn+k\n        strs=str(sum)\n        l=[]\n        for j in range(len(strs)):\n            l.append(int(strs[j]))\n        return l\n复杂度（不是很确定对不对.....）：\n时间复杂度：O(N)，N是num+k的位数\n空间复杂度：O(N)","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/2#issuecomment-991943786","body":"#### 思路\r\n先遍历`s`找到所有等于`c`的元素下标，并存在数组`lab`里，  \r\n再次遍历`s`计算所有元素的下标与数组`lab`里元素值的差的绝对值，取最小的一个。\r\n\r\n#### 代码\r\n  ```python\r\n      class Solution(object):\r\n      def shortestToChar(self, s, c):\r\n          \"\"\"\r\n          :type s: str\r\n          :type c: str\r\n          :rtype: List[int]\r\n          \"\"\"\r\n          lab=[]\r\n          for i in range(len(s)):\r\n              if s[i]==c:\r\n                  lab.append(i)\r\n\r\n          res=[0]*len(s)\r\n          for i in range(len(s)):\r\n              lab0 = [abs(j-i) for j in lab]\r\n              res[i]=min(lab0)\r\n          return res\r\n ```\r\n#### 复杂度\r\n时间复杂度：O(NM), N为数组`s`的长度, M为数组`lab`的长度。  \r\n空间复杂度：O(M), M为数组`lab`的长度，最差情况下等于数组`s`的长度。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"w-curiosity":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991771477","body":"### 思路\ntraverse each digit of the `num` and `k` in reverse order and do add operation\nreverse the list and return\n\n### 代码\n\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        int carry = 0;\n        int p = num.length - 1;\n        List<Integer> list = new LinkedList<>();\n        while( p >= 0 || k > 0 || carry > 0) {\n            int cur = k % 10 + carry;\n            if(p >= 0) {\n                cur += num[p];\n                p--;\n            }\n            list.add(cur % 10);\n            carry = cur / 10;\n            k = k / 10;\n        }\n        Collections.reverse(list);\n        return list;\n    }\n}\n\n\n```\n\n**复杂度分析**\n- TC = O(max(M,N)), M is the length of num, N is the numbers of digits of k\n- SC = O(1), use constant space","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yrtryannn":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991794054","body":"```\nclass Solution {\n    public List<Integer> addToArrayForm(int[] A, int K) {\n        List<Integer> res = new ArrayList<Integer>();\n        int n = A.length;\n        for(int i = n - 1;i >= 0;i--){\n            int sum = A[i] + K % 10;       \n            K /= 10;    \n            if(sum >= 10){\n                K++;                       \n                sum -= 10;                  \n            }\n            res.add(sum);\n        }\n        while (K > 0) {\n            res.add(K % 10);\n            K /= 10;\n        }\n        Collections.reverse(res);\n        return res;\n    }\n}\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zwmanman":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991814629","body":"### 思路\nCalculate the total sum in the array, each number * 10^idx.\nThen sum up with the k \nOut each digit in the total sum\n\n### 代码\n\n\n```python（此处换成你的语言，比如js，py 等）\nclass Solution(object):\n    def addToArrayForm(self, num, k):\n        \"\"\"\n        :type num: List[int]\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n\n        idx = len(num) - 1\n        sum_num = 0\n        res = []\n        for number in num:\n            sum_num = number * (10**idx) + sum_num\n            idx -= 1\n            \n        sum_num += k\n        \n        for digit in (str(sum_num)):\n            res.append(int(digit))\n            \n        return res\n\n\n```\n\n**复杂度分析**\n- 时间复杂度：O(N)，需要遍历数组。\n- 空间复杂度：O(N)，存储返回的数组\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kmshui":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991820454","body":"```\nclass Solution(object):\n    def addToArrayForm(self, num, k):\n        \"\"\"\n        :type num: List[int]\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n        def num_to_lst(n):\n            result = []\n            while n:\n                result.append(n % 10)\n                n = n // 10\n\n            return result[::-1]\n        \n        k_lst = num_to_lst(k)\n        i = len(num) - 1\n        j = len(k_lst) - 1\n        \n        result = []\n        \n        carry = 0\n        while i >= 0 or j >= 0 or carry:\n            left = num[i] if i >= 0 else 0\n            right = k_lst[j] if j >= 0 else 0\n            \n            s = left + right + carry\n            result.append(s % 10)\n            carry = s // 10\n            \n            i -= 1\n            j -= 1\n            \n        return result[::-1]\n```\nTime: O(max(n, m))\nSpace: O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"smilejohnson":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991822957","body":"1. 取 k 的最后一位 lastOfk\n2. 取 num 的最后一位 lastOfNum\n3. 如果 sum(lastOfNum + lastOfk + flag) 大于等于10，进位标记为1，将 sum(lastOfNum + lastOfk + flag) % 10 放置到 res 中\n4. 如果 sum(lastOfNum + lastOfk + flag) 小于10， 进位标记为0，将 sum(lastOfNum + lastOfk + flag) % 10 放置到 res 中\n5.  然后遍历完 num, k 并确保flag最后的值为 0\n\n``` java\nclass Solution {\n    // 取 k 的最后一位 lastOfk\n    // 取 num 的最后一位 lastOfNum\n    // 如果 sum(lastOfNum + lastOfk + flag) 大于等于10，进位标记为1，将 sum(lastOfNum + lastOfk + flag) % 10 放置到 res 中\n    // 如果 sum(lastOfNum + lastOfk + flag) 小于10， 进位标记为0，将 sum(lastOfNum + lastOfk + flag) % 10 放置到 res 中\n    // 然后遍历完 num, k 并确保flag最后的值为 0\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        LinkedList<Integer> res = new LinkedList<>();\n        // 遍历k\n        int index = num.length - 1; // num 的最后一位\n        int flag = 0; // 进位\n        int lastOfNum = 0;\n        int lastOfk = 0;\n        int sum = 0;\n        while (k > 0 && index >= 0) {\n            lastOfk = k % 10;\n            k /= 10;\n            lastOfNum = num[index--];\n            sum = lastOfk + lastOfNum + flag;\n            if (sum >= 10) {\n                flag = 1;\n                res.addFirst(sum % 10);\n            } else {\n                flag = 0;\n                res.addFirst(sum);\n            }\n        }\n        \n        while (k > 0) {\n            lastOfk = k % 10;\n            k /= 10;\n            sum = lastOfk + flag;\n            if (sum >= 10) {\n                flag = 1;\n                res.addFirst(sum % 10);\n            } else {\n                flag = 0;\n                res.addFirst(sum);\n            }\n           \n        }\n\n        while (index >= 0) {\n            lastOfNum = num[index--];\n            sum = lastOfNum + flag;\n            if (sum >= 10) {\n                flag = 1;\n                res.addFirst(sum % 10);\n            } else {\n                flag = 0;\n                res.addFirst(sum);\n            }\n        }\n\n        if (flag == 1) {\n            res.addFirst(1);\n        }\n\n        return res;\n    }\n}\n```\n\n---\n- Time: O(max(m,n)) \n- Space: O(m+n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hzgwebgit":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991824949","body":"思路\n数组尾数与k 逐项相加，大于10 则进位\n\n代码\n\nvar add = function(num, k) {\n    const res = [];\n    const len = num.length;\n    for (let i = len - 1; i >= 0; --i) {\n        let sum = num[i] + k % 10;\n        k = Math.floor(k / 10);\n        if (sum >= 10) {\n            k++;\n            sum -= 10;\n        }\n        res.push(sum);\n    }\n    for (; k > 0; k = Math.floor(k / 10)) {\n        res.push(k % 10);\n    }\n    res.reverse();\n    return res;\n};\n\n\n**复杂度分析**\n- 时间复杂度：O(N)，其中 N 为数组长度。\n- 空间复杂度：O(1)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"brent-liu":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991825083","body":"### 思路\n\t1. 创造一个空列表，用来存储结果\n\t2. 取出num列表的每一个数字，按照位次和K对应的位次相加，如果超过10就进位，获得num和k在每一个位次上的和\n\t3. 将每一位次的和按照相应的顺序append到list中，就得到结果\n### 代码\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> res = new ArrayList<Integer>();\n        int n = num.length;\n        for (int i = n-1; i >= 0; --i){\n            int sum = num[i] + k % 10;\n            k /= 10;\n            if (sum >= 10){\n                k ++;\n                sum -= 10;\n            }\n            res.add(sum);\n        }\n        for (; k > 0; k /= 10){\n            res.add(k % 10);\n        }\n        Collections.reverse(res);\n        return res;    \n    }\n}\n```\n**复杂度分析**\n- 时间复杂度：O(max(O, logk)) \n- 空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hdyhdy":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991825388","body":"思路：\n首先设立一个存放答案的切片。\n接着让数据数组从最后一位开始向前遍历，同时与k数的余数相加。\n相加完判断该值的大小，如果大于十输入到答案切片的时候要减十。\n最后再对答案切片做一个反转。\n\n```\nfunc addToArrayForm(num []int, k int) []int {\n    ans := make([]int,0)\n    for i := len(num) - 1; i >=0; i -- {\n        tem := num[i] + k % 10\n        k = k / 10\n        if tem >= 10 {\n            ans = append(ans,tem - 10)\n            k ++ \n        }else {\n            ans = append(ans,tem )\n        }   \n    }\n    for ; k > 0; k /= 10 {\n        ans = append(ans, k%10)\n    }\n    reverse(ans)\n    return ans \n}\n\nfunc reverse(num []int) {\n    for i, n := 0, len(num); i < n/2; i++ {\n        num[i], num[n-1-i] = num[n-1-i], num[i]\n    }\n}\n```\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"simbafl":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991825575","body":"-- java版\r\n```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res = new ArrayList<Integer>();\r\n        int n = num.length;\r\n        for(int i=n-1;i>=0;--i){\r\n            int sum = num[i] + k % 10;\r\n            k = k /10;\r\n            if(sum >= 10){\r\n                k += 1;\r\n                sum -=10;\r\n            }\r\n            res.add(sum);\r\n        }\r\n        for(; k>0; k/=10){\r\n            res.add(k%10);\r\n        }\r\n        Collections.reverse(res);\r\n        return res;\r\n    }\r\n}\r\n```\r\n-- python版\r\n```py\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        res = []\r\n        for i in range(len(num)-1, -1, -1):\r\n            k += num[i] \r\n            res.insert(0, k%10)\r\n            k //= 10\r\n        while k:\r\n            res.insert(0, k%10)\r\n            k //= 10\r\n        return res\r\n```\r\n\r\n```py\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        res = []\r\n        for n in num[::-1]:\r\n            k += n \r\n            res.insert(0, k%10)\r\n            k //= 10\r\n        while k:\r\n            res.insert(0, k%10)\r\n            k //= 10\r\n        return res\r\n```\r\n说到底还是遍历，时间复杂度：O(max(k, len(num)))","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rzhao010":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991825675","body":"**思路：**\r\nAdding up by digits.\r\nIn the array, we start from the very end element.\r\nFor the integer k, each time we use the last digit (k % 10),\r\nif the sum is bigger than 9, add 1 to k(so we don't need another var to record it).\r\nAfter the loop, deal with the case k > 0 (maybe k is too big or we have addup).\r\n\r\n**代码**\r\n```\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res = new ArrayList<>();\r\n        int n = num.length;\r\n        for (int i = n - 1; i >= 0; i--) {\r\n            int sum = num[i] + k % 10;\r\n            k /= 10;\r\n            if (sum > 9) {\r\n               k += 1;\r\n               sum -= 10;\r\n            }\r\n            res.add(sum);\r\n        }\r\n        for (; k > 0; k /= 10) {\r\n            res.add(k % 10);\r\n        }\r\n        Collections.reverse(res);\r\n        return res;\r\n    }\r\n}\r\n```\r\n\r\n**Time Complexity**\r\nTime: O(n), one for loop; \r\nSpace: O(n), use one arraylist","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sendsproject":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991825885","body":"思路：使用数列式两数相加模板，注意carry 的进位和取模操作 \r\n\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        p1 = len(num) -1 \r\n        carry = 0 \r\n        results = []\r\n        while p1 >=0 or k != 0 or carry>0:\r\n            add1 = num[p1] if p1 >=0 else 0 \r\n            add2 = k %10\r\n            sum = add1 + add2 + carry\r\n            carry = 1 if sum >= 10 else 0\r\n            sum = sum - 10 if sum >= 10 else sum\r\n            results.append(sum)\r\n            p1 -= 1\r\n            k //= 10\r\n        return results[::-1]\r\n\r\n时间复杂度 O(N)\r\n空间复杂度 O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luoxingbiao":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991828392","body":"**思路：**\n\n各位相加，从低到高位计算。nums数组从nums.length-1的位置开始遍历，每次遍历都与当前k的个位值相加，并加上当前一个进位值，\n在判断是否大于9，更新进位值。\n\n细节处理：当k的位数大于nums.length时，在遍历完nums数组后还要处理剩下的k，直到k为0。如果最后进位值为一，要在ans数组头部加1。\n\n**代码：**\n```\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        \n        List<Integer> ans = new LinkedList<Integer>();\n\n        int jinwei = 0;\n        for(int i = num.length - 1;i >= 0;i--){\n            int a = num[i] + (k % 10) + jinwei;\n            if(a >= 10){\n                jinwei = 1;\n                a %= 10;\n            }\n            else{\n                jinwei = 0;\n            }\n            ans.add(0,a);\n            k = k / 10;\n        }\n\n        while(k != 0){\n            if(jinwei != 0){\n                int a = (k % 10) + jinwei;\n                if(a >= 10){\n                    jinwei = 1;\n                    a %= 10;\n                }\n                else{\n                    jinwei = 0;\n                }\n                ans.add(0, a);\n            }\n            else{\n                ans.add(0, k % 10);\n            }\n\n            k = k / 10;\n\n        }\n\n        if(jinwei != 0){\n            ans.add(0,1);\n        }\n\n        return ans;\n\n\n    }\n}\n```\n\n**复杂度**\n\n时间复杂度：O(max(nums.length,len(k))),因为List是用LinkedList实现，所以在链表头部插入元素的时间复杂度为O(1)。\n\n空间复杂度：O(ans.size())。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"linyang4":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991828416","body":"## 代码\n```JavaScript\nconst addToArrayForm = (num, k) => {\n    const result = []\n    let carry = 0 // 是否进位\n    for(let i = num.length - 1; i >= 0 || k > 0; i--) {\n        const numItem = num[i] || 0\n        let sum = numItem + (k % 10) + carry\n        if (sum >= 10) {\n            sum = sum - 10\n            carry = 1\n        } else {\n            carry = 0\n        }\n        k = Math.floor(k / 10)\n        result.push(sum)\n    }\n    if (carry === 1) {\n        result.push(1)\n    }\n    return result.reverse()\n};\n```\n\n## 复杂度分析\nM是num的长度, N是k的长度\n- 时间复杂度: O(max(M, logN))\n- 空间复杂度: O(max(M, N))\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"charlestang":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991829254","body":"思路：\r\n从最后一位开始，模拟竖式加法，逐位向前求和。\r\n\r\n```python\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        n = len(num)\r\n        p = n - 1\r\n        carry = 0\r\n        while k > 0 or p >= 0:\r\n            last = k % 10\r\n            new = carry + last + (num[p] if p >= 0 else 0)\r\n            if p >= 0:\r\n                num[p] = new % 10\r\n            else:\r\n                num.insert(0, new % 10)\r\n            carry = new // 10\r\n            k = k // 10\r\n            p = p - 1\r\n        if carry == 1:\r\n            num.insert(0, 1)\r\n        return num\r\n```\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"flower-f":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991829635","body":"### 解题思路\n题型：模拟\n思路：模拟加法运算，大于或等于 10 就向前进位\n\n### 代码\n\n```typescript\nfunction addToArrayForm(num: number[], k: number): number[] {\n    let carry = 0; // 记录进位\n    let i = num.length - 1; // 记录当前 num 数字的指针\n    const res = []; // 结果\n\n    // 当 i >= 0 或 k > 0 或 carry > 0 的时候，说明需要继续进行加法\n    while(i >= 0 || k > 0 || carry > 0) {\n        const k_add = k > 0 ? k % 10 : 0; // k 提供的加数\n        const num_add = i >= 0 ? num[i] : 0; // num 提供的加数\n        const sum = k_add + num_add + carry; // 求和\n        res.push(sum % 10); // 存储结果\n        carry = Math.floor(sum / 10); // 计算进位\n\n        i--;\n        k = Math.floor(k / 10);\n    }\n\n    return res.reverse();\n};\n```\n\n### 复杂度\n时间：O(max(n, m))\n空间：O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gaominghao":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991829645","body":"### 思路\n本来的思路是直接算，然后翻转，遇到几个问题\n1. 数据会超过int的范围，需要用BigInteger(Java)\n2. 循环次数过多\n然后看了题解，将k当成一个整体与每一位运算\n### 代码\n\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n\t\tList<Integer> result = new ArrayList<>();\n\t\tfor(int i = num.length - 1; i >= 0; i--) {\n\t\t\tint temp = (num[i] + k) % 10;\n\t\t\tk = (k + num[i])/10;\n\t\t\tresult.add(temp);\n\t\t}\n\t\twhile(k!=0) {\n\t\t\tresult.add(k%10);\n\t\t\tk = k/10;\n\t\t}\n\t\tCollections.reverse(result);\n\t\treturn result;\n    }\n}\n```\n\n**复杂度分析**\n- 时间复杂度：O(Max(N,logK))，其中 N 为数组长度。\n- 空间复杂度：O(1)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"awesomelittle76":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991830816","body":"思路\n大整数的存储\n从高位到低位存，方便进位\n例：123456789 -> [9, 8, 7, 6, 5, 4, 3, 2, 1]\n\n相加\n用代码模拟两数相加\n[A3, A2, A1, A0] + [B2, B1, B0]\n-> C0 = A0 + B0 如果 C0 > 10，则进位\n-> C1 = A1 + B1 + t(有进位则为1，否则为0)\n-> C2 = A2 + B2 + t\n-> C3 = A2 + t\n\nTS语法部分\nTS中的Number数据类型并不是int，所以在取余数的时候，要额外做取整\n\n代码\n\nfunction addToArrayForm(num: number[], k: number): number[] {\n  num.reverse();\n  for (let i = 0; i < num.length; i++) {\n    k += num[i];\n    num[i] = k % 10;\n    k = (k / 10) | 0;\n  }\n  while (k > 0) {\n    num.push(k % 10);\n    k = (k / 10) | 0;\n  }\n  num.reverse();\n  return num;\n}\n\n\n分析\n时间复杂度：O(n)\n空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"arya-03":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991831460","body":"**代码1**\r\n初始版本，除了代码短，没有优点。执行用时：4928 ms, 在所有 Python3 提交中击败了6.65%的用户，内存消耗：15.6 MB, 在所有 Python3 提交中击败了27.26%的用户。\r\n```\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        len_A=len(num)\r\n        sum=0\r\n        sum_a=0\r\n        for i in range(len_A):\r\n            sum_a=sum_a+num[i]*pow(10,(len_A-1-i))\r\n        sum=sum_a+k\r\n        result=list(map(int, str(sum)))\r\n        return result\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bluetomlee":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991833123","body":"```\r\n// train of thought：\r\n// Add up each number.Then fill the next one\r\n// the first step is traverse the array ,then the index value add then k of index number.\r\n// the second step is check boundary condition to ensure all numbers added.because num's array size is correct, but not sure k is correct\r\n// the third step is reversing array\r\n\r\n// complexity analysis：O(n)\r\n\r\nclass Solution {\r\npublic:\r\n    vector<int> addToArrayForm(vector<int>& num, int k) {\r\n        vector<int> res;\r\n        int size = num.size();\r\n        for(int n = size - 1; n >= 0; n--) {\r\n            int sum = num[n] + k % 10;\r\n            k /= 10;\r\n            if (sum >= 10) {\r\n                // for next loop to complement\r\n                k++;\r\n                sum = sum % 10;\r\n            }\r\n            res.push_back(sum);\r\n        }\r\n\r\n        for (; k > 0; k /= 10) {\r\n            res.push_back(k % 10);\r\n        }\r\n        reverse(res.begin(), res.end());\r\n        return res;\r\n    }\r\n};\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"stackvoid":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991833487","body":"## 思路\n\n- 建一个新数组，并从末尾遍历原始数组。\n- new[i]=(old[j]+k)%10   k=(old[j]+k)/10 是整个解题的核心。\n- 注意边界，返回正确结果即可。\n\n## 代码\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        int[] cur = new int[num.length + 5];\n        int i = num.length - 1, j = 0;\n        for (; i >= 0; i--, j++) {\n            cur[j] = (k + num[i]) % 10;\n            k = (k + num[i]) / 10;\n        }\n        while (k != 0) {\n            cur[j++] = k % 10;\n            k = k / 10;\n        }\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int indexR = 0, indexCur = j - 1; indexR < j; indexR++, indexCur--) {\n            result.add(cur[indexCur]);\n        }\n        return result;\n    }\n}\n```\n\n\n\n## 算法分析\n\n时间复杂度：2次遍历数组，时间复杂度为O(N)\n\n空间复杂度：O(N)\n\nN 为 数组长度或K的最大值。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cszys888":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991834012","body":"## 思路\r\n1. 转换num成一个integer，叫做int_num\r\n2. 利用python内置加法求和 int_num和k，得到 int_result\r\n3. 创建一个空数组，利用除法将int_result 转换成数组\r\n\r\n## 代码\r\n```\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        # transform num to an integer\r\n        int_num = 0\r\n        for digit in num:\r\n            int_num = int_num*10 + digit\r\n        \r\n        int_result = int_num + k\r\n\r\n        result = []\r\n        while int_result // 10 > 0:\r\n            result.append(int_result % 10)\r\n            int_result = int_result// 10\r\n        result.append(int_result)\r\n        result.reverse()\r\n        return result\r\n```\r\n\r\n## 复杂度分析\r\ntime complexity: o(N)\r\nspace complexity: o(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rootdavid":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991834365","body":"```cpp\n// 参考题解：https://leetcode-cn.com/problems/add-to-array-form-of-integer/solution/989-ji-zhu-zhe-ge-jia-fa-mo-ban-miao-sha-8y9r/\n\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n      int n = num.size();\n      \n      vector<int> res;\n      int sum = 0, carry = 0;\n      int i = n - 1;\n\n      // 从后往前遍历是因为符合加法运算逻辑\n      while (i >= 0 || k != 0) {\n        // 对齐计算位数，补0\n        int x = i >= 0 ? num[i] : 0;\n        // %10 取个位\n        int y = k != 0 ? k % 10 : 0;\n\n        sum = x + y + carry;\n\n        carry = sum / 10;\n\n        i--;\n        k /= 10;\n\n        res.push_back(sum % 10);\n        \n      }\n\n      // 计算最后一位的时候，可能有进位问题，有进位的话补入结果数组\n      if (carry != 0) res.push_back(carry);\n\n      // res数组是倒序的，所以需要反转\n      reverse(res.begin(), res.end());\n\n      return res;\n      \n    }\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangzichengtech":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991835034","body":"## 题目地址(989. 数组形式的整数加法)\n\nhttps://leetcode-cn.com/problems/add-to-array-form-of-integer/\n\n## 题目描述\n\n```\n对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1,2,3,1]。\n\n给定非负整数 X 的数组形式 A，返回整数 X+K 的数组形式。\n\n \n\n示例 1：\n\n输入：A = [1,2,0,0], K = 34\n输出：[1,2,3,4]\n解释：1200 + 34 = 1234\n\n\n示例 2：\n\n输入：A = [2,7,4], K = 181\n输出：[4,5,5]\n解释：274 + 181 = 455\n\n\n示例 3：\n\n输入：A = [2,1,5], K = 806\n输出：[1,0,2,1]\n解释：215 + 806 = 1021\n\n\n示例 4：\n\n输入：A = [9,9,9,9,9,9,9,9,9,9], K = 1\n输出：[1,0,0,0,0,0,0,0,0,0,0]\n解释：9999999999 + 1 = 10000000000\n\n\n \n\n提示：\n\n1 <= A.length <= 10000\n0 <= A[i] <= 9\n0 <= K <= 10000\n如果 A.length > 1，那么 A[0] != 0\n```\n\n## 关键点\n\n-多次利用三元运算符来判断决定变量的值，进位算是难点  \n\n## 代码\n\n- 语言支持：Java\n\nJava Code:\n\n```java\n\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n          int carry = 0;\n        List<Integer> result = new LinkedList<>();\n        int i = num.length-1;\n        while (k>0 || i>=0){\n            int x = i <0 ?0:num[i];\n            int y = k%10;\n            k = k/10;\n            int sum = x+y+carry >=10 ? x+y+carry-10:x+y+carry;\n            result.add(sum);\n            carry = x+y+carry >= 10 ? 1:0;\n            i--;\n        }\n        if(carry == 1){\n            result.add(carry);\n        }\n\n        Collections.reverse(result);\n        return result;\n    }\n}\n\n```\n\n\n**复杂度分析**\n\n令 n 为数组长度。\n\n- 时间复杂度：$O(n)$\n- 空间复杂度：$O(1)$\n\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alexno1no2":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991835437","body":"思路：\n先用reduce计算num对应数值，\n然后加上k后转成iterable的str对象\n再利用map从高位到低位依次转成整数，\n最后转成list\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        return list(map(int, str(k+reduce(lambda a, b: a*10+b, num))))","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"myleswork":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991835905","body":"### 思路\n\n因为A.length最大为10000，所以不能采用类型转换来做，只能采用模拟的办法\n\n设置i作为进位，若对应位与i一起相加后大于10，说明有进位，就将i设置为1，结果对10取余；若小于10则直接进行下一高位的计算。\n\n我设置的条件时num和k同时大于0，若跳出说明至少有一个参数已经到了最高位了，那么未到最高位的参数就以基本相同的思路继续计算。\n\n### 代码\n\n```c++\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n       int key = num.size()-1;\n       int i = 0;\n       while(key>=0 && k){\n           num[key] = i + num[key] + k%10;\n           i = 0;\n           if(num[key] >= 10){\n               i = 1;\n               num[key] %= 10;\n           }\n           k /= 10;\n           key--;\n       }\n       //当k比num长时\n           while(k){\n               int sum = k%10+i;\n               num.insert(num.begin(),sum%10);\n               i = sum/10;\n               k /= 10;\n           }\n       \n       //当num比k长时\n           while(key>=0){\n                num[key] = i + num[key] + k%10;\n                i = 0;\n                if(num[key] >= 10){\n                    i = 1;\n                    num[key] %= 10;\n           }\n               key--;\n           }\n       \n       if(i) num.insert(num.begin(),1);\n       return num;\n       //如果num的长度大于k，那到这里就结束了\n    }\n};\n```\n\n**复杂度分析**\n\n时间复杂度：O(max(numlen,klen))  (numlen为num的长度，klen为k的长度)；\n\n空间复杂度：O(max(numlen,klen))","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"devil-lin":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991836687","body":"```\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        vector<int> res;\n\n        int n = num.size();\n        for(int i = n - 1; i >= 0 || k; i --)\n        {\n            if(i >= 0)\n                k += num[i];\n            res.push_back(k % 10);\n            k /= 10;\n        }\n\n        reverse(res.begin(), res.end());\n\n        return res;\n    }\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"spacker-343":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991838535","body":"### 思路\r\n\r\n首先得想法是把两个数加起来，再依次取出个位，添加进结果中，但是这样会溢出。\r\n于是选择从后往前遍历数组，末尾数字相加后添加进结果集中，同时判断一下有没有进位。\r\n最后还要看看 k 和进位等于 0 没有，如果没有还要继续添加进结果集中。\r\n添加数字时，要保证顺序，所以每次插入在数组开头，也就是 0 的索引位置，使用 LinkedList 而不是 ArrayList 会提升插入的性能\r\n\r\n### 代码\r\n\r\n\r\n```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res=new LinkedList<>();\r\n        int carry=0;\r\n        for(int i=num.length-1; i>=0; i--){\r\n            int sum=0;\r\n            sum=num[i]+k%10+carry;\r\n            k/=10;\r\n            carry=sum/10 > 0 ? 1:0;\r\n            sum%=10;\r\n            res.add(0, sum);\r\n        }\r\n        while(k!=0){\r\n            int sum=k%10+carry;\r\n            carry=sum/10 > 0 ? 1:0;\r\n            sum%=10;\r\n            k/=10;\r\n            res.add(0, sum);\r\n        }\r\n        if(carry!=0){\r\n            res.add(0, 1);\r\n        }\r\n        return res;\r\n    }\r\n}\r\n```\r\n\r\n**复杂度分析**\r\n- 时间复杂度：O(N)\r\n- 空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"de0002ou":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991842436","body":"### 思路\n\n把数字转换成数组，对应位相加传入新数组，考虑进位情况\n\n### 代码\n\n\n```python（此处换成你的语言，比如js，py 等）\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        list_k = []\n        while k > 0:\n            temp = k%10\n            list_k.insert(0,temp)\n            k-=temp\n            k/=10\n        res = []\n        add_up = 0\n        while list_k and num:\n            i = list_k.pop()+num.pop()\n            if i+add_up< 10:\n                res.insert(0,int(i+add_up))\n                add_up = 0\n            else:\n                res.insert(0,int(i-10+add_up))\n                add_up = 1\n        while list_k and not num:\n            i = list_k.pop()\n            if i+add_up< 10:\n                res.insert(0,int(i+add_up))\n                add_up = 0\n            else:\n                res.insert(0,int(i-10+add_up))\n                add_up = 1\n        while num and not list_k:\n            i = num.pop()\n            if i+add_up< 10:\n                res.insert(0,int(i+add_up))\n                add_up = 0\n            else:\n                res.insert(0,int(i-10+add_up))\n                add_up = 1\n        while not num and not list_k:\n            if add_up == 1:\n                res.insert(0,1)\n            return res\n\n```\n\n**复杂度分析**\n- 时间复杂度：O(N)，其中 N 为数组长度，需要遍历整个数组。\n- 空间复杂度：O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"judyzhou95":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991842636","body":"### 思路\n\n先把k与个位相加。从低到高逐位检查是否大于等于十。如果是，则算出carry on (n // 10) 并加入到前一位，以及当前位保留的值 (n %= 10)。到了最高位如果还大于等于10 则需要在前面手动增加位数，并继续进行计算carry on 和保留值。\n\n### 代码\n\n\n```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        num[-1] += k\n        \n        i = len(num) - 1\n        \n        while i > 0 and num[i] > 9:\n            num[i-1] += num[i] // 10\n            num[i] %= 10\n            i -= 1\n            \n        while num[0] > 9:\n            num = [num[0] // 10] + num\n            num[1] = num[1] % 10\n            \n        return num\n        \n ```\n### 复杂度\nTime Complexity: O(len(num)) \n\nSpace Complexity: O(1)\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"blankpathfind":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991843440","body":"### 思路\n\nv1\n笨方法，先把list转成字符串，字符串转成int，相加之后结果转字符串，字符串拆开成list，害\n\n### 代码\n\n\n```\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        num = [str(i) for i in num]\n        num = \"\".join(num)\n        num = int(num)\n        num = str(num+k)\n        num = [int(i) for i in num]\n        return num\n\n\n```\n\n**复杂度分析**\n- 时间复杂度：O(N)，其中 N 为数组长度。\n- 空间复杂度：O(N)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tangjy149":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991843767","body":"### 思路\n我是从末位数的方面来考虑，因为需要进行整数的加法，那么k+arr[len-1]%10的值一定是最终和的末位数，那么便从数组的最后一位开始遍历，与k进行相加并取模放入ans数组（因为是从末尾开始，因此需要insert插入到ans的首位）\n\n### Code\n```c++\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        vector<int> ans;\n        int len = num.size()-1;\n        for(int i=len;i>=0;i--){\n            k=k+num[i];\n            ans.insert(ans.begin(),k%10);\n            k/=10;\n        }\n        // 此处的处理是为了防止k过大的情况\n        if(k){\n            while(k>9){\n                ans.insert(ans.begin(),k%10);\n                k/=10;\n            }\n            ans.insert(ans.begin(),k);\n        }\n        return ans;\n    }\n};\n```\n\n### 复杂度分析\n时间复杂度：O(n)（主要花销在遍历)  \n\n空间复杂度：O(n)(开辟了新的数组用于存储结果)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lannyx":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991846050","body":"### 思路\r\n\r\niterate the array and integer from right to left, sum up and store in the ArrayList.\r\nuse a carry variable to store the tens.\r\nreverse the ArrayList in the end.\r\n\r\n### 代码\r\n\r\n\r\n```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        int len = num.length - 1;\r\n        List<Integer> res = new ArrayList<>();\r\n        int carry = 0;\r\n\r\n        while(len >= 0 || k != 0){\r\n            int x = len < 0 ? 0 : num[len];\r\n            int y = k == 0 ? 0 : k % 10;\r\n\r\n            int sum = carry + x + y;\r\n            res.add(sum % 10);\r\n            carry = sum / 10;\r\n            \r\n            len--;\r\n            k = k / 10;\r\n        }\r\n\r\n        if (carry > 0) res.add(1);\r\n\r\n        Collections.reverse(res);\r\n        return res;\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n**复杂度分析**\r\n- 时间复杂度：O(N)，其中 N 为数组长度。\r\n- 空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"nweass":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991846310","body":"## 思路\n\n考虑到需要进位，需要的位数可能发生变化，新增一个List储存结果\n\n双指针遍历两个整数，使用一个add记录进位\n\n类似题目有大数加减法\n\n## 代码\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        int i = num.length - 1;\n        int j = 0;\n        int add = 0;\n        ArrayList<Integer> resList = new ArrayList<>();\n        while(i >= 0 || k > 0 ||add != 0){\n            int x = i < 0 ? 0 : num[i];\n            int y = k == 0 ? 0 : k % 10;  \n\n            int result = x + y + add;\n            add = result /10;\n            resList.add(result % 10);\n            i--;\n            k = k / 10;\n        }\n        Collections.reverse(resList);\n        return resList;\n    }\n}\n```\n\n## 复杂度分析\n\n空间：使用了一个新建List保存结果，List大小为num[]或k的位数 O(n)\n\n时间：遍历一遍num[] 长度n或k的位数m中最大的一个，O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yugaoh":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991848642","body":"class Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        int carry  = 0;//进位\n        int i = num.size() - 1;\n        vector<int> vec;\n\n        while(i >= 0 || k != 0)\n        {\n            int n1 = i >= 0 ? num[i] : 0;\n            int n2 = k >= 0 ? k % 10 : 0;\n\n            int value = n1 + n2 + carry;\n            vec.push_back(value % 10);\n            carry = value / 10;\n\n            --i;\n            k = k / 10;\n        }\n\n        if(carry != 0)\n            vec.push_back(carry);\n        \n        reverse(vec.begin(), vec.end());\n\n        return vec;\n    }\n};","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dahaiyidi":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991849235","body":"## Question\n\nhttps://leetcode-cn.com/problems/add-to-array-form-of-integer/\n\n对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1,2,3,1]。\n\n给定非负整数 X 的数组形式 A，返回整数 X+K 的数组形式。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/add-to-array-form-of-integer\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n### Note\n\n- 思路不难：将数字从最后一位开始计算加法\n- 注意进位\n- 注意有一方先遍历完毕的情况\n\n### Complexity\n\n- 时间O：max(n, logk)\n- 空间O：1 (返回值不计算在内)\n\n## Python\n\n```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        res = []\n        \n        for i in  range(len(num) - 1, -1, -1):\n            add = num[i] + k % 10  # k包含进位信息\n            k = k // 10\n\n            if add >= 10:\n                add -=10\n                k += 1 # 将进位1加到k上\n\n            res.append(add % 10)\n\n        # 若k不是零\n        while k != 0:\n            res.append(k % 10)\n            k = k // 10\n        \n        return res[::-1]\n```\n\n## C++\n\n```C++\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        vector<int> res;\n        for(int i = num.size() - 1; i >= 0; i--){\n            int add = num[i] + k % 10;\n            k /= 10;\n            if (add >= 10){\n                k++;\n                add = add - 10;\n            }\n\n            res.push_back(add % 10);\n        }\n        while (k != 0){\n            res.push_back(k % 10);\n            k /= 10;\n        }\n        reverse(res.begin(), res.end());\n        return res;\n    }\n};\n```\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"liuzekuan":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991849933","body":"思路\n1 定义常量n，同时遍历两个数组，从末尾开始遍历，条件是两个指针的索引同时大于等于0， 将对应索引上的值相加再加上n与10取模值， 取模结果记入集合中，整除结果赋值给n\n\n2 1的循环跳出，说明此时其中一个数组已经到头了，遍历当前索引大于0的数组，将当前的索引的值 加上n 添加到集合，剩下的值依次加入到集合，循环结束，输出结果。 3.最后一个输出的数若取整为1要进一位。\n\n关键点\n循环的条件，取模，取整 集合容器的选取：方便从头部插入数据的集合，链表 边界问题：最后一个输出的数若取整为1要进一位\n\n代码\n语言支持：Java\nJava Code:\n\n\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        //选取Linked集合从头部插入数据\n        LinkedList<Integer> linkedList =new LinkedList<>();\n        //定义常量n,记整除结果\n        String kStr=\"\"+k;\n        int n=0;\n        int i=num.length-1;\n        int j=kStr.length()-1;\n        while(i>=0&&j>=0){\n            int temp=num[i]+Integer.valueOf(\"\"+kStr.charAt(j));\n            //将对应索引上的值相加再加上n与10取模值， 取模结果记入集合中，整除结果赋值给n\n            linkedList.addFirst((temp+n)%10);\n            n=(temp+n)/10;\n            i--;\n            j--;\n        }\n        //说明k已经遍历完，单独遍历剩下的数据\n        while(i>=0){\n            //将对应索引上的值加上n与10取模值， 取模结果记入集合中，整除结果赋值给n\n            linkedList.addFirst((num[i]+n)%10);\n            n=(num[i]+n)/10;\n            i--;\n        }\n        //说明num已经遍历完，单独遍历剩下的数据\n        while(j>=0){\n            //将对应索引上的值加上n与10取模值， 取模结果记入集合中，整除结果赋值给n\n            linkedList.addFirst((Integer.valueOf(\"\"+kStr.charAt(j))+n)%10);\n            n=(Integer.valueOf(\"\"+kStr.charAt(j))+n)/10;\n            j--;\n        }\n        //边界问题，最后一个存在数值进1\n        if(n==1){\n            linkedList.addFirst(1);\n        }\n        return linkedList;\n    }\n}\n\n复杂度分析\n\n令 n 为数组长度。\n\n时间复杂度：O(n)  n为两个数组中较长的长度\n空间复杂度：O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alfie100":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991850071","body":"\n### 最低位相加模拟\n\n#### 思路\n模拟加法：A + k\n\n`当前位 = （A的当前位 + k） % 10`\n\n`当前位的进位 = （A的当前位 + k） // 10`\n\n这样可将 k 整体看作为进位，省略了变量carry\n\n#### 代码[Python]\n```Python []\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n\n        res = []\n        while num or k:     # 若num未遍历完，【或】k未遍历完（k>0）\n            x = (num.pop() if num else 0) + k   # 若num未遍历完，pop一下；否则，设为0\n            k = x // 10\n            res.append(x%10)\n        \n        return res[::-1]\n```\n\n**复杂度分析**\n- 时间复杂度：$O(\\max(n, \\log k))$，其中 $n$ 为数组长度。\n- 空间复杂度：$O(\\max(n, \\log k))$，其中 $n$ 为数组长度。开辟了新的存储空间。\n","onTime":true},{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/2#issuecomment-991929448","body":"### 正向遍历 + 反向遍历\r\nLeetCode 原题连接：[821. 字符的最短距离](https://leetcode-cn.com/problems/shortest-distance-to-a-character/)\r\n### 思路\r\n对于每个字符 s[i] 找出其距离左边及右边下一个目标字符 C 的距离，左右距离中的较小值即为答案。\r\n\r\n`从左往右遍历：`\r\n假设上一个 C 出现的位置为 pre，则当前 i 位置的字符距离 $C$ 的距离为 i-pre （pre <= i）；\r\n\r\n`从右往左遍历：`\r\n假设上一个 C 出现的位置为 pre，则当前 i 位置的字符距离 C 的距离为 pre-i （i <= pre）；\r\n\r\n\r\n### 代码 【Python】\r\n\r\n```python []\r\nclass Solution:\r\n    def shortestToChar(self, s: str, c: str) -> List[int]:\r\n\r\n        n = len(s)\r\n        ans = []\r\n\r\n        # 正序遍历\r\n        pre = -n    # 设为较小的 -n 即可（距离的最大值不可能超过n）\r\n        for (i, ch) in enumerate(s):\r\n            if ch == c:\r\n                pre = i\r\n            ans.append(i-pre)\r\n\r\n        # 逆序遍历\r\n        pre = 2*n   # 设为较大的 2*n 即可（距离的最大值不可能超过n）\r\n        for i in range(n-1, -1, -1):\r\n            if s[i] == c:\r\n                pre = i\r\n            ans[i] = min(ans[i], pre-i)\r\n        \r\n        return ans\r\n\r\n```\r\n\r\n\r\n\r\n**复杂度分析**\r\n\r\n- 时间复杂度：O(n)，其中 n 为字符 s 长度。\r\n\r\n- 空间复杂度：O(n)。\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ryan0218":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991850174","body":"class Solution {\n\npublic List addToArrayForm(int[] num, int k)\n {\n\nList res = new ArrayList();\n\nint n = num.length;\n\nfor (int i = n-1; i >= 0; --i)\n{\n\nint sum = num[i] + k % 10;\n\nk /= 10;\n\nif (sum >= 10)\n{\n\nk ++;\n\nsum -= 10;\n}\n\nres.add(sum);\n}\n\n\nfor (; k > 0; k /= 10)\n{\n\nres.add(k % 10);\n}\n\nCollections.reverse(res);\n\nreturn res;\n}\n}\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wodong0012":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991850483","body":"判断k是否倒序遍历数组，在与k % 10 相加 之后在将k /10 ， 在判断结果>10 ，++k并且将结果-10，在存入数组中\n同时k的位数会大于数组长度，需要加一个循环插入大于的数据\n\n```c++\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        vector<int> results = vector<int>();\n        int listSize = num.size();\n        int temp;\n        for (int i = listSize - 1; i >= 0; i--)\n        {\n            if (k != 0)\n            {\n                temp = num[i] + k % 10;\n                k /= 10;\n                if (temp >= 10)\n                {\n                    ++k; // 进位\n                    temp -= 10;\n                }\n            }\n            else\n            {\n                temp = num[i];\n            }\n            results.push_back(temp);\n        }\n        while (k > 0)\n        {\n            results.push_back(k % 10);\n            k /= 10;\n        }\n\n        reverse(results.begin(), results.end());\n\n        return results; \n    }\n\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"junbuer":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991851273","body":"思路\n\n逐位相加，每次记录进位carry，直到k和num的每一位数都处理完，最后反转结果数组\n\n代码\n\n    class Solution(object):\n        def addToArrayForm(self, num, k):\n            \"\"\"\n            :type num: List[int]\n            :type k: int\n            :rtype: List[int]\n            \"\"\"\n            i = len(num) - 1\n            n = []\n            carry = 0\n            while k or (i >= 0) or carry:\n                if i >= 0:\n                    sum_ = num[i] + k % 10 + carry\n                else:\n                    sum_ = k % 10 + carry\n                n.append(sum_ % 10)\n                carry = sum_ // 10\n                k //= 10\n                i -= 1\n            n.reverse()\n            return n\n\n复杂度\n\n+ 时间复杂度 (max(n,  len(k)))\n+ 空间复杂度 O(n)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lonkang":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991852775","body":"// 使用BigInt偷个懒\n```js\nvar addToArrayForm = function(A, K) {\n  let N = '';\n  A.forEach( e =>{\n    N = N+e\n  })\n\n  return String(BigInt(N) + BigInt(K)).split('').map(e => Number(e))\n};\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wbcz":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991853411","body":"1.数组A转换成整数，\n2.A和K再求和\n3.每位数分开\n4.再生成新数组\n\nJavaScript:\n\nConst getNewSum =（A，K）=>{\n  return（Number（ A.join（，））+K).split（，）\n}\n\n时间复杂度  O(n)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aakk474548":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991855322","body":"## 思路\n\n#### 这不就是数组转成字符串加完再转成数组吗？<br/>\n\n结论：大整数算不了。估计这就是题的意义之一，大整数如何存储和加减运算\n\n#### 两层循环，从后向前逐位比。<br/>\n\n结论：想想觉得蠢，应该不至于。\n\n#### 看题解看一半<br/>\n\n思路偷到了：从num的最后一位开始加，加完了个位存起来，突突突接着往前加。<br/>\n脑子： ‘我会了‘，手：’你会个屁‘。\n\n#### 遇到几个问题再看题解之后再来<br/>\n\n- 边界：边界是num的长度或k的长度，两者共同决定循环次数，也就是最终数组长度。k.length>num.length时，得把k一位一位补完，k.length<num.length时要把num一位一位补完。<br/>\n- k的变化：全程就是对k的相加、取值和算出下一个k。相加就是num遍历结束前，k每次要和num[i]相加。取值就是k相加完取出个位。下一个k就是 除10 取整。<br/>\n- 空间：能不能不多创建那个数组。好像不能，原数组操作，向数组头添加，会增加时间复杂度。<br/>\n- 提示：提示真有用啊。再看提示其实就明白了，1就是两个正经整数，2 按位加的时候你放心做加法，没想着在这再坑你一道。\n\n## 代码\n\n```javascript\nvar addToArrayForm = function(num, k) {\n    const n = num.length;\n    const res = []\n    for(let i = n - 1; i >=0 || k != 0; i--){\n        if(i >=0){\n        \t// 相加\n            k += num[i]            \n        }\n        // 取值\n        res.push(k % 10)\n        // 下一个k\n        k = Math.floor(k / 10)\n    }\n    res.reverse()\n    return res\n};\n```\n\n## 复杂度\n时间:   O(n) <br/>\n空间:   O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wujunhong-max":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991855361","body":"## 思路\n1. 逐位相加，将数组的每一位和整数的每一位相加，若得到的数大于等于10，则进位\n2. 将得到的数放进新数组中，转置数组\n## 代码\n\n```cpp\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n\n    vector<int> num1;\n    int n= num.size();\n    for(int i = n-1; i>=0; i--)  // vector数组是从左往右的，num[0]是最左边的数\n    {\n        int sum = num[i]+k%10;  // 逐位相加\n        k /= 10;\n        if(sum>=10)\n        {\n            k++;\t\t\t// 进位加1\n        }\n        num1.push_back(sum%10);\n        sum = 0;\n    }\n    while(k>0)\t\t// 考虑整数k比数组 位数多 的情况\n    {\n        num1.push_back(k%10);\n        k /= 10;\n    }\n    reverse(num1.begin(), num1.end());  // 数组反转\n    return num1;\n    }\n};\n```\n\n## 复杂度\n\n时间复杂度：O(n)\n\n空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pengfeicchen":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991857243","body":"class Solution {\n    public List<Integer> addToArrayForm(int[] num, int K) {\n        List<Integer> res = new LinkedList<>();\n        for (int i = num.length - 1; i >= 0; --i) {\n            res.add(0, (num[i] + K) % 10);\n            K = (num[i] + K) / 10;\n        }\n        while (K > 0) {\n            res.add(0, K % 10);\n            K /= 10;\n        }\n        return res;\n    }\n}","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"stonehit":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991858521","body":"## 思路\r\n逐位相加，记录进位，计算后头插到结果数组\r\n\r\n## 代码\r\n```java\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res = new ArrayList<>();\r\n        int carry = 0;\r\n        for(int i = num.length - 1;i >= 0 || k > 0;i--){\r\n            int dec = (k % 10) + carry;\r\n            dec += i >= 0 ? num[i] : 0;\r\n            k = k / 10;\r\n            carry = 0;\r\n            if(dec >= 10){\r\n                carry = 1;\r\n                dec = dec % 10;\r\n            }\r\n            res.add(0,dec);\r\n        }\r\n        if(carry != 0)  res.add(0,1);\r\n        return res;\r\n    }\r\n\r\n\r\n}\r\n```\r\n## 复杂度\r\n空间O(N)\r\n时间O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ggohem":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991860708","body":"### 思路：\n\n将对应元素从个位起往前依次相加，当有进位时，需要考虑进位，这里我为了方便使用了链表的数据结构，把数组num和k都放到了两个链表上，依次遍历两个链表，并把结果存在一个新的链表上\n\n### 代码：\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        LinkedList<Integer> list1 = new LinkedList<>();\n        LinkedList<Integer> list2 = new LinkedList<>();\n        LinkedList<Integer> list3 = new LinkedList<>();\n        for (int i : num) {\n            list1.addLast(i);\n        }\n        while (k != 0) {\n            list2.addFirst(k % 10);\n            k /= 10;\n        }\n        int carried = 0;\n        while (list1.size()!=0||list2.size() != 0 || carried != 0) {\n            int n1 = list1.size() != 0 ? list1.removeLast() : 0;\n            int n2 = list2.size() != 0 ? list2.removeLast() : 0;\n            int sum = n1 + n2 + carried;\n            int inser = sum % 10;\n            carried = sum / 10;\n            list3.addFirst(inser);\n        }\n        return list3;\n    }\n}\n```\n\n### 时空复杂度：\n\n- 时间复杂度： O(max(n,len(k)) \n- 空间复杂度：O(n)\n- 这里不是很会分析\n\n\n\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bigboom666":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991861963","body":"### 思路\n- k转为数组，处理两个数组的相加。\n- 双指针移动计算两个数组，标志位处理进位，结果存入stack，最后转为list\n\n### 代码\n```java\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        int[] numK = intToArray(k);\n        int a = num.length - 1;\n        int b = numK.length - 1;\n        boolean isUp = false;\n        Stack<Integer> stack = new Stack();\n        List<Integer> list = new LinkedList();\n        while(a>=0 || b>=0 || isUp){\n            int result = 0;\n            if(isUp){\n                result = 1;\n                isUp = false;\n            }\n            if(a <0 && b<0){\n                //result += 0;\n            }else if(a <0){\n                result += numK[b];\n            }else if(b <0){\n               result += num[a];\n            }else{\n                result += num[a] + numK[b];\n            }\n            a--;\n            b--;\n\n            if(result >= 10){\n                isUp = true;\n            }\n            stack.push(result % 10);\n            System.out.print(\"stack: [\");\n            System.out.print( result % 10);\n            System.out.print(\"]\");\n        }\n\n        while(!stack.isEmpty()){\n            list.add(stack.pop());\n        }\n        return list;\n    }\n\n    public int[] intToArray(int k) {\n        System.out.print(\"intToArray: [\");\n        String temp =  String.valueOf(k);\n        int[] result = new int[temp.length()];\n        for(int i=0; i<temp.length(); i++){\n            result[i] = Integer.parseInt(String.valueOf(temp.charAt(i)));\n             System.out.print(result[i]);\n        }\n        System.out.print(\"]\");\n        return result;\n    }\n```\n\n### 复杂度\nO(3n)  O(2n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"darkpmm":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991863806","body":"class Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n        int len=num.size();\n        vector<int> ans;\n        for(int i=len-1 ; i>=0 ; --i){\n            int sum = num[i]+k%10;\n            k = k/10;\n            if(sum>=10){\n                sum = sum%10;\n                k++;\n            }\n            ans.push_back(sum);\n        }\n        while(k>0){\n            ans.push_back(k%10);\n            k=k/10;\n        }\n        reverse(ans.begin(),ans.end());\n        return ans;\n    }\n};","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"pf135145":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991864094","body":"### 思路\r\n\r\n因为js在大数计算时有精度问题，因此把每一位单独计算\r\n\r\n把k转化成数组方便计数\r\n\r\n在这里为了方便所以把数组反转了\r\n\r\n考虑首位可能会出现进位问题再单独处理下\r\n\r\n\r\n### 代码\r\n\r\n``` javascript\r\nvar addToArrayForm = function(num, k) {\r\n  let over = false;\r\n  let kArr = k.toString().split('');\r\n  let index = 0;\r\n  let newArr = [];\r\n  num.reverse();\r\n  kArr.reverse();\r\n  while (index < num.length || index < kArr.length) {\r\n      let i = num[index] || 0\r\n      let k = Number(kArr[index]) || 0\r\n      let res = i + k\r\n      if (index > 0 && over) {\r\n          res += 1\r\n      }\r\n      if (res >= 10) {\r\n          over = true;\r\n          newArr.push(res - 10)\r\n      } else {\r\n          over = false;\r\n          newArr.push(res)\r\n      }\r\n      index ++\r\n  }\r\n  if (over) newArr.push(1);\r\n  return newArr.reverse()\r\n};\r\n\r\n```\r\n\r\n### 复杂度\r\n\r\n时间复杂度： o(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luhnn120":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991865405","body":"### 思路\n逐位相加的思路，记录进位数。遍历完k和数组，遍历过程中，数组超出范围时，以0代替当次累加。遍历完毕后，如果存在进位，则将进位数增加到首部。\n### 代码\n```\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function(num, k) {\n  let i = num.length - 1, carry = 0,res = [];\n  while (i >= 0 || k > 0) { \n    let sum = ( i < 0 ? 0 : num[i] ) + k%10 + carry;\n    if (sum >= 10) {\n      carry = 1;\n      sum = sum % 10;\n    } else { \n      carry = 0\n    }\n    res.push(sum)\n    i--;\n    k = parseInt(k/10)\n  }\n  if (carry === 1) { \n    res.push(carry)\n  }\n  return res.reverse();\n};\n```\n### 复杂度\n时间复杂度：O(MAX(M,N)) M 数组长度，N k长度\n\n空间复杂度：O(MAX(M,N)) M 数组长度，N k长度","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"demo410":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991866798","body":"#### 思路\r\n\r\n* 从后往前遍历num数组，同时通过取余获得K的最后一位数，将两个数相加，注意进位。如果两个数的位数不一致，通过补0来继续相加。\r\n\r\n#### 代码\r\n\r\n```java\r\npublic static List<Integer> addToArrayForm(int[] num, int k) {\r\n        Stack<Integer> result = new Stack<>();\r\n        List<Integer> finalResult = new ArrayList<>();\r\n        int l = num.length;\r\n        boolean carry  = false;\r\n\r\n        while (l != 0 || k != 0){\r\n            int a = 0, b = k % 10;\r\n\r\n            if(l != 0) a = num[--l];\r\n\r\n            k /= 10;\r\n\r\n            int c = a + b;\r\n\r\n            if(carry) {\r\n                c += 1;\r\n                carry = false;\r\n            }\r\n\r\n            if(c >= 10) carry = true;\r\n            result.push(c % 10);\r\n        }\r\n\r\n        if (carry) result.push(1);\r\n        while (!result.empty()) finalResult.add(result.pop());\r\n        return result;\r\n    }\r\n```\r\n\r\n#### 复杂度\r\n\r\n* 时间复杂度：时间复杂度主要取决于数组的长度N和K的位数，即O(max(N, len(k)))\r\n* 空间复杂度：O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"didiyang4759":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991867259","body":"思路：\r\nA 的当前位 + B 的当前位 + 进位， 最后判断是否还有进位\r\n\r\n```\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] A, int K) {\r\n        int n = A.length;\r\n        List<Integer> res = new ArrayList<>(); \r\n        int i = n - 1, sum = 0, carry = 0;\r\n        while (i >= 0 || K != 0) {  \r\n            int x = i >= 0 ? A[i]: 0;\r\n            int y = K != 0 ? K % 10 : 0;              \r\n            sum = x + y + carry;\r\n            carry = sum / 10;\r\n            K = K / 10;\r\n            i--;\r\n            res.add(0, sum % 10);\r\n        }\r\n        if (carry != 0) res.add(0, carry);\r\n        return res;\r\n    }\r\n}\r\n```\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzrebas":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991867485","body":"# Day 1-[989. 数组形式的整数加法](https://leetcode-cn.com/problems/add-to-array-form-of-integer/)\n\n## 思路\n遍历数组A，取出每个元素转换为字符串，再拼在一起，然后转为int整形，再与整数K相加，得出的结果再转为字符串，再遍历每一个元素输出到新的数组中。\n\n\n## 代码(python)\n```python\ndef fun(A,K):\n    a=''.join(str(x) for x in A)\n    b=int(a)+K\n    out=[]\n    for i in str(b):\n        out.append(int(i))\n    print(out)\n\nA = [1,2,0,0]\nK = 34\nfun(A,K)    #[1, 2, 3, 4]\nfun(A = [2,7,4], K = 181)   #[4, 5, 5]\nfun(A = [2,1,5], K = 806)   #[1, 0, 2, 1]\nfun(A = [9,9,9,9,9,9,9,9,9,9], K = 1)   #[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n```\n\n## 复杂度\n**时间复杂度：** O(n)，n为数组A的长度。\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hacker90":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991868483","body":"\n思路：\n-\n按位相加，长度先以已知数组为标准处理\n\n\n代码\n-\nclass Solution {\npublic:\n    vector<int> addToArrayForm(vector<int>& num, int k) {\n       \n  \n       int i = 0;\n       int sum = 0;\n       vector<int> res;\n       if(k == 0)return num;\n       for(i = num.size()-1;(i>=0);--i)\n       {\n           sum = num[i] + k%10;\n           k = k/10;\n           if(sum >= 10 ){\n               k = k + 1;\n               sum = sum - 10;\n           }\n           res.push_back(sum);\n       }\n        for(;k>0;k = k/10) {\n    \n               res.push_back(k%10);\n          \n        }\n        reverse(res.begin(),res.end());\n       return res;\n    }\n};\n\n\n复杂度分析\n-\n\n空间复杂度：O(n)\n\n\n时间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alvinzhouoops":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991869153","body":"如果直接在数组A上做加法和进位，如果和的长度大于A，需要在A前面插入元素，在数组中不太好实现，所以还是要用新的数组来存放。\npython\nclass Solution{\n    def AddListAndInt(int[] A, int K):\n        n = len(A)\n        sum = A[0]\n        for i in range(1, n):\n            sum += sum*10 + A[i]\n       sum = sum + K\n       tem = []\n       while(sum > 0):\n           item = sum%10\n           tem.append(item)\n           sum = sum//10\n       return tem[::-1]\n     \n}","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fredxxj":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991869799","body":"# 用python处理起来非常简单，先试试\n\n```\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n        n = 0\n        for i in num:\n            n = n * 10 + i\n        n += k\n        return [int(ch) for ch in str(n)]\n```\n\n\n\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"chenyaohn":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991870273","body":"### 思路\n\n从n-1至0开始遍历A数组，将其与K对应位置上的进行累加（通过取余获取K各个位置上的值,K%10,(int)(k/10)），如大于等于10则需进位+1，flag为进位标志。\n当K位数大于A数组长度时，需将K的剩余位置的值也添加至结果集合中，同时也需要判断进位。\n最后当A数据与K全部遍历完毕后，如还有进位，则需于结果集合中再度添加1。\n\n### 代码\n\n\n```java\npublic List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> list = new ArrayList<Integer>();\n        boolean flag = false; // 判断是否需要进位+1\n        for (int i = num.length-1; i >=0 ; i--) {\n                if(k==0){\n                    int curValue = flag ? num[i]+1:num[i];\n                    flag = curValue>=10;\n                    list.add(flag?curValue-10:curValue);//进位则加1\n                }else {\n                    int n = k % 10;//k最后一位\n                    int curValue = flag ? num[i]+n+1:num[i]+n;\n                    flag = curValue>=10;\n                    list.add(flag ?curValue-10:curValue);\n                    k /= 10;\n                }\n            }\n\n        while (k!=0){//num数组已累加完毕，k未累加完毕\n            int n = k%10;//k最后一位\n            int curValue = flag ? n+1:n;\n            flag = curValue>=10;\n            list.add(flag?curValue-10:curValue);\n            k/=10;\n        }\n        //k已累加完毕，仍然需要进位，则结果list add 1（如9+1=10这种情况）\n        if(k==0&&flag){\n            list.add(1);\n        }\n        Collections.reverse(list);\n        return list;\n    }\n```\n\n**复杂度分析**\n- 时间复杂度：O(max(A,K))，其中 A 为数组A长度,k为k位数。\n- 空间复杂度：O(1)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"eliassama":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991872005","body":"## 整体思路\n\n整个题可以看作是一个纯粹的数字相加的题，因为不管是数字还是数组，都是有序。\n\n如1024这个数，不管是number类型的1024还是数组类型的 [1,0,2,4]都是一样的，不同的只是展现形式。\n\n所以这道题的关键点在于采用哪种形式进行计算，以及如何转换为最终要的数组形式。其实计算反而不重要。\n\n在解题时需要注意下溢出问题，这个题的测试用例是会有大数的，部分编程语言是不支持大数的 ( 如js的int32只支持18位以内的精确大数 ) ，所以计算要取巧。\n\n\n\n### 解题思路\n\n采用古老而笨拙的按位进制法，即以numArray作为遍历条件，从最低位到最高位依次与k的最低位到最高位进行相加。\n\n在相加的过程中有些东西需要注意：\n\n+ 因为每次相加都是单位数相加，所以最大的值为18 ( 9 + 9 )。而每个元素只能承载单位数，所以会向前进一，所以实际最大值为19 ( 9 + 9 + 1 )。但是这个数不会超过19。所以要考虑两点：\n  + 除了个位数外，如果上次相加的数有进位的，则每次相加时都要加上进位。\n  + 如果每次相加的结构需要进位的，需要记录在下一次相加时加上。\n+ 因为以numArray作为遍历条件，所以可能会出现下列两种情况从而导致溢出问题，需要考虑进去：\n  + k的值的位数可能会比numArray的位数大，比如[2,1]和3600。\n  + 两个数相加，最后要整体向前进一位，比如[9,9,9]和1\n\n\n\n#### 版本一\n\n##### Code\n\n```typescript\nfunction addToArrayForm(numArray: number[], k: number): number[] {\n\n    const KStr: string = String(k)\n    let numArrayIndex: number = numArray.length - 1\n    let KStrIndex: number = KStr.length - 1\n    let lastNum:number = 0\n\n    for(;numArrayIndex > -1; --numArrayIndex, --KStrIndex){\n        numArray[numArrayIndex] += (parseInt(KStr[KStrIndex]) || 0) + lastNum\n        lastNum = 0\n        if(numArray[numArrayIndex] > 9){\n            numArray[numArrayIndex] -= 10\n            lastNum = 1\n        }\n    }\n    \n    if(KStrIndex > -1){\n        let overflowStr: string = String(parseInt(KStr.substring(0, KStrIndex + 1)) + lastNum)\n        KStrIndex = overflowStr.length - 1\n        lastNum = 0\n        const overflowArray: number[] = []\n        for(;KStrIndex > -1; --KStrIndex){\n            overflowArray.push(parseInt(overflowStr[KStrIndex]))\n        }\n        overflowArray.reverse()\n        numArray = [...overflowArray,...numArray]\n    }\n\n    if(lastNum === 1){\n        numArray = [1,...numArray]\n    }\n\n    return numArray\n};\n```\n\n\n\n##### 复杂度分析\n\n- 时间复杂度：O(N)，其中 N 为 numArray 或 k 的最大长度。\n- 空间复杂度：O(N)，其中 N 为 numArray 加 k 的长度，并有可能会在此基础上 + 1。\n\n\n\n#### 版本二\n\n##### Code\n\n```typescript\nfunction addToArrayForm(numArray: number[], k: number): number[] {\n\n    const kArray: string[] = String(k).split(\"\")\n    let kIndex: number = kArray.length - 1\n    let nIndex: number = numArray.length - 1\n    const resultArray: number[] = []\n\n    let lastNum:number = 0\n    for(;kIndex > -1 || nIndex > -1 ; --kIndex, --nIndex){\n        let result = (parseInt(kArray[kIndex]) || 0) + (numArray[nIndex] || 0) + lastNum\n        lastNum = 0\n        if(result > 9){\n            result -= 10\n            lastNum = 1\n        }\n        resultArray.push(result)\n\n        if(kIndex <= 0 && nIndex <= 0 && lastNum === 1){\n            resultArray.push(1)\n        }\n\n    }\n    \n    return resultArray.reverse()\n};\n```\n\n\n\n##### 复杂度分析\n\n- 时间复杂度：O(N)，其中 N 为 numArray 或 k 的最大长度。\n- 空间复杂度：O(N)，其中 N 为 numArray 或 k 的最大长度，并有可能会在此基础上 + 1。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"noperoc":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991873365","body":"\n## 题目地址(989. 数组形式的整数加法)\n\nhttps://leetcode-cn.com/problems/add-to-array-form-of-integer/\n\n## 题目描述\n\n```\n对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1,2,3,1]。\n\n给定非负整数 X 的数组形式 A，返回整数 X+K 的数组形式。\n\n \n\n示例 1：\n\n输入：A = [1,2,0,0], K = 34\n输出：[1,2,3,4]\n解释：1200 + 34 = 1234\n\n\n示例 2：\n\n输入：A = [2,7,4], K = 181\n输出：[4,5,5]\n解释：274 + 181 = 455\n\n\n示例 3：\n\n输入：A = [2,1,5], K = 806\n输出：[1,0,2,1]\n解释：215 + 806 = 1021\n\n\n示例 4：\n\n输入：A = [9,9,9,9,9,9,9,9,9,9], K = 1\n输出：[1,0,0,0,0,0,0,0,0,0,0]\n解释：9999999999 + 1 = 10000000000\n\n\n \n\n提示：\n\n1 <= A.length <= 10000\n0 <= A[i] <= 9\n0 <= K <= 10000\n如果 A.length > 1，那么 A[0] != 0\n```\n\n## 前置知识\n\n- \n\n## 公司\n\n- \n\n## 思路\n- 模拟竖式 逐位相加  \n## 关键点\n\n-  最后一位剩余进位别忘了加\n\n## 代码\n\n- 语言支持：Java\n\nJava Code:\n\n```java\n\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        ArrayList<Integer> kk = new ArrayList<>();\n        while(k != 0){\n            int tmp = k % 10;\n            k = k / 10;\n            kk.add(0,tmp);\n        }\n        int ml = num.length;\n        int kl = kk.size();    \n        ArrayList<Integer> ans = new ArrayList<>();  \n        int flag = 0;\n        while(ml != 0 && kl != 0){\n            int tmp = num[ml-1] + kk.get(kl-1) + flag;\n            if(tmp >= 10){\n                flag = 1;\n                tmp -= 10;\n            }\n            else\n                flag = 0;\n            ans.add(0, tmp);\n            kl--;\n            ml--;\n        } \n        if(ml != 0){\n            for(int i = ml-1; i>=0 ; i--){\n                int tmp = num[i];\n                if(flag == 1){\n                    tmp++;\n                    flag = 0;\n                }\n                if(tmp == 10){\n                    tmp = 0;\n                    flag = 1;\n                }\n                ans.add(0, tmp);\n            }\n        }else if(kl != 0){\n            for(int i = kl-1; i>=0 ; i--){\n                int tmp = kk.get(i);\n                if(flag == 1){\n                    tmp++;\n                    flag = 0;\n                }\n                if(tmp == 10){\n                    tmp = 0;\n                    flag = 1;\n                }\n                ans.add(0, tmp);\n            }\n        }\n        if(flag == 1){\n            ans.add(0, 1);\n        }\n        return ans;\n    }\n}\n\n```\n\n\n**复杂度分析**\n\n令 n 为数组长度。\n\n- 时间复杂度：$O(n)$\n- 空间复杂度：$O(n)$\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"honeymeng-hub":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991874119","body":"//leetcode submit region begin(Prohibit modification and deletion)\n//遍历nums[]转化为数值，再遍历返回数组\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        //idea1 ： FAILED，java中int最大2^32-1,（10位数）\n//        long tmp = 0;\n//        for (int i = num.length - 1, r = 1; i >= 0; i--) {\n//            tmp += num[i] * r;\n//            r = r * 10;\n//        }\n//        tmp = tmp + k;\n//        //从数值里取出元素放入链表\n//        String s = Long.toString(tmp);\n//        //String s1 = Integer.toString();\n//        ArrayList<Integer> list = new ArrayList<>();\n//        for (int j = 0; j < s.length(); j++) {\n//            int c = (int)s.charAt(j);\n//            list.add(Integer.parseInt(s1.valueOf(s.charAt(j))));\n//        }\n//        return list;\n        //看完答案想法二：位运算，位置对象相加，进位加在上一位\n        //评论区发现：num[]末尾+k ，取末尾添加到链表再抛弃末尾\n        //时间复杂度：O（n）数组长度\n        //空间复杂度：O（n）\n        LinkedList<Integer> list = new LinkedList<>();\n        int len = num.length;\n        int lastNum = k;\n        int i = len -1;\n        while (i >= 0 || lastNum > 0) {\n            if (i >= 0) {\n                lastNum += num[i];\n            }\n            //取余放入链表\n            list.addFirst(lastNum % 10);\n            //看看有没有进位(有就迭代，无就是0还是迭代)\n            lastNum /= 10;\n            i--;\n        }\n        return list;\n    }\n}","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"shu-weiran":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991880602","body":"# 思路\n将K表示为数组，两个数组逐位相加。考虑进位。最后对数组取反。\n\n\n```\nclass Solution:\n    def addToArrayForm(self, A: List[int], K: int) -> List[int]:\n        K = list(map(int,str(K)))\n        \n        res = []\n        i,j = len(A)-1,len(K)-1\n        carry = 0\n\n        while i >= 0 and j >= 0:\n            res.append(A[i] + K[j] + carry)\n            res[-1],carry = res[-1] % 10, res[-1] // 10\n            i -= 1\n            j -= 1\n        while i >= 0:\n            res.append(A[i] + carry)\n            res[-1],carry = res[-1] % 10, res[-1] // 10\n            i -= 1\n        while j >= 0:\n            res.append(K[j] + carry)\n            res[-1],carry = res[-1] % 10, res[-1] // 10\n            j -= 1\n\n        if carry:\n            res.append(1)\n\n        return res[::-1]\n```\n\n# 时间复杂度O(n)\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"bryanmiracle":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991882687","body":"### 思路\r\n将数组和 k的对应项从右至左以此相加，进位时carry + 1；\r\n### 代码\r\n```\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res = new ArrayList<>();\r\n        int carry = 0;\r\n        int l1 = num.length - 1;\r\n\r\n        while (l1 >= 0 || k != 0) {\r\n            int x = l1 < 0 ? 0 : num[l1];\r\n            int y = k == 0 ? 0 : k % 10;\r\n\r\n            int sum = x + y + carry;\r\n            res.add(sum % 10);\r\n            carry = sum / 10;\r\n            l1--;\r\n            k = k / 10;\r\n        }\r\n        if (carry != 0) res.add(carry);\r\n        Collections.reverse(res);\r\n        return res;\r\n\r\n    }\r\n}\r\n```\r\n### 复杂度分析\r\n**时间复杂度：O(N)**\r\n**空间复杂度：O(1)**","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"riuusee":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991883145","body":"### 思路\n\n模拟一位位相加，处理进位，处理被加数、加数为0的情况\n\n### 代码\n\n```java\npublic class Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> result = new ArrayList<Integer>();\n        int c = 0;  //进位\n        for (int i = num.length-1; i >= 0; i--) {   //倒着一位位相加\n            int a = num[i] + k%10 + c;\n            if (a > 9){\n                c = 1;\n                a -= 10;\n                if (i == 0 && (k/10 == 0)){ //存在进位且加数为0\n                    result.add(a);\n                    result.add(1);\n                    break;\n                }\n            }else {\n                c = 0;\n            }\n            result.add(a);\n            k /= 10;\n            while (i==0 && k > 0){ //被加数为0加数不为0\n                int b = k%10 + c;\n                if (b > 9){\n                    if(b==10 && (k/10 == 0)){ //进位\n                        result.add(0);\n                        result.add(1);\n                        break;\n                    }\n                    b -= 10;\n                    c =1;\n                }else {\n                    c = 0;\n                }\n                result.add(b);\n                k /= 10;\n            }\n        }\n        Collections.reverse(result);  //反转\n        return result;\n    }\n}\n```\n\n**复杂度分析**\n\n- 时间复杂度: O(N)\n- 空间复杂度: O(N)\n\n\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kevinworkspace":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991884524","body":"```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        LinkedList<Integer> list = new LinkedList<>();\n        int i = num.length - 1;\n        int x = 0;\n        int add = 0;\n        while (i >= 0 || k > 0 || add == 1) {\n            if (i >= 0) x = num[i];\n            else x = 0;\n            int res = (x + k % 10 + add) % 10;\n            add = (x + k % 10 + add) / 10;\n            list.addFirst(res);\n            i --;\n            k /= 10;\n        }\n        return list;\n    }\n}\n```\n时间复杂度: O(N)\n空间复杂度: O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"luo-frontend":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991887936","body":"JavaScript\r\n思路：\r\n1、遍历数组，从高到低，每项加上K\r\n2、如果res >= 10, 将 k % 10，得到个位保留在num得当前下标，并计算Math.floot(k% 10),得到除个位外的数值res2\r\n例如 num = [1,2,3,4], k= 1234\r\n第一次循环：num[3] === 4, 4 + 1234 = 1238\r\nk% 10 = 8，push到新数组\r\nMath.floot(k% 10) = 123\r\n令k= 123，继续循环\r\n第二次循环：num[2] === 3, 3 + 123 = 126 \r\nk% 10 = 6，push到新数组\r\nMath.floot(k% 10) = 12\r\n令k= 12，继续循环\r\n...\r\n最后得到数组[2,4,6,8]\r\n需要注意的是，这里继续循环的条件不一定循环完整个数组，而是，循环完整个数据或循环完k，即 i >= 0  || k > 0\r\n因为k不一定是和数组的length相同，当满足上面两个条件中的一个即可以继续循环\r\n```\r\nvar addToArrayForm = function(num, k) {\r\n    const res = [];\r\n    const n = num.length;\r\n    for (let i = n - 1; i >= 0 || k > 0; --i, k = Math.floor(k / 10)) {\r\n        if (i >= 0) {\r\n            k += num[i];\r\n        }\r\n        res.push(k % 10);\r\n    }\r\n    res.reverse();\r\n    return res;\r\n};\r\n```\r\n时间复杂度O(max(n,log k))","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jie-zi":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991888153","body":"思路：\r\n转换成两个vector，逐个按位相加，注意k可能比num长，因此要加上k比num长的部分\r\n```\r\nvector<int> addToArrayForm(vector<int>& num, int k) {\r\n    vector<int> res;\r\n    int n=num.size();\r\n    for(int i=n-1;i>=0;i--){\r\n        int sum=num[i]+k%10;\r\n        k=k/10;\r\n        if(sum>=10){\r\n            sum=sum-10;\r\n            k++;\r\n        }\r\n        res.push_back(sum);\r\n    }\r\n    while(k){\r\n        res.push_back(k%10);\r\n        k=k/10;\r\n    }\r\n    reverse(res.begin(),res.end());\r\n    return res;\r\n    }\r\n```\r\n\r\n时间复杂度O(n)\r\n空间复杂度O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"xjhcassy":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991891005","body":"#### 思路\n\n1. 采用LinkedList双向链表\n2. 将k依次加上num的各位，并取出最后一位\n\n代码\n\n```java\npublic List<Integer> addToArrayForm(int[] num, int k) {\n\n        int len = num.length;\n        int lastNum = k;\n        LinkedList<Integer> ret= new LinkedList<>();\n\n        int i = len-1;\n        while(i >=0 || lastNum > 0){\n            if(i >= 0){\n                lastNum+=num[i];\n            }\n            ret.addFirst(lastNum%10);\n            lastNum/=10;\n            i--;\n        }\n\n        return ret;\n\n    }\n```\n\n复杂度分析\n\n时间复杂度O(N);","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"aladingzl":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991893686","body":"### 思路\n\n从低位开始，将 A 的每一位与 K 的每一位相加，和大于10时，记录进位 “+1”，将和放到数组中，考虑 K 的长度大于 A 的情况，最后将数组翻转，返回结果\n\n### 代码\n\n```javascript\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function(num, k) {\n   const res = [];\n   for(let i = num.length - 1; i >= 0; i--) {\n       let sum = num[i] + k % 10;\n       k = Math.floor(k / 10);\n       if(sum >= 10) {\n           k++;\n           sum -= 10;\n       } \n       res.push(sum);\n   }\n   for(; k > 0; k = Math.floor(k / 10)) {\n       res.push(k % 10);\n   }\n   res.reverse();\n   return res;\n};\n```\n\n**复杂度分析**\n\n- 时间复杂度：O(N)\n- 空间复杂度：O(N)\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"wangdi-1291":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991893964","body":"-思路：从低位到高位依次计算，逐位将数字加在一起。任何时候，若加法的结果大于等于10，则进位为1。\r\n\r\n\r\n-代码:\r\n###\r\nclass Solution:\r\n\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n\r\n        n = len(num)\r\n\r\n        ans = list()\r\n\r\n        carry = 0\r\n\r\n        for i in range(n):\r\n\r\n            res = k % 10\r\n\r\n            sum = num[n-i-1] + res + carry\r\n\r\n            carry = 0\r\n\r\n            k //= 10 \r\n\r\n            if sum >= 10:\r\n\r\n                carry = 1\r\n\r\n                sum = sum % 10\r\n\r\n            ans.append(sum)\r\n\r\n        if k % 10 == 0 and k // 10 == 0 and carry == 1:\r\n\r\n            ans.append(1)\r\n\r\n        else:\r\n\r\n            while k % 10 != 0 or k // 10 != 0:\r\n\r\n                sum = k % 10 + carry\r\n\r\n                carry = 0\r\n\r\n                k //= 10\r\n\r\n                if sum >= 10:\r\n\r\n                    carry = 1\r\n\r\n                    sum = sum % 10\r\n\r\n                ans.append(sum)\r\n\r\n            if k % 10 == 0 and k // 10 == 0 and carry == 1:\r\n\r\n                ans.append(1)\r\n\r\n        ans.reverse()\r\n\r\n        return ans\r\n\r\n-时间复杂度：O(max(len(num), num_k)), num_k 是k的位数。\r\n-空间复杂度：O(max(len(num), num_k)), num_k 是k的位数。","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"offrande":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991894204","body":"第一天，慢慢学。。。复杂的思路想不出来\r\n```python\r\nclass Solution:\r\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\r\n        return [int(s) for s in str(int(\"\".join(list(map(str,num))))+k)]\r\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"kandejiandefeng":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991895510","body":"思路：把整数k裁成数组，两个倒叙 ，数组length大的循环，位数相加\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function(num, k) {\n    let kArr = k.toString().split('').map(item => parseInt(item));\n    let maxArr, minArr, a = 0;\n    if(kArr.length > num.length) {\n        maxArr = kArr.reverse();\n        minArr = num.reverse();\n    }else {\n        minArr = kArr.reverse();\n        maxArr = num.reverse();\n    }\n    const minLen = minArr.length\n    return maxArr.reduce((arr, item, index) => {\n        const n = index > minLen - 1 ? 0 : minArr[index];\n        arr.push((item + n + a) % 10);\n        a = Math.floor((item + n + a) / 10)\n        if(index === maxArr.length - 1 && a === 1) {\n            arr.push(1);\n        }\n        return arr;\n    }, []).reverse()\n};","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"rmadridxdh":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991896853","body":"### 代码\n```Python\nclass Solution:\n    def addToArrayForm(self, A: List[int], K: int) -> List[int]:\n        return list(map(int,str(int(''.join(map(str,A))) + K)))\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zzzpppy":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991898319","body":"思路：\r\n使用arraylist做为新数组存最后的值，从后遍历数组中的每一位数，分别与k的个位相加，如果有进位则用一个carry存进位，每一位最后的值就是k的个位+A数组的值+carry，最后当k为0且A遍历完之后，如果carry有进位则要加入新数组，然后因为新数组是从个位加进新数组中的，最后的结果便要把它反过来。\r\n\r\n代码：\r\npublic List<Integer> addToArrayForm(int[] A, int K) {\r\n    List<Integer> res = new ArrayList<>();\r\n    int carry = 0;\r\n    int l1 = A.length - 1;\r\n    while (l1 >= 0 || K != 0) {\r\n        int x = l1 < 0 ? 0 : A[l1];\r\n        int y = K == 0 ? 0 : K % 10;\r\n\r\n        int sum = x + y + carry;\r\n        res.add(sum % 10);\r\n        carry = sum / 10;\r\n\r\n        l1--;\r\n        K = K / 10;\r\n    }\r\n    if (carry != 0) res.add(carry);\r\n    Collections.reverse(res);\r\n    return res;\r\n}\r\n\r\n时间复杂度：O（n）\r\n空间复杂度：O（n）","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"uniqlell":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991899440","body":"``` java\n/**\n使用一个字母表示进位情况\n */\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer>list = new ArrayList<>();\n        int n = num.length;\n        int f = 0;\n        while(k>0||n>0){\n           int  yu = k%10;\n           int sum = 0;\n           if(n>0)\n             sum = num[n-1]+yu+f;\n            else sum = yu+f;\n            f  =0;\n            list.add(0,sum%10);\n            if(sum>9)\n            f  = 1;\n            n--;\n            k = k/10;\n        }\n        if(f>0)\n        list.add(0,f);\n        return list;\n    }\n}","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"alongchong":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991900063","body":"###思路\r\n从后往前加，然后翻转\r\n###代码\r\n```JAVA\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n    List<Integer> ans = new ArrayList<Integer>();\r\n        int l = num.length ;\r\n        int m = 0;\r\n        for (int i = l-1 ; i >= 0 ; i--){\r\n             m = num[i] + k % 10 ;\r\n             k /= 10;\r\n             if (m >= 10){\r\n                 k++;\r\n                 m -=10;\r\n             }\r\n             ans.add(m);\r\n        }\r\n          for (; k > 0; k /= 10) {\r\n           ans.add(k % 10);\r\n        }\r\n        Collections.reverse(ans);\r\n        return ans;        \r\n   }\r\n}\r\n```\r\n***复杂度分析***\r\n时间复杂度：$0(N)$\r\n空间复杂度：$0(N)$","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tesla-1i":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991900400","body":"```\nclass Solution:\n    def addToArrayForm(self, num, k) :\n        res = []\n        for n in num[::-1]:\n            k += n \n            res.insert(0, k%10)\n            k //= 10\n        while k:\n            res.insert(0, k%10)\n            k //= 10\n        return res\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"z1ggy-o":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991901442","body":"### 思路\r\n\r\n从末位相加即可。\r\n\r\n---\r\n\r\n实现的很差。放出来当个反例。\r\n\r\n我在实现的时候眼睛紧盯着两个数组进行来进行构建，然后想要把答案存放在已有的两个数组之一。\r\n\r\n但是这样的实现需要许多的边际确认，让代码变得十分复杂。\r\n而且在最后的结果有进位的情况下，还是要对数组进行扩容，然后做 rotation。\r\n得不偿失。\r\n\r\n### 代码\r\n\r\n\r\n```cpp\r\nclass Solution {\r\npublic:\r\n    vector<int> addToArrayForm(vector<int>& A, int K);\r\nprivate:\r\n    vector<int> int_to_arr(int n);\r\n};\r\n\r\nvector<int> Solution::addToArrayForm(vector<int>& A, int K)\r\n{\r\n    int carry;\r\n    int sum;\r\n    int idx_a, idx_b;\r\n    vector<int> a, b;\r\n\r\n    // edge case\r\n    if (K == 0)\r\n        return A;\r\n    \r\n    // 1. convert K to array format.\r\n    vector<int> K_arr = int_to_arr(K);\r\n    \r\n    // K can be greater than A\r\n    if (K_arr.size() > A.size()) {\r\n        a = A;\r\n        b = K_arr;    \r\n    } else {\r\n        a = K_arr;\r\n        b = A;\r\n    }\r\n\r\n    // 2. Add small number to large number from the last digit to the highest digit.\r\n    //    The result can have (A.lenght + 1) digits\r\n    idx_a = a.size() - 1;\r\n    idx_b = b.size() - 1;\r\n    carry = 0;\r\n\r\n    // add all digit \r\n    int len = a.size();\r\n    for (int i = 0; i < len; i++) {\r\n        sum = a[idx_a] + b[idx_b] + carry;\r\n        if (sum <= 9) {\r\n            b[idx_b] = sum;\r\n            carry = 0;\r\n        } else {\r\n            b[idx_b] = sum - 10;\r\n            carry = 1;\r\n        }\r\n        idx_a--;\r\n        idx_b--;\r\n    }\r\n\r\n    if (carry == 0)\r\n        return b;\r\n\r\n    if (idx_a == idx_b) {\r\n        b.insert(b.begin(), carry);\r\n        return b;\r\n    }\r\n\r\n    // add the last carry to b\r\n    while (carry != 0 && idx_b >= 0) {\r\n        sum = b[idx_b] + carry;\r\n        if (sum <= 9) {\r\n            b[idx_b] = sum;\r\n            carry = 0;\r\n        } else {\r\n            b[idx_b] = sum - 10;\r\n            carry = 1;\r\n        }\r\n        idx_b--;\r\n    }\r\n    \r\n    if (carry) {\r\n        b.insert(b.begin(), carry);\r\n    }\r\n    return b;\r\n}\r\n\r\nvector<int> Solution::int_to_arr(int n)\r\n{\r\n    int r;\r\n    vector<int> arr;\r\n\r\n    while (n != 0) {\r\n        r = n % 10;\r\n        n = n / 10;\r\n        arr.push_back(r);\r\n    }\r\n\r\n    reverse(arr.begin(), arr.end());\r\n    return arr;\r\n}\r\n```\r\n\r\n**复杂度分析**\r\n- 时间复杂度：O(N)，其中 N 为较长数组的长度。\r\n- 空间复杂度：O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"orderkk":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991902776","body":"function fn(arr, number) {\n    let a1 = Number(arr.join(''));\n    let result = BigInt(a1) + BigInt(number)\n    return String(result).split('')\n}","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"dudongli":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991903064","body":"思路：,将num和k从个位起逐位相加，最终然后反转res即可。\nfor i in range(len(num)-1,-1, -1):\n            A = num[i] + k % 10\n            k = k // 10\n            if A >= 10:\n                k += 1\n            res.append(A%10)\n        while k >0:\n            res.append(k%10)\n            k = k // 10\n        res.reverse()\n        return(res)\n时间复杂度O（n）","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"cureforu":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991904791","body":"### 思路\n\n模拟竖式计算\n\n### 代码\n\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> res = new LinkedList<>();\n        int idx = num.length-1;\n        int carry = 0;\n        while (idx >= 0 || k > 0) {\n            int x = idx >= 0 ? num[idx] : 0;\n            int y = k > 0 ? k % 10 : 0;\n            int sum = x+y+carry;\n            res.add(0, sum%10);\n            carry = sum / 10;\n            idx--;\n            k /= 10;\n        }\n        if (carry == 1) {\n            res.add(0, 1);\n        }\n        return res;\n    }\n}\n```\n\n**复杂度分析**\n\n- 时间复杂度：O(N)\n- 空间复杂度：O(N)\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lilililisa1998":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991905659","body":"思路：先把数字k转化为数组，然后比较两个数组的长度，用0将较短的数组填充到与长数组等长，然后进行等位相加\r\nclass Solution(object):\r\n    def addToArrayForm(self, num, k):\r\n \r\n        L_k = []\r\n        while (k / 10 != 0):\r\n            L_k.append(k % 10)\r\n            k=int(k / 10)\r\n        num= list(reversed(num))\r\n        ln=len(num)\r\n        lk=len(L_k)\r\n        if lk>ln:\r\n            q=[0]*(lk-ln)\r\n            num.extend(q)\r\n        elif lk==ln:\r\n            num.append(0)\r\n        else:\r\n            q=[0]*(ln-lk)\r\n            L_k.extend(q)\r\n\r\n        for i in range(len(num)-1):\r\n            w=num[i] + L_k[i]\r\n            num[i]=w%10\r\n            num[i+1]=int(w/10)+num[i+1]\r\n        if num[len(num)-1]==0:\r\n            num=num[:-1]\r\n        num = list(reversed(num))\r\n        return num\r\n\r\n时间复杂度O(n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"macvh":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991905870","body":"class Solution(object):\r\n    def addToArrayForm(self, num, k):\r\n        \"\"\"\r\n        :type num: List[int]\r\n        :type k: int\r\n        :rtype: List[int]\r\n        思路：类似于大数相加，先把数字k转化为数组，\r\n        \"\"\"\r\n        L_k = []\r\n        while (k / 10 != 0):\r\n            L_k.append(k % 10)\r\n            k=int(k / 10)\r\n        num= list(reversed(num))\r\n        ln=len(num)\r\n        lk=len(L_k)\r\n        if lk>ln:\r\n            q=[0]*(lk-ln)\r\n            num.extend(q)\r\n        elif lk==ln:\r\n            num.append(0)\r\n        else:\r\n            q=[0]*(ln-lk)\r\n            L_k.extend(q)\r\n\r\n        for i in range(len(num)-1):\r\n            w=num[i] + L_k[i]\r\n            num[i]=w%10\r\n            num[i+1]=int(w/10)+num[i+1]\r\n        if num[len(num)-1]==0:\r\n            num=num[:-1]\r\n        num = list(reversed(num))\r\n        return num","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"callmeeliza":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991907902","body":"## 思路\n新增temp数组存上次计算的进位1，每次取三个数组的末位数进行相加，取余数存进res数组中，直到三个数组都空的时候，计算结束\n## 代码\n```javascript\nvar addToArrayForm = function(num, k) {\n    let cur = String(k).split('');\n    let res = [];\n    let temp = []\n    while(num.length > 0 || cur.length > 0 || temp.length > 0) {\n        let a = Number(num.pop() || 0);\n        let b = Number(cur.pop() || 0);\n        let c = Number(temp.pop() || 0);\n        if(a + b + c >= 10) {\n            res.unshift((a+ b + c)%10);\n            temp.push(1);\n        } else {\n            res.unshift(a+b+c)\n        }\n    }\n    return res\n};\n```\n## 复杂度分析\n-时间复杂度：O(n)，其中n为num和k的最大长度\n-空间复杂度：O(n)，其中n为num和k的最大长度或最大长度+1","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"tiquiero":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991910240","body":"### 思路\n把数组A从后开始循环，整数K也从个位数开始，把两个相加，\n如果大于10有进位，把进位存carry变量，结果res存数组。\n每次循环把carry一起相加，最后反转res数组。\n\n### 代码\n\n```js\nvar addToArray = function(A, K) {\n    const res = [];\n    let i = A.length - 1, carry = 0;\n    while (i >=0 || K != 0) {\n        const x = i >= 0 ? num[i] : 0;\n        const y = K != 0 ? K % 10 : 0;\n        const sum = x + y + carry;\n\n        res.push(sum % 10);\n        carry = Math.floor(sum / 10);\n        i--;\n        K = Math.floor(K / 10);\n    }\n    if (carry) res.push(carry);\n    return res.reverse();\n}\n```\n\n** 复杂度分析 **\n- 时间复杂度O（n）\n- 空间复杂度O（n）","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"lifuquan1208":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991910622","body":"思路：首先循环数组的，取得数组的末位进行相加之后的取余，放进结果数组，然后对相加后的结果除10去掉末位，循环结束后需要把相加的最后结果放进结果的集合中。\n代码：\n  class Solution {\n\n​    public List<Integer> addToArrayForm(int[] num, int k) {\n\n​         List<Integer> result = new ArrayList<Integer>();\n\n​        int len=num.length-1;\n\n​        for (int i=len; i>=0;i--){\n\n​            int temp=num[i]+k;\n\n​            result.add(temp%10);\n\n​             k=temp/10;\n\n​        }\n\n​        while(k!=0){\n\n​            result.add(k%10);\n\n​            k=k/10;\n\n​        }\n\n​        Collections.reverse(result);\n\n​        return result;\n\n​    }\n\n时间复杂度：0（n)\n空间复杂度：0（n)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"weijie-he":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991911734","body":"## 思路\n\n模拟真正的加法计算过程\n\n从后往前依次逐位相加，如果 >=10 则进位\n\n\n\n## 代码\n\n```java\npublic List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> result = new ArrayList<>();\n        int len = num.length;\n        for (int i = len - 1;i >= 0;i--){\n            int a = num[i] + k % 10;\n            k /= 10;\n            // 如果和 > 10，需要进位\n            if (a >= 10 ){\n                k++;\n            }\n            result.add(a % 10);\n        }\n\n        // 上面循环做完，只求了结果后len位的值，由于可能进位，所以k可能还有很多位\n        for (; k > 0; k /= 10) {\n            result.add(k % 10);\n        }\n\n        Collections.reverse(result);\n        return result;\n\n    }\n```\n\n\n## 复杂度分析\n\n- 时间复杂度：O(N)，遍历数组的时间\n- 空间复杂度：O(N)，存储 result 的空间\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"seventeencui":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991915088","body":"### 思路\r\n先反转，然后模拟加法运算。\r\n### 代码\r\n```\r\nclass Solution {\r\npublic:\r\n    vector<int> addToArrayForm(vector<int>& num, int k) {\r\n        reverse(num.begin(), num.end());\r\n\r\n        for (auto& x: num) {\r\n            k += x;\r\n            x = k % 10;\r\n            k /= 10;\r\n        }\r\n        while (k) num.push_back(k % 10), k /= 10;\r\n\r\n        reverse(num.begin(), num.end());\r\n        return num;\r\n    }\r\n};\r\n\r\n```\r\n### 复杂度分析\r\n时间复杂度 O(n)\r\n空间复杂度 O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"fornobugworld":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991916230","body":"### 思路\n\n参考了题解中两数相加通用模板\n\n### 代码\n\n\n```py（此处换成你的语言，比如js，py 等）\ndef addToArrayForm(self, A: List[int], K: int) -> List[int]:\n    res = []\n    i, carry = len(A) - 1, 0\n    while i >= 0 or K != 0:\n        x = A[i] if i >= 0 else 0\n        y = K % 10 if K != 0 else 0\n\n        sum = x + y + carry\n        res.append(sum % 10)\n        carry = sum // 10\n\n        i -= 1\n        K //= 10\n    if carry != 0: res.append(carry)\n    return res[::-1]\n\n\n```\n\n**复杂度分析**\n- 时间复杂度：O(N)，其中 N 为数组长度。\n- 空间复杂度：O(N)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"zhouxsss":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991917000","body":"### 思路\n数组倒叙和加数 K 的个位数相加，K 减掉个位数模10后进位\n\n### 复杂度分析\n- 时间复杂度：O(N)，其中 N 为数组长度。\n- 空间复杂度：O(1)\n\n### 代码\n\n```js\nfunction addToArrayForm(A, K) {\n  var ALen = A.length\n  if(!ALen) return []\n  // 进位\n  var add = 0\n  var res = []\n  for(let i = ALen - 1; i >= 0; i--) {\n    var basic = K % 10\n    // K % 10 个位数\n    var sum = A[i] + basic + add\n    if(sum >= 10) {\n      sum = sum - 10\n      add = 1\n    } else {\n        add = 0\n    }\n    res.unshift(sum)\n    K = (K - basic)/10\n  }\n  // 如果还有加项或者没加完的K的剩下位数，则直接连接\n  if(K || add) {\n    res = (K + add).toString().split('').concat(res)\n  }\n  return res\n}\n\n```","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"hoye1113":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991917040","body":"思路：\r\n从k的个位和数组的最后元素入手，k先模10拿到个位，与数组最后一位相加后结果放入res数组，\r\n接着k/=10处理除去个位，继续拿十位数，与数组倒数第二个元素相加，如果有进位则返到k值\r\nk还小于0不需要进位且A数组没有值的情况，则环循环结束。\r\n\r\n代码：js语言\r\n\r\nvar addToArrayForm = function(A, K) {\r\n  let i = A.length - 1\r\n  let res = []\r\n  while (i >= 0 || K){\r\n    K += (A[i] || 0)\r\n    res.push( K % 10 )\r\n    K = K / 10 | 0\r\n    i--\r\n    }\r\n    return res.reverse()\r\n};\r\n\r\n\r\n复杂度分析：\r\n时间复杂度O（n）\r\n空间复杂度O（n）","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"gaoyi86":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991918034","body":"### 思路\n\n从低位到高位计算，注意进位和边界处理。\n\n### 代码\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        List<Integer> res = new LinkedList<>();\n        int n = num.length;\n        for (int i = n - 1; i >= 0; i--) {\n            res.add(0, (num[i] + k) % 10);\n            k = (num[i] + k) / 10;\n        }\n\n        while (k > 0) {\n            res.add(0, k % 10);\n            k /= 10;\n        }\n\n        return res;\n    }\n}\n```\n\n**复杂度分析**\n\\- 时间复杂度：O(1)\n\\- 空间复杂度：O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"ivangin":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991918630","body":"#### 思路：\r\n从右向左进行加法，记录进位，同时兼容超出num总位数的情况。使用LinkedList，参考链表头插法，减少后续转置操作。\r\n#### 代码\r\n```java \r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        int i = num.length - 1;\r\n        LinkedList<Integer> ans = new LinkedList<>();\r\n        while (k > 0 || i >= 0) {\r\n            if (i >= 0){\r\n                k += num[i--];\r\n            }    \r\n            ans.addFirst(k % 10);\r\n            k /= 10;\r\n        }\r\n        return ans;\r\n    }\r\n}\r\n\r\n```\r\n\r\n#### 复杂度分析\r\n时间复杂度  O(max(m,n))，m是数组num的长度，n是k数位的个数\r\n空间复杂度 O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"guoling0019":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991918971","body":"## 思路\n从右向左开始，数组的最后一位与k的最后一位相加，如果和小于10，放入新数组，如果大于10，取余，向左进一位\n\n\n## 代码\n\n- 语言支持：JavaScript\n\nJavaScript Code:\n\n```javascript\n\n/**\n * @param {number[]} num\n * @param {number} k\n * @return {number[]}\n */\nvar addToArrayForm = function(num, k) {\n    let sumArr = []\n\n        for(let i=num.length-1;i>=0;--i){\n            let sum = num[i]+k%10\n            k=Math.floor(k/10)\n            if(sum>=10){\n                k++\n                sum-=10\n            }\n            sumArr.push(sum)\n        }\n        for(;k>0;k=Math.floor(k/10)){\n            sumArr.push(k%10)\n        }\n        \n        return sumArr.reverse()\n};\n\n```\n\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"extra-man":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991920337","body":"### 思路\r\n自己想的贼复杂，还不对，最后看的力扣的答案\r\n### 代码\r\n//自己写不出来，抄的答案，\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] num, int k) {\r\n        List<Integer> res = new ArrayList<Integer>();\r\n        int n = num.length;\r\n        for (int i = n - 1; i >= 0; --i) {\r\n            int sum = num[i] + k % 10;\r\n            k /= 10;\r\n            if (sum >= 10) {\r\n                k++;\r\n                sum -= 10;\r\n            }\r\n            res.add(sum);\r\n        }\r\n        for (; k > 0; k /= 10) {\r\n            res.add(k % 10);\r\n        }\r\n        Collections.reverse(res);\r\n        return res;\r\n    }\r\n}\r\n### 复杂度分析\r\n时间复杂度：O(\\max(n,\\log k))O(max(n,logk))，其中 nn 为数组的长度。\r\n\r\n空间复杂度：O(1)O(1)\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"a1exlism":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991921856","body":"### 思路\r\n\r\n注意范围, 还有两处边界\r\n\r\n### 代码\r\n\r\n```python\r\nclass Solution:\r\n    def addToArrayForm(self, A: List[int], K: int) -> List[int]:\r\n        for i in range(len(A)-1, -1, -1):\r\n            K += A[i]\r\n            A[i] = K % 10\r\n            K //= 10\r\n        while(K > 0):\r\n            A.insert(0, K % 10)\r\n            K //= 10\r\n        return A\r\n```\r\n\r\n**复杂度分析**\r\n\r\n- 时间复杂度：O(N)，其中 N 为数组长度。\r\n- 空间复杂度：O(N) (包括数组A大小)\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"yetfan":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991922535","body":"\n**思路**\n\n数字小的直接用加法\n\n数字大的，要考虑和k的加法和进位，超过k就只考虑进位\n\n**代码**\n\n```python\nclass Solution:\n    def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n\n        if len(num) <= len(str(k)):\n            return [int(j) for j in list(str(int(\"\".join([str(i) for i in num])) + k))]\n\n\n        k = [int(i) for i in list(str(k))]\n        c = 0\n        for j in range(len(num)-1,len(num)-len(k)-1,-1):\n            n = num[j] + k[j-len(num)+len(k)] + c\n            num[j] = n % 10\n            c = n // 10\n\n        for j in range(len(num)-len(k)-1,-1,-1):\n            print(j)\n            print(num[j],c)\n\n            if c == 0:\n                return num\n            else:\n                n = num[j] + c\n                num[j] = n % 10\n                c = n // 10\n\n        if c == 1:\n            return [1] + num\n        else:\n            return num\n```\n\n**复杂度分析**\n\n时间 O(n) 加过k之后，如果没有进位会提前结束\n\n空间 O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"jackzcai":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991922549","body":"//1，不可将A数组遍历得到sumA，与K做加法得到和，原因：A数组的长度可能很长，整数越界；\r\n//2，将K与A倒序的每个元素相加得到和，将和取模得到每个元素，插入到新数组中。\r\nclass Solution {\r\n    public List<Integer> addToArrayForm(int[] A, int K) {\r\n        int len = A.length;\r\n        int lastNum =K;\r\n        LinkedList<Integer> ret= new LinkedList<>();\r\n        int i = len-1;\r\n        while(i >=0 || lastNum > 0){\r\n            int tmp = lastNum % 10 + (i >= 0 ? A[i] : 0);\r\n            ret.addFirst(tmp%10);\r\n            lastNum = lastNum / 10 + tmp / 10;\r\n            i--;\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"helloxkw":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991922639","body":"思路：\n从k的个位和数组的最后元素入手，k先模10拿到个位，与数组最后一位相加后结果放入res数组，\n接着k/=10处理除去个位，继续拿十位数，与数组倒数第二个元素相加，如果有进位则返到k值\nk还小于0不需要进位且A数组没有值的情况，则环循环结束。\nclass Solution {\n    public List<Integer> addToArrayForm(int[] num, int k) {\n        //用LinkedList不断从头将位数和加入index 0\n        List<Integer> res = new LinkedList<>();\n        int n = num.length;\n        for (int i = n - 1; i >= 0; i--) {\n            //从末尾往前扫，加和取余的值\n            res.add(0, (num[i] + k) % 10);\n            //更新k存进位carry\n            k = (num[i] + k) / 10;\n        }\n\n        // post-possing: 处理k位数大于num的情况剩下的部分\n        // Time = O(log(k))\n        while (k > 0) {\n            res.add(0, k % 10);\n            k /= 10;\n        }\n\n        return res;\n    }\n}\n\n复杂度分析\n时间复杂度 O(max(m,n))，m是数组num的长度，n是k数位的个数\n空间复杂度 O(1)","onTime":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"mongoczk":[{"url":"https://github.com/leetcode-pp/91alg-6-daily-check/issues/1#issuecomment-991924489","body":"思路：\r\n逐位相加：逐位将数字加在一起，若加法结果大于等于10，则需要进位\r\n代码：**JavaScript**\r\n```javascript \r\n var addToArrayForm = function(num, k) {\r\n  const arr = []\r\n  const len = num.length\r\n  for( let i = len-1; i >= 0; i-- ){\r\n    let sum = num[i] + k % 10;\r\n    k = Math.floor(k / 10);\r\n    if( sum >= 10){\r\n      k++;\r\n      sum -= 10 \r\n    }\r\n    arr.push(sum)\r\n  }\r\n  for(; k > 0; k = Math.floor( k / 10)){\r\n    arr.push(k % 10)\r\n  }\r\n  return arr.reverse();\r\n};\r\n```\r\n\r\n复杂度分析\r\n时间复杂度：O(N)，其中 N为数组的长度。\r\n空间复杂度：O(1), 除了返回值以外，使用了一个常数记录数组的长度。","onTime":false},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}